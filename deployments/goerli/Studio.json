{
  "address": "0x1321068e05A9587f746805CCFe6B073172B689a4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_canvas",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_element",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_auctionStartDelay",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "artist",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimedRevenue",
          "type": "uint256"
        }
      ],
      "name": "ArtistRevenueClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "auctionERC20",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionStartTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionEndTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionStartPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionEndPrice",
          "type": "uint256"
        }
      ],
      "name": "AuctionScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionStartDelay",
          "type": "uint256"
        }
      ],
      "name": "AuctionStartDelayUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "canvasId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "unwrapper",
          "type": "address"
        }
      ],
      "name": "CanvasUnwrapped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "canvasTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "wrapper",
          "type": "address"
        }
      ],
      "name": "CanvasWrapped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "elementCategoryIndexes",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "elementIndexes",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "elementQuantities",
          "type": "uint256[]"
        }
      ],
      "name": "ElementBought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimedRevenue",
          "type": "uint256"
        }
      ],
      "name": "PlatformRevenueClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        }
      ],
      "name": "ProjectCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FEE_DENOMINATOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_admins",
          "type": "address[]"
        }
      ],
      "name": "addAdmins",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "artistClaimableRevenues",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auctionPlatformFeeNumerator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auctionStartDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_elementCategoryIndexes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_elementIndexes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_elementQuantities",
          "type": "uint256[]"
        }
      ],
      "name": "buyElements",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_elementCategoryIndexesToBuy",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_elementIndexesToBuy",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_elementQuantitiesToBuy",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_maxERC20ToSpend",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_elementIndexesToWrap",
          "type": "uint256[]"
        }
      ],
      "name": "buyElementsAndWrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canvas",
      "outputs": [
        {
          "internalType": "contract ICanvas",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "canvases",
      "outputs": [
        {
          "internalType": "bool",
          "name": "wrapped",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "claimArtistRevenue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "claimPlatformRevenue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_elementCategoryIndexes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_elementIndexes",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "_elementLabels",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "_elementValues",
          "type": "string[]"
        },
        {
          "internalType": "uint256[][]",
          "name": "_elementAmounts",
          "type": "uint256[][]"
        },
        {
          "internalType": "address[]",
          "name": "_elementRecipients",
          "type": "address[]"
        }
      ],
      "name": "createAndUpdateElements",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_artistAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxSupply",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_metadata",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_elementCategoryLabels",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "_elementCategoryValues",
          "type": "string[]"
        },
        {
          "internalType": "string[][]",
          "name": "_elementLabels",
          "type": "string[][]"
        },
        {
          "internalType": "string[][]",
          "name": "_elementValues",
          "type": "string[][]"
        },
        {
          "internalType": "uint256[][][]",
          "name": "_elementAmounts",
          "type": "uint256[][][]"
        },
        {
          "internalType": "address[]",
          "name": "_recipients",
          "type": "address[]"
        }
      ],
      "name": "createProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "element",
      "outputs": [
        {
          "internalType": "contract IElement",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_canvasId",
          "type": "uint256"
        }
      ],
      "name": "getCanvasElementLabels",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "elementLabels",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_canvasId",
          "type": "uint256"
        }
      ],
      "name": "getCanvasElementValues",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "elementValues",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_canvasId",
          "type": "uint256"
        }
      ],
      "name": "getCanvasHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_canvasTokenId",
          "type": "uint256"
        }
      ],
      "name": "getCanvasURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "getIsAdmins",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_canvasId",
          "type": "uint256"
        }
      ],
      "name": "getIsCanvasWrapped",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectArtist",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectElementAuctionPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectElementCategoryLabels",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectElementCategoryValues",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectElementLabels",
      "outputs": [
        {
          "internalType": "string[][]",
          "name": "elementLabels",
          "type": "string[][]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectElementTokenIds",
      "outputs": [
        {
          "internalType": "uint256[][]",
          "name": "",
          "type": "uint256[][]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectElementValues",
      "outputs": [
        {
          "internalType": "string[][]",
          "name": "elementValues",
          "type": "string[][]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "canvasId",
          "type": "uint256"
        }
      ],
      "name": "getProjectIdFromCanvasId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectIsLocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectMetadata",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectScriptCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectScripts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "_scripts",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "lockProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "platformClaimableRevenues",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_admins",
          "type": "address[]"
        }
      ],
      "name": "removeAdmins",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_auctionERC20",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_auctionStartTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_auctionEndTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_auctionStartPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_auctionEndPrice",
          "type": "uint256"
        }
      ],
      "name": "scheduleAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_canvasId",
          "type": "uint256"
        }
      ],
      "name": "unwrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_auctionStartDelay",
          "type": "uint256"
        }
      ],
      "name": "updateAuctionStartDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "updateBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "string[]",
          "name": "_elementCategoryLabels",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "_elementCategoryValues",
          "type": "string[]"
        }
      ],
      "name": "updateElementCategories",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_elementCategoryIndexes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_elementIndexes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_elementTokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "updateElements",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_metadata",
          "type": "string"
        }
      ],
      "name": "updateMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_scriptIndex",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_script",
          "type": "string"
        }
      ],
      "name": "updateScript",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userNonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_elementIndexes",
          "type": "uint256[]"
        }
      ],
      "name": "wrap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_canvasTokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc2523cf58fcdcdd2230f84ce2dbeb33089c6ac1ebfcbfcae6c22d4263333a460",
  "receipt": {
    "to": null,
    "from": "0x7930DdA80157Fcc47ba9c3836398c82d89C16416",
    "contractAddress": "0x1321068e05A9587f746805CCFe6B073172B689a4",
    "transactionIndex": 67,
    "gasUsed": "4423780",
    "logsBloom": "0x
    "blockHash": "0x67ebdbfe30d11cdf118c5f87dc431323cf41e68ddd323280436d333161470e14",
    "transactionHash": "0xc2523cf58fcdcdd2230f84ce2dbeb33089c6ac1ebfcbfcae6c22d4263333a460",
    "logs": [
      {
        "transactionIndex": 67,
        "blockNumber": 8122648,
        "transactionHash": "0xc2523cf58fcdcdd2230f84ce2dbeb33089c6ac1ebfcbfcae6c22d4263333a460",
        "address": "0x1321068e05A9587f746805CCFe6B073172B689a4",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000007930dda80157fcc47ba9c3836398c82d89c16416"
        ],
        "data": "0x",
        "logIndex": 133,
        "blockHash": "0x67ebdbfe30d11cdf118c5f87dc431323cf41e68ddd323280436d333161470e14"
      },
      {
        "transactionIndex": 67,
        "blockNumber": 8122648,
        "transactionHash": "0xc2523cf58fcdcdd2230f84ce2dbeb33089c6ac1ebfcbfcae6c22d4263333a460",
        "address": "0x1321068e05A9587f746805CCFe6B073172B689a4",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000007930dda80157fcc47ba9c3836398c82d89c16416",
          "0x0000000000000000000000007930dda80157fcc47ba9c3836398c82d89c16416"
        ],
        "data": "0x",
        "logIndex": 134,
        "blockHash": "0x67ebdbfe30d11cdf118c5f87dc431323cf41e68ddd323280436d333161470e14"
      }
    ],
    "blockNumber": 8122648,
    "cumulativeGasUsed": "17293065",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7930DdA80157Fcc47ba9c3836398c82d89C16416",
    "0x24D201AaB63fE457ec602EE8315a126Ce3874412",
    "0x5d98D86877B3430F6AecCC0B0959db42A255C617",
    1,
    "https://intrinsic.art"
  ],
  "numDeployments": 1,
  "solcInputHash": "182f0ad71169601fa26d1277bc5561d7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_canvas\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_element\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_auctionStartDelay\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"artist\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimedRevenue\",\"type\":\"uint256\"}],\"name\":\"ArtistRevenueClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"auctionERC20\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionStartTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionEndTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionStartPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionEndPrice\",\"type\":\"uint256\"}],\"name\":\"AuctionScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionStartDelay\",\"type\":\"uint256\"}],\"name\":\"AuctionStartDelayUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"canvasId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"unwrapper\",\"type\":\"address\"}],\"name\":\"CanvasUnwrapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"canvasTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wrapper\",\"type\":\"address\"}],\"name\":\"CanvasWrapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"elementCategoryIndexes\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"elementIndexes\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"elementQuantities\",\"type\":\"uint256[]\"}],\"name\":\"ElementBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimedRevenue\",\"type\":\"uint256\"}],\"name\":\"PlatformRevenueClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"name\":\"ProjectCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FEE_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_admins\",\"type\":\"address[]\"}],\"name\":\"addAdmins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"artistClaimableRevenues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionPlatformFeeNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionStartDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_elementCategoryIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_elementIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_elementQuantities\",\"type\":\"uint256[]\"}],\"name\":\"buyElements\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_elementCategoryIndexesToBuy\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_elementIndexesToBuy\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_elementQuantitiesToBuy\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_maxERC20ToSpend\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_elementIndexesToWrap\",\"type\":\"uint256[]\"}],\"name\":\"buyElementsAndWrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canvas\",\"outputs\":[{\"internalType\":\"contract ICanvas\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"canvases\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"wrapped\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimArtistRevenue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimPlatformRevenue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_elementCategoryIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_elementIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"_elementLabels\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_elementValues\",\"type\":\"string[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"_elementAmounts\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[]\",\"name\":\"_elementRecipients\",\"type\":\"address[]\"}],\"name\":\"createAndUpdateElements\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_artistAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_metadata\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_elementCategoryLabels\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_elementCategoryValues\",\"type\":\"string[]\"},{\"internalType\":\"string[][]\",\"name\":\"_elementLabels\",\"type\":\"string[][]\"},{\"internalType\":\"string[][]\",\"name\":\"_elementValues\",\"type\":\"string[][]\"},{\"internalType\":\"uint256[][][]\",\"name\":\"_elementAmounts\",\"type\":\"uint256[][][]\"},{\"internalType\":\"address[]\",\"name\":\"_recipients\",\"type\":\"address[]\"}],\"name\":\"createProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"element\",\"outputs\":[{\"internalType\":\"contract IElement\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_canvasId\",\"type\":\"uint256\"}],\"name\":\"getCanvasElementLabels\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"elementLabels\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_canvasId\",\"type\":\"uint256\"}],\"name\":\"getCanvasElementValues\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"elementValues\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_canvasId\",\"type\":\"uint256\"}],\"name\":\"getCanvasHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_canvasTokenId\",\"type\":\"uint256\"}],\"name\":\"getCanvasURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"getIsAdmins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_canvasId\",\"type\":\"uint256\"}],\"name\":\"getIsCanvasWrapped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectArtist\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectElementAuctionPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectElementCategoryLabels\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectElementCategoryValues\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectElementLabels\",\"outputs\":[{\"internalType\":\"string[][]\",\"name\":\"elementLabels\",\"type\":\"string[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectElementTokenIds\",\"outputs\":[{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectElementValues\",\"outputs\":[{\"internalType\":\"string[][]\",\"name\":\"elementValues\",\"type\":\"string[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"canvasId\",\"type\":\"uint256\"}],\"name\":\"getProjectIdFromCanvasId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectIsLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectScriptCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectScripts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"_scripts\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"lockProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"platformClaimableRevenues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_admins\",\"type\":\"address[]\"}],\"name\":\"removeAdmins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_auctionERC20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_auctionStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_auctionEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_auctionStartPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_auctionEndPrice\",\"type\":\"uint256\"}],\"name\":\"scheduleAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_canvasId\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_auctionStartDelay\",\"type\":\"uint256\"}],\"name\":\"updateAuctionStartDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"name\":\"updateBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"_elementCategoryLabels\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_elementCategoryValues\",\"type\":\"string[]\"}],\"name\":\"updateElementCategories\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_elementCategoryIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_elementIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_elementTokenIds\",\"type\":\"uint256[]\"}],\"name\":\"updateElements\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_metadata\",\"type\":\"string\"}],\"name\":\"updateMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scriptIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_script\",\"type\":\"string\"}],\"name\":\"updateScript\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userNonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_elementIndexes\",\"type\":\"uint256[]\"}],\"name\":\"wrap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_canvasTokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Studio.sol\":\"Studio\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !Address.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x4823752b07b8ea4ca971b217e39457930e7cb103c2c91e2a29729e5ca907e4f0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/utils/ERC1155Holder.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ERC1155Receiver.sol\\\";\\n\\n/**\\n * Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\\n *\\n * IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\\n * stuck.\\n *\\n * @dev _Available since v3.1._\\n */\\ncontract ERC1155Holder is ERC1155Receiver {\\n    function onERC1155Received(\\n        address,\\n        address,\\n        uint256,\\n        uint256,\\n        bytes memory\\n    ) public virtual override returns (bytes4) {\\n        return this.onERC1155Received.selector;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address,\\n        address,\\n        uint256[] memory,\\n        uint256[] memory,\\n        bytes memory\\n    ) public virtual override returns (bytes4) {\\n        return this.onERC1155BatchReceived.selector;\\n    }\\n}\\n\",\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155Receiver.sol\\\";\\nimport \\\"../../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n}\\n\",\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/utils/ERC721Holder.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721Receiver.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC721Receiver} interface.\\n *\\n * Accepts all token transfers.\\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\\n */\\ncontract ERC721Holder is IERC721Receiver {\\n    /**\\n     * @dev See {IERC721Receiver-onERC721Received}.\\n     *\\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes memory\\n    ) public virtual override returns (bytes4) {\\n        return this.onERC721Received.selector;\\n    }\\n}\\n\",\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/Marketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\\\";\\r\\nimport \\\"./Projects.sol\\\";\\r\\nimport \\\"./interfaces/IMarketplace.sol\\\";\\r\\n\\r\\nabstract contract Marketplace is IMarketplace, Projects, ERC1155Holder {\\r\\n    using SafeERC20 for IERC20;\\r\\n\\r\\n    uint256 public constant auctionPlatformFeeNumerator = 100_000_000;\\r\\n    uint256 public constant FEE_DENOMINATOR = 1_000_000_000;\\r\\n    uint256 public auctionStartDelay;\\r\\n\\r\\n    mapping(address => mapping(address => uint256))\\r\\n        public artistClaimableRevenues; // Artist address => ERC-20 address => Amount\\r\\n    mapping(address => uint256) public platformClaimableRevenues; // ERC-20 address => Revenue amount\\r\\n\\r\\n    function buyElements(\\r\\n        uint256 _projectId,\\r\\n        uint256[] calldata _elementCategoryIndexes,\\r\\n        uint256[] calldata _elementIndexes,\\r\\n        uint256[] calldata _elementQuantities\\r\\n    ) public {\\r\\n        require(\\r\\n            _elementCategoryIndexes.length == _elementIndexes.length,\\r\\n            \\\"M01\\\"\\r\\n        );\\r\\n        require(\\r\\n            _elementCategoryIndexes.length == _elementQuantities.length,\\r\\n            \\\"M01\\\"\\r\\n        );\\r\\n\\r\\n        uint256 totalQuantity;\\r\\n\\r\\n        for (uint256 i; i < _elementCategoryIndexes.length; i++) {\\r\\n            uint256 elementTokenId = projects[_projectId].elementTokenIds[\\r\\n                _elementCategoryIndexes[i]\\r\\n            ][_elementIndexes[i]];\\r\\n            require(\\r\\n                element.balanceOf(address(this), elementTokenId) >=\\r\\n                    _elementQuantities[i],\\r\\n                \\\"M02\\\"\\r\\n            );\\r\\n\\r\\n            totalQuantity += _elementQuantities[i];\\r\\n            element.safeTransferFrom(\\r\\n                address(this),\\r\\n                msg.sender,\\r\\n                elementTokenId,\\r\\n                _elementQuantities[i],\\r\\n                \\\"\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        uint256 erc20Amount = totalQuantity *\\r\\n            getProjectElementAuctionPrice(_projectId);\\r\\n\\r\\n        address auctionERC20 = projects[_projectId].auctionERC20;\\r\\n\\r\\n        IERC20(auctionERC20).transferFrom(\\r\\n            msg.sender,\\r\\n            address(this),\\r\\n            erc20Amount\\r\\n        );\\r\\n\\r\\n        uint256 platformRevenue = (erc20Amount * auctionPlatformFeeNumerator) /\\r\\n            FEE_DENOMINATOR;\\r\\n        platformClaimableRevenues[auctionERC20] += platformRevenue;\\r\\n        artistClaimableRevenues[projects[_projectId].artistAddress][\\r\\n            auctionERC20\\r\\n        ] += erc20Amount - platformRevenue;\\r\\n\\r\\n        emit ElementBought(\\r\\n            msg.sender,\\r\\n            _projectId,\\r\\n            _elementCategoryIndexes,\\r\\n            _elementIndexes,\\r\\n            _elementQuantities\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function scheduleAuction(\\r\\n        uint256 _projectId,\\r\\n        address _auctionERC20,\\r\\n        uint256 _auctionStartTime,\\r\\n        uint256 _auctionEndTime,\\r\\n        uint256 _auctionStartPrice,\\r\\n        uint256 _auctionEndPrice\\r\\n    ) external onlyAdmin {\\r\\n        require(projects[_projectId].locked, \\\"M03\\\");\\r\\n        require(\\r\\n            _auctionStartTime >= block.timestamp + auctionStartDelay,\\r\\n            \\\"M03\\\"\\r\\n        );\\r\\n        require(_auctionEndTime >= _auctionStartTime, \\\"M05\\\");\\r\\n        require(_auctionEndPrice <= _auctionStartPrice, \\\"M06\\\");\\r\\n\\r\\n        projects[_projectId].auctionERC20 = _auctionERC20;\\r\\n        projects[_projectId].auctionStartTime = _auctionStartTime;\\r\\n        projects[_projectId].auctionEndTime = _auctionEndTime;\\r\\n        projects[_projectId].auctionStartPrice = _auctionStartPrice;\\r\\n        projects[_projectId].auctionEndPrice = _auctionEndPrice;\\r\\n\\r\\n        emit AuctionScheduled(\\r\\n            _projectId,\\r\\n            _auctionERC20,\\r\\n            _auctionStartTime,\\r\\n            _auctionEndTime,\\r\\n            _auctionStartPrice,\\r\\n            _auctionEndPrice\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function updateAuctionStartDelay(uint256 _auctionStartDelay)\\r\\n        external\\r\\n        onlyOwner\\r\\n    {\\r\\n        auctionStartDelay = _auctionStartDelay;\\r\\n\\r\\n        emit AuctionStartDelayUpdated(_auctionStartDelay);\\r\\n    }\\r\\n\\r\\n    function claimPlatformRevenue(address _token) external onlyOwner {\\r\\n        uint256 claimedRevenue = platformClaimableRevenues[_token];\\r\\n        require(claimedRevenue > 0, \\\"M07\\\");\\r\\n\\r\\n        platformClaimableRevenues[_token] = 0;\\r\\n\\r\\n        IERC20(_token).safeTransfer(msg.sender, claimedRevenue);\\r\\n\\r\\n        emit PlatformRevenueClaimed(msg.sender, _token, claimedRevenue);\\r\\n    }\\r\\n\\r\\n    function claimArtistRevenue(address _token) external {\\r\\n        uint256 claimedRevenue = artistClaimableRevenues[msg.sender][_token];\\r\\n        require(claimedRevenue > 0, \\\"M07\\\");\\r\\n\\r\\n        artistClaimableRevenues[msg.sender][_token] = 0;\\r\\n\\r\\n        IERC20(_token).safeTransfer(msg.sender, claimedRevenue);\\r\\n\\r\\n        emit ArtistRevenueClaimed(msg.sender, _token, claimedRevenue);\\r\\n    }\\r\\n\\r\\n    function getProjectElementAuctionPrice(uint256 _projectId)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256 _price)\\r\\n    {\\r\\n        require(\\r\\n            block.timestamp >= projects[_projectId].auctionStartTime,\\r\\n            \\\"Auction hasn't started yet\\\"\\r\\n        );\\r\\n        if (block.timestamp > projects[_projectId].auctionEndTime) {\\r\\n            // Auction has ended\\r\\n            _price = projects[_projectId].auctionEndPrice;\\r\\n        } else {\\r\\n            // Auction is active\\r\\n            _price =\\r\\n                projects[_projectId].auctionStartPrice -\\r\\n                (\\r\\n                    (((block.timestamp -\\r\\n                        projects[_projectId].auctionStartTime) *\\r\\n                        (projects[_projectId].auctionStartPrice -\\r\\n                            projects[_projectId].auctionEndPrice)) /\\r\\n                        (projects[_projectId].auctionEndTime -\\r\\n                            projects[_projectId].auctionStartTime))\\r\\n                );\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x3c522ef6a4581d126d1d2c26dfae87ccf488c36f1d32893a72365fae6458f5b7\",\"license\":\"MIT\"},\"contracts/Projects.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./interfaces/ICanvas.sol\\\";\\r\\nimport \\\"./interfaces/IElement.sol\\\";\\r\\nimport \\\"./interfaces/IProjects.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\nabstract contract Projects is IProjects, Ownable {\\r\\n    event ProjectCreated(uint256 projectId);\\r\\n    \\r\\n    ICanvas public canvas;\\r\\n    IElement public element;\\r\\n    string public baseURI;\\r\\n\\r\\n    mapping(address => bool) internal admins;\\r\\n    mapping(uint256 => ProjectData) internal projects;\\r\\n\\r\\n    modifier onlyAdmin {\\r\\n        require(\\r\\n            admins[msg.sender],\\r\\n            \\\"P01\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier notLocked(uint256 _projectId) {\\r\\n        require(\\r\\n            !projects[_projectId].locked,\\r\\n            \\\"P02\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function createProject(\\r\\n        address _artistAddress,\\r\\n        uint256 _maxSupply,\\r\\n        string memory _metadata,\\r\\n        string[] memory _elementCategoryLabels,\\r\\n        string[] memory _elementCategoryValues,\\r\\n        string[][] memory _elementLabels,\\r\\n        string[][] memory _elementValues,\\r\\n        uint256[][][] memory _elementAmounts,\\r\\n        address[] calldata _recipients\\r\\n    ) external onlyAdmin {\\r\\n        uint256 projectId = canvas.createProject(address(this), _maxSupply);\\r\\n\\r\\n        projects[projectId].artistAddress = _artistAddress;\\r\\n        projects[projectId].metadata = _metadata;\\r\\n        projects[projectId].elementCategoryLabels = _elementCategoryLabels;\\r\\n        projects[projectId].elementCategoryValues = _elementCategoryValues;\\r\\n        projects[projectId].elementTokenIds = element.createElements2D(\\r\\n            _elementLabels,\\r\\n            _elementValues,\\r\\n            _elementAmounts,\\r\\n            _recipients\\r\\n        );\\r\\n\\r\\n        emit ProjectCreated(projectId);\\r\\n    }\\r\\n\\r\\n    function createAndUpdateElements(\\r\\n        uint256 _projectId,\\r\\n        uint256[] calldata _elementCategoryIndexes,\\r\\n        uint256[] calldata _elementIndexes,\\r\\n        string[] memory _elementLabels,\\r\\n        string[] memory _elementValues,\\r\\n        uint256[][] calldata _elementAmounts,\\r\\n        address[] calldata _elementRecipients\\r\\n    ) external onlyAdmin notLocked(_projectId) {\\r\\n        require(_elementCategoryIndexes.length == _elementIndexes.length, \\\"P03\\\");\\r\\n        require(_elementCategoryIndexes.length == _elementLabels.length, \\\"P03\\\");\\r\\n\\r\\n        updateElements(\\r\\n            _projectId,\\r\\n            _elementCategoryIndexes,\\r\\n            _elementIndexes,\\r\\n            element.createElements(\\r\\n            _elementLabels,\\r\\n            _elementValues,\\r\\n            _elementAmounts,\\r\\n            _elementRecipients\\r\\n        )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function updateElements(\\r\\n        uint256 _projectId,\\r\\n        uint256[] calldata _elementCategoryIndexes,\\r\\n        uint256[] calldata _elementIndexes,\\r\\n        uint256[] memory _elementTokenIds\\r\\n    ) public onlyAdmin notLocked(_projectId) {\\r\\n        for (uint256 i; i < _elementCategoryIndexes.length; i++) {\\r\\n            projects[_projectId].elementTokenIds[_elementCategoryIndexes[i]][\\r\\n                    _elementIndexes[i]\\r\\n                ] = _elementTokenIds[i];\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function updateMetadata(uint256 _projectId, string calldata _metadata)\\r\\n        external\\r\\n        onlyAdmin notLocked(_projectId)\\r\\n    {\\r\\n        projects[_projectId].metadata = _metadata;\\r\\n    }\\r\\n\\r\\n    function updateScript(\\r\\n        uint256 _projectId,\\r\\n        uint256 _scriptIndex,\\r\\n        string calldata _script\\r\\n    ) external onlyAdmin notLocked(_projectId) {\\r\\n        projects[_projectId].scripts[_scriptIndex] = (_script);\\r\\n    }\\r\\n\\r\\n    function updateElementCategories(\\r\\n        uint256 _projectId,\\r\\n        string[] memory _elementCategoryLabels,\\r\\n        string[] memory _elementCategoryValues\\r\\n    ) external onlyAdmin notLocked(_projectId) {\\r\\n        require(\\r\\n            _elementCategoryLabels.length == _elementCategoryValues.length,\\r\\n            \\\"P04\\\"\\r\\n        );\\r\\n\\r\\n        projects[_projectId].elementCategoryLabels = _elementCategoryLabels;\\r\\n        projects[_projectId].elementCategoryValues = _elementCategoryValues;\\r\\n    }\\r\\n\\r\\n    function lockProject(uint256 _projectId)\\r\\n        external\\r\\n        onlyAdmin notLocked(_projectId) \\r\\n    {\\r\\n        require(\\r\\n            projects[_projectId].elementCategoryLabels.length ==\\r\\n                projects[_projectId].elementTokenIds.length,\\r\\n            \\\"P03\\\"\\r\\n        );\\r\\n\\r\\n        projects[_projectId].locked = true;\\r\\n    }\\r\\n\\r\\n    function updateBaseURI(string calldata _baseURI) external onlyOwner {\\r\\n      baseURI = _baseURI;\\r\\n    }\\r\\n\\r\\n    function addAdmins(address[] calldata _admins)\\r\\n        external\\r\\n        onlyOwner\\r\\n    {\\r\\n        for (uint256 i; i < _admins.length; i++) {\\r\\n            admins[_admins[i]] = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function removeAdmins(address[] calldata _admins)\\r\\n        external\\r\\n        onlyOwner\\r\\n    {\\r\\n        for (uint256 i; i < _admins.length; i++) {\\r\\n            admins[_admins[i]] = false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getProjectIsLocked(uint256 _projectId) external view returns (bool) {\\r\\n      return projects[_projectId].locked;\\r\\n    }\\r\\n    \\r\\n    function getProjectArtist(uint256 _projectId) external view returns (address) {\\r\\n      return projects[_projectId].artistAddress;\\r\\n    }\\r\\n\\r\\n    function getProjectScripts(uint256 _projectId)\\r\\n        external\\r\\n        view\\r\\n        returns (string[] memory _scripts)\\r\\n    {\\r\\n        uint256 scriptCount = getProjectScriptCount(_projectId);\\r\\n        _scripts = new string[](scriptCount);\\r\\n\\r\\n        for(uint256 i; i < scriptCount; i++) {\\r\\n          _scripts[i] = projects[_projectId].scripts[i];\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getProjectScriptCount(uint256 _projectId) public view returns (uint256) {\\r\\n      uint256 scriptIndex;\\r\\n\\r\\n      while(keccak256(abi.encodePacked(projects[_projectId].scripts[scriptIndex])) != keccak256(abi.encodePacked(\\\"\\\"))) {\\r\\n        scriptIndex++;\\r\\n      }\\r\\n\\r\\n      return scriptIndex;\\r\\n    }\\r\\n\\r\\n    function getProjectElementCategoryLabels(uint256 _projectId) external view returns (string[] memory) {\\r\\n      return projects[_projectId].elementCategoryLabels;\\r\\n    }\\r\\n\\r\\n    function getProjectElementCategoryValues(uint256 _projectId) external view returns (string[] memory) {\\r\\n      return projects[_projectId].elementCategoryValues;\\r\\n    }\\r\\n\\r\\n    function getProjectElementTokenIds(uint256 _projectId) external view returns (uint256[][] memory) {\\r\\n      return projects[_projectId].elementTokenIds;\\r\\n    }\\r\\n\\r\\n    function getProjectMetadata(uint256 _projectId) external view returns (string memory) {\\r\\n      return projects[_projectId].metadata;\\r\\n    }\\r\\n\\r\\n    function getIsAdmins(address _admin) external view returns (bool) {\\r\\n      return admins[_admin];\\r\\n    }\\r\\n\\r\\n    function getProjectElementLabels(uint256 _projectId)\\r\\n        public\\r\\n        view\\r\\n        returns (string[][] memory elementLabels)\\r\\n    {\\r\\n        uint256 elementCategoryLength = projects[_projectId]\\r\\n            .elementCategoryLabels\\r\\n            .length;\\r\\n        elementLabels = new string[][](elementCategoryLength);\\r\\n\\r\\n        for (uint256 i; i < elementCategoryLength; i++) {\\r\\n            uint256 innerElementsLength = projects[_projectId]\\r\\n                .elementTokenIds[i]\\r\\n                .length;\\r\\n            string[] memory innerElementLabels = new string[](innerElementsLength);\\r\\n            for (uint256 j; j < innerElementsLength; j++) {\\r\\n                innerElementLabels[j] = element.getElementLabel(\\r\\n                    projects[_projectId].elementTokenIds[i][j]\\r\\n                );\\r\\n            }\\r\\n            elementLabels[i] = innerElementLabels;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getProjectElementValues(uint256 _projectId)\\r\\n        public\\r\\n        view\\r\\n        returns (string[][] memory elementValues)\\r\\n    {\\r\\n        uint256 elementCategoryLength = projects[_projectId]\\r\\n            .elementCategoryLabels\\r\\n            .length;\\r\\n        elementValues = new string[][](elementCategoryLength);\\r\\n\\r\\n        for (uint256 i; i < elementCategoryLength; i++) {\\r\\n            uint256 innerElementsLength = projects[_projectId]\\r\\n                .elementTokenIds[i]\\r\\n                .length;\\r\\n            string[] memory innerElementValues = new string[](innerElementsLength);\\r\\n            for (uint256 j; j < innerElementsLength; j++) {\\r\\n                innerElementValues[j] = element.getElementValue(\\r\\n                    projects[_projectId].elementTokenIds[i][j]\\r\\n                );\\r\\n            }\\r\\n            elementValues[i] = innerElementValues;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getProjectIdFromCanvasId(uint256 canvasId)\\r\\n        public\\r\\n        pure\\r\\n        returns (uint256 projectId)\\r\\n    {\\r\\n        projectId = canvasId / 1_000_000;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x0868f34833ec2c2f72277104d6a9954783e70d0415dda2878e6801337b28a1f7\",\"license\":\"MIT\"},\"contracts/StringConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nabstract contract StringConverter {\\r\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\r\\n\\r\\n    function toString(uint256 value) internal pure returns (string memory) {\\r\\n        unchecked {\\r\\n            uint256 length = log10(value) + 1;\\r\\n            string memory buffer = new string(length);\\r\\n            uint256 ptr;\\r\\n            /// @solidity memory-safe-assembly\\r\\n            assembly {\\r\\n                ptr := add(buffer, add(32, length))\\r\\n            }\\r\\n            while (true) {\\r\\n                ptr--;\\r\\n                /// @solidity memory-safe-assembly\\r\\n                assembly {\\r\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\r\\n                }\\r\\n                value /= 10;\\r\\n                if (value == 0) break;\\r\\n            }\\r\\n            return buffer;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function log10(uint256 value) internal pure returns (uint256) {\\r\\n        uint256 result = 0;\\r\\n        unchecked {\\r\\n            if (value >= 10**64) {\\r\\n                value /= 10**64;\\r\\n                result += 64;\\r\\n            }\\r\\n            if (value >= 10**32) {\\r\\n                value /= 10**32;\\r\\n                result += 32;\\r\\n            }\\r\\n            if (value >= 10**16) {\\r\\n                value /= 10**16;\\r\\n                result += 16;\\r\\n            }\\r\\n            if (value >= 10**8) {\\r\\n                value /= 10**8;\\r\\n                result += 8;\\r\\n            }\\r\\n            if (value >= 10**4) {\\r\\n                value /= 10**4;\\r\\n                result += 4;\\r\\n            }\\r\\n            if (value >= 10**2) {\\r\\n                value /= 10**2;\\r\\n                result += 2;\\r\\n            }\\r\\n            if (value >= 10**1) {\\r\\n                result += 1;\\r\\n            }\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xa0f45fd8a84ef9e6576eaff781350df017db7633aab4041cd3b472c394c2414d\",\"license\":\"MIT\"},\"contracts/Studio.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\r\\nimport \\\"./interfaces/IStudio.sol\\\";\\r\\nimport \\\"./Marketplace.sol\\\";\\r\\nimport \\\"./StringConverter.sol\\\";\\r\\n\\r\\ncontract Studio is IStudio, Marketplace, ERC721Holder, StringConverter {\\r\\n    mapping(uint256 => CanvasData) public canvases;\\r\\n    mapping(address => uint256) public userNonces;\\r\\n\\r\\n    constructor(\\r\\n        address _owner,\\r\\n        address _canvas,\\r\\n        address _element,\\r\\n        uint256 _auctionStartDelay,\\r\\n        string memory _baseURI\\r\\n    ) {\\r\\n        _transferOwnership(_owner);\\r\\n        canvas = ICanvas(_canvas);\\r\\n        element = IElement(_element);\\r\\n        auctionStartDelay = _auctionStartDelay;\\r\\n        baseURI = _baseURI;\\r\\n    }\\r\\n\\r\\n    function wrap(uint256 _projectId, uint256[] calldata _elementIndexes)\\r\\n        public\\r\\n        returns (uint256 _canvasTokenId)\\r\\n    {\\r\\n        require(\\r\\n            _elementIndexes.length ==\\r\\n                projects[_projectId].elementCategoryLabels.length,\\r\\n            \\\"S01\\\"\\r\\n        );\\r\\n\\r\\n        if (\\r\\n            canvas.getProjectSupply(_projectId) <\\r\\n            canvas.getProjectMaxSupply(_projectId)\\r\\n        ) {\\r\\n            _canvasTokenId = canvas.mint(_projectId, msg.sender);\\r\\n        } else {\\r\\n            require(projects[_projectId].blankCanvasIds.length > 0, \\\"S02\\\");\\r\\n            _canvasTokenId = projects[_projectId].blankCanvasIds[\\r\\n                projects[_projectId].blankCanvasIds.length - 1\\r\\n            ];\\r\\n            projects[_projectId].blankCanvasIds.pop();\\r\\n            canvas.safeTransferFrom(address(this), msg.sender, _canvasTokenId);\\r\\n        }\\r\\n\\r\\n        bytes32 newHash = keccak256(\\r\\n            abi.encodePacked(msg.sender, userNonces[msg.sender])\\r\\n        );\\r\\n\\r\\n        canvases[_canvasTokenId].hash = newHash;\\r\\n\\r\\n        uint256[] memory elementTokenIds = new uint256[](\\r\\n            _elementIndexes.length\\r\\n        );\\r\\n\\r\\n        for (uint256 i; i < _elementIndexes.length; i++) {\\r\\n            elementTokenIds[i] = projects[_projectId].elementTokenIds[i][\\r\\n                _elementIndexes[i]\\r\\n            ];\\r\\n\\r\\n            element.safeTransferFrom(\\r\\n                msg.sender,\\r\\n                address(this),\\r\\n                elementTokenIds[i],\\r\\n                1,\\r\\n                \\\"\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        canvases[_canvasTokenId].wrapped = true;\\r\\n        canvases[_canvasTokenId].wrappedElementTokenIds = elementTokenIds;\\r\\n        userNonces[msg.sender]++;\\r\\n\\r\\n        emit CanvasWrapped(_canvasTokenId, msg.sender);\\r\\n    }\\r\\n\\r\\n    function unwrap(uint256 _canvasId) public {\\r\\n        require(msg.sender == canvas.ownerOf(_canvasId), \\\"S03\\\");\\r\\n        require(canvases[_canvasId].wrapped, \\\"S04\\\");\\r\\n\\r\\n        // Transfer elements to the user\\r\\n        for (\\r\\n            uint256 i;\\r\\n            i < canvases[_canvasId].wrappedElementTokenIds.length;\\r\\n            i++\\r\\n        ) {\\r\\n            element.safeTransferFrom(\\r\\n                address(this),\\r\\n                msg.sender,\\r\\n                canvases[_canvasId].wrappedElementTokenIds[i],\\r\\n                1,\\r\\n                \\\"\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        // Reset canvas state to blank canvas\\r\\n        canvases[_canvasId].hash = 0;\\r\\n        canvases[_canvasId].wrapped = false;\\r\\n        canvases[_canvasId].wrappedElementTokenIds = new uint256[](0);\\r\\n\\r\\n        // Transfer canvas from the user to this address\\r\\n        canvas.safeTransferFrom(msg.sender, address(this), _canvasId);\\r\\n\\r\\n        // Add the canvas ID to the array of blank canvses held by the studio\\r\\n        projects[getProjectIdFromCanvasId(_canvasId)].blankCanvasIds.push(\\r\\n            _canvasId\\r\\n        );\\r\\n\\r\\n        emit CanvasUnwrapped(_canvasId, msg.sender);\\r\\n    }\\r\\n\\r\\n    function buyElementsAndWrap(\\r\\n        uint256 _projectId,\\r\\n        uint256[] calldata _elementCategoryIndexesToBuy,\\r\\n        uint256[] calldata _elementIndexesToBuy,\\r\\n        uint256[] calldata _elementQuantitiesToBuy,\\r\\n        uint256 _maxERC20ToSpend,\\r\\n        uint256[] calldata _elementIndexesToWrap\\r\\n    ) public {\\r\\n        buyElements(\\r\\n            _projectId,\\r\\n            _elementCategoryIndexesToBuy,\\r\\n            _elementIndexesToBuy,\\r\\n            _elementQuantitiesToBuy\\r\\n        );\\r\\n        wrap(_projectId, _elementIndexesToWrap);\\r\\n    }\\r\\n\\r\\n    function getCanvasURI(uint256 _canvasTokenId)\\r\\n        external\\r\\n        view\\r\\n        returns (string memory)\\r\\n    {\\r\\n        return string.concat(baseURI, toString(_canvasTokenId));\\r\\n    }\\r\\n\\r\\n    function getCanvasHash(uint256 _canvasId) external view returns (bytes32) {\\r\\n        return canvases[_canvasId].hash;\\r\\n    }\\r\\n\\r\\n    function getCanvasElementLabels(uint256 _canvasId)\\r\\n        external\\r\\n        view\\r\\n        returns (string[] memory elementLabels)\\r\\n    {\\r\\n        uint256 elementLabelsLength = canvases[_canvasId]\\r\\n            .wrappedElementTokenIds\\r\\n            .length;\\r\\n        elementLabels = new string[](elementLabelsLength);\\r\\n\\r\\n        for (uint256 i; i < elementLabelsLength; i++) {\\r\\n            elementLabels[i] = element.getElementLabel(\\r\\n                canvases[_canvasId].wrappedElementTokenIds[i]\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getCanvasElementValues(uint256 _canvasId)\\r\\n        external\\r\\n        view\\r\\n        returns (string[] memory elementValues)\\r\\n    {\\r\\n        uint256 elementValuesLength = canvases[_canvasId]\\r\\n            .wrappedElementTokenIds\\r\\n            .length;\\r\\n        elementValues = new string[](elementValuesLength);\\r\\n\\r\\n        for (uint256 i; i < elementValuesLength; i++) {\\r\\n            elementValues[i] = element.getElementValue(\\r\\n                canvases[_canvasId].wrappedElementTokenIds[i]\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getIsCanvasWrapped(uint256 _canvasId)\\r\\n        external\\r\\n        view\\r\\n        returns (bool)\\r\\n    {\\r\\n        return canvases[_canvasId].wrapped;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x8fe6689b71db2d57dc97cf53763e7c64ea544f1fe33502d85b0cf11fbf334f13\",\"license\":\"MIT\"},\"contracts/interfaces/ICanvas.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface ICanvas {\\r\\n    function initialize(address _owner) external;\\r\\n\\r\\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable;\\r\\n\\r\\n    function ownerOf(uint256 _tokenId) external view returns (address);\\r\\n\\r\\n    function createProject(\\r\\n        address _studio,\\r\\n        uint256 _maxSupply\\r\\n    ) external returns (uint256 projectId);\\r\\n\\r\\n    function mint(uint256 _projectId, address _to)\\r\\n       external returns (uint256 _tokenId);\\r\\n\\r\\n    function getProjectIdFromCanvasId(uint256 canvasId)\\r\\n        external\\r\\n        pure\\r\\n        returns (uint256 projectId);\\r\\n\\r\\n    function getProjectMaxSupply(uint256 _projectId) external view returns (uint256);\\r\\n\\r\\n    function getProjectSupply(uint256 _projectId) external view returns (uint256);\\r\\n\\r\\n    event MintedToken(address receiver, uint256 projectid, uint256 tokenId);\\r\\n    event WrappedTokens(uint256 canvasId, uint256 tokenIds, uint256 amounts);\\r\\n    event UnWrappedTokens(uint256 canvasId, uint256 tokenIds, uint256 amounts);\\r\\n}\\r\\n\",\"keccak256\":\"0x1b5f1961ed48d4aaae21011e3e266f2f50788ce8c5b68fc1ab9ef897fa23a90a\",\"license\":\"MIT\"},\"contracts/interfaces/IElement.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IElement {\\r\\n    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external;\\r\\n\\r\\n    function balanceOf(address _owner, uint256 _id) external view returns (uint256);\\r\\n\\r\\n    function createElement(\\r\\n        string calldata _label,\\r\\n        string calldata _value,\\r\\n        uint256[] calldata _amounts,\\r\\n        address[] calldata _recipients\\r\\n    ) external returns (uint256 tokenId);\\r\\n\\r\\n    function createElements(\\r\\n        string[] calldata _labels,\\r\\n        string[] calldata _values,\\r\\n        uint256[][] calldata _amounts,\\r\\n        address[] calldata _recipients\\r\\n    ) external returns (uint256[] memory tokenIds);\\r\\n\\r\\n    function createElements2D(\\r\\n        string[][] calldata _labels,\\r\\n        string[][] calldata _values,\\r\\n        uint256[][][] calldata _amounts,\\r\\n        address[] calldata _recipients\\r\\n    ) external returns (uint256[][] memory tokenIds);\\r\\n\\r\\n    function getElementLabel(uint256 _tokenId)\\r\\n        external\\r\\n        view\\r\\n        returns (string memory);\\r\\n\\r\\n    function getElementValue(uint256 _tokenId)\\r\\n        external\\r\\n        view\\r\\n        returns (string memory);\\r\\n}\\r\\n\",\"keccak256\":\"0x851c064e8a08a2a6546d46590f048e8529f7b4a12e80248608010c934fc10075\",\"license\":\"MIT\"},\"contracts/interfaces/IMarketplace.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IMarketplace {\\r\\n    event AuctionScheduled(\\r\\n        uint256 indexed projectId,\\r\\n        address auctionERC20,\\r\\n        uint256 auctionStartTime,\\r\\n        uint256 auctionEndTime,\\r\\n        uint256 auctionStartPrice,\\r\\n        uint256 auctionEndPrice\\r\\n    );\\r\\n    event AuctionStartDelayUpdated(uint256 auctionStartDelay);\\r\\n    event ElementBought(\\r\\n        address indexed buyer,\\r\\n        uint256 _projectId,\\r\\n        uint256[] elementCategoryIndexes,\\r\\n        uint256[] elementIndexes,\\r\\n        uint256[] elementQuantities\\r\\n    );\\r\\n    event PlatformRevenueClaimed(\\r\\n        address indexed claimer,\\r\\n        address indexed token,\\r\\n        uint256 claimedRevenue\\r\\n    );\\r\\n    event ArtistRevenueClaimed(\\r\\n        address indexed artist,\\r\\n        address indexed token,\\r\\n        uint256 claimedRevenue\\r\\n    );\\r\\n}\\r\\n\",\"keccak256\":\"0x40ab06f6c954751c9f1758dced721845a453c998de3aceeb7e2d412bd86213ff\",\"license\":\"MIT\"},\"contracts/interfaces/IProjects.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IProjects {\\r\\n    struct ProjectData {\\r\\n        bool locked;\\r\\n        address artistAddress;\\r\\n        mapping(uint256 => string) scripts;\\r\\n        string[] elementCategoryLabels;\\r\\n        string[] elementCategoryValues;\\r\\n        uint256[][] elementTokenIds;\\r\\n        uint256[] blankCanvasIds;\\r\\n        string metadata;\\r\\n        address auctionERC20;\\r\\n        uint256 auctionStartTime;\\r\\n        uint256 auctionEndTime;\\r\\n        uint256 auctionStartPrice;\\r\\n        uint256 auctionEndPrice;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x9207a89e608ece76964735cdc7a16cf60120d1f225ee8203e14fc38c67f45ae4\",\"license\":\"MIT\"},\"contracts/interfaces/IStudio.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IStudio {\\r\\n    event CanvasWrapped(uint256 indexed canvasTokenId, address indexed wrapper);\\r\\n    event CanvasUnwrapped(uint256 indexed canvasId, address indexed unwrapper);\\r\\n\\r\\n    struct CanvasData {\\r\\n        bool wrapped;\\r\\n        uint256[] wrappedElementTokenIds;\\r\\n        bytes32 hash;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x45b473e03024a685e24bf365f35ddb6822e26c6fab03acd94fe794c7c885243d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620050543803806200505483398101604081905262000034916200011c565b6200003f3362000099565b6200004a8562000099565b600180546001600160a01b038087166001600160a01b0319928316179092556002805492861692909116919091179055600682905560036200008d8282620002c2565b5050505050506200038e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200010157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080600060a086880312156200013557600080fd5b6200014086620000e9565b9450602062000151818801620000e9565b94506200016160408801620000e9565b6060880151608089015191955093506001600160401b03808211156200018657600080fd5b818901915089601f8301126200019b57600080fd5b815181811115620001b057620001b062000106565b604051601f8201601f19908116603f01168101908382118183101715620001db57620001db62000106565b816040528281528c86848701011115620001f457600080fd5b600093505b82841015620002185784840186015181850187015292850192620001f9565b60008684830101528096505050505050509295509295909350565b600181811c908216806200024857607f821691505b6020821081036200026957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002bd57600081815260208120601f850160051c81016020861015620002985750805b601f850160051c820191505b81811015620002b957828155600101620002a4565b5050505b505050565b81516001600160401b03811115620002de57620002de62000106565b620002f681620002ef845462000233565b846200026f565b602080601f8311600181146200032e5760008415620003155750858301515b600019600386901b1c1916600185901b178555620002b9565b600085815260208120601f198616915b828110156200035f578886015182559484019460019091019084016200033e565b50858210156200037e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b614cb6806200039e6000396000f3fe608060405234801561001057600080fd5b50600436106103275760003560e01c8063804f6929116101b8578063cfd0ebb311610104578063ef750ab3116100a2578063f2fde38b1161007c578063f2fde38b146107f8578063f3c8591a1461080b578063fbace7a514610837578063fc78fa851461084a57600080fd5b8063ef750ab3146107b3578063f0325e18146107c6578063f23a6e61146107d957600080fd5b8063ddfb64be116100de578063ddfb64be1461073c578063de0e9a3e1461076a578063e4d035f01461077d578063eed9a98d146107a057600080fd5b8063cfd0ebb3146106da578063d73792a9146106ed578063d9d197a6146106f857600080fd5b80639323e6f711610171578063bc197c811161014b578063bc197c8114610682578063c2e81f16146106a1578063c3d6701e146106b4578063cc9e9656146106c757600080fd5b80639323e6f71461063c5780639b8e9b5e1461065c5780639c54df641461066f57600080fd5b8063804f6929146105c45780638343ada9146105e757806385e4ad89146105fa5780638705e6a41461060d5780638da5cb5b14610618578063931688cb1461062957600080fd5b80633803ac4c1161027757806353c8388e116102305780636c0360eb1161020a5780636c0360eb146105815780636d92b6be14610589578063715018a61461059c5780637c3a038a146105a457600080fd5b806353c8388e146105485780635a723d1f1461055b5780636811a3f71461056e57600080fd5b80633803ac4c146104b15780633862d5f7146104d157806340c2846b146104e4578063416731da146104f75780634ced96d41461050a5780634f26cc4d1461051d57600080fd5b80631026b8c3116102e45780632884fd00116102be5780632884fd00146104405780632c0e2baf1461046b5780632f7801f41461047e578063377e11e01461049e57600080fd5b80631026b8c3146103e3578063150b7a02146103f657806323037e0c1461042d57600080fd5b806301ffc9a71461032c57806304b7f329146103545780630b0c2e6e1461036b5780630b9e01b11461038b5780630ba70e1e146103a05780630effcffd146103c0575b600080fd5b61033f61033a366004613589565b61085d565b60405190151581526020015b60405180910390f35b61035d60065481565b60405190815260200161034b565b61037e6103793660046135b3565b610894565b60405161034b91906136b7565b61039e610399366004613712565b610ab8565b005b6103b36103ae3660046135b3565b610b50565b60405161034b9190613764565b61033f6103ce3660046135b3565b60009081526009602052604090205460ff1690565b61037e6103f13660046135b3565b610b84565b61041461040436600461385a565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200161034b565b61039e61043b3660046138c5565b610da1565b600254610453906001600160a01b031681565b6040516001600160a01b03909116815260200161034b565b61039e6104793660046138e2565b610e80565b61035d61048c3660046138c5565b600a6020526000908152604090205481565b61039e6104ac366004613976565b611046565b6104c46104bf3660046135b3565b6110e7565b60405161034b9190613a0c565b61035d6104df3660046135b3565b611224565b61035d6104f23660046135b3565b61134b565b6104c46105053660046135b3565b61135a565b61039e610518366004613a1f565b61149f565b61035d61052b366004613ac2565b600760209081526000928352604080842090915290825290205481565b61039e610556366004613afb565b6118a8565b61039e610569366004613bf3565b61192b565b6104c461057c3660046135b3565b611a72565b6103b3611b61565b61039e610597366004613d12565b611bef565b61039e611cd1565b6105b76105b23660046135b3565b611d07565b60405161034b9190613dfa565b61035d6105d23660046135b3565b60009081526009602052604090206002015490565b6104c46105f53660046135b3565b611dab565b61039e610608366004613fd9565b611e8f565b61035d6305f5e10081565b6000546001600160a01b0316610453565b61039e610637366004614118565b6120a6565b61035d61064a3660046138c5565b60086020526000908152604090205481565b600154610453906001600160a01b031681565b61039e61067d366004613976565b6120dd565b61041461069036600461414d565b63bc197c8160e01b95945050505050565b61035d6106af3660046135b3565b612179565b61039e6106c23660046138c5565b6121e2565b6104c46106d53660046135b3565b6122a7565b61039e6106e83660046141fa565b6123ec565b61035d633b9aca0081565b6107256107063660046135b3565b6009602052600090815260409020805460029091015460ff9091169082565b60408051921515835260208301919091520161034b565b61045361074a3660046135b3565b60009081526005602052604090205461010090046001600160a01b031690565b61039e6107783660046135b3565b61250b565b61033f61078b3660046135b3565b60009081526005602052604090205460ff1690565b61039e6107ae366004614295565b6127e3565b6103b36107c13660046135b3565b61280a565b61039e6107d43660046135b3565b6128af565b6104146107e7366004614348565b63f23a6e6160e01b95945050505050565b61039e6108063660046138c5565b612914565b61033f6108193660046138c5565b6001600160a01b031660009081526004602052604090205460ff1690565b61039e6108453660046135b3565b6129af565b61035d6108583660046143b0565b612a61565b60006001600160e01b03198216630271189760e51b148061088e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600081815260056020526040902060020154606090806001600160401b038111156108c1576108c1613797565b6040519080825280602002602001820160405280156108f457816020015b60608152602001906001900390816108df5790505b50915060005b81811015610ab1576000848152600560205260408120600401805483908110610925576109256143ee565b60009182526020822001549150816001600160401b0381111561094a5761094a613797565b60405190808252806020026020018201604052801561097d57816020015b60608152602001906001900390816109685790505b50905060005b82811015610a7d57600254600088815260056020526040902060040180546001600160a01b039092169163dccd6a3e9190879081106109c4576109c46143ee565b9060005260206000200183815481106109df576109df6143ee565b90600052602060002001546040518263ffffffff1660e01b8152600401610a0891815260200190565b600060405180830381865afa158015610a25573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a4d9190810190614404565b828281518110610a5f57610a5f6143ee565b60200260200101819052508080610a7590614490565b915050610983565b5080858481518110610a9157610a916143ee565b602002602001018190525050508080610aa990614490565b9150506108fa565b5050919050565b3360009081526004602052604090205460ff16610af05760405162461bcd60e51b8152600401610ae7906144a9565b60405180910390fd5b600084815260056020526040902054849060ff1615610b215760405162461bcd60e51b8152600401610ae7906144c6565b60008581526005602090815260408083208784526001019091529020610b48838583614563565b505050505050565b60606003610b5d83612f8b565b604051602001610b6e929190614695565b6040516020818303038152906040529050919050565b600081815260056020526040902060020154606090806001600160401b03811115610bb157610bb1613797565b604051908082528060200260200182016040528015610be457816020015b6060815260200190600190039081610bcf5790505b50915060005b81811015610ab1576000848152600560205260408120600401805483908110610c1557610c156143ee565b60009182526020822001549150816001600160401b03811115610c3a57610c3a613797565b604051908082528060200260200182016040528015610c6d57816020015b6060815260200190600190039081610c585790505b50905060005b82811015610d6d57600254600088815260056020526040902060040180546001600160a01b03909216916355a1dde7919087908110610cb457610cb46143ee565b906000526020600020018381548110610ccf57610ccf6143ee565b90600052602060002001546040518263ffffffff1660e01b8152600401610cf891815260200190565b600060405180830381865afa158015610d15573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d3d9190810190614404565b828281518110610d4f57610d4f6143ee565b60200260200101819052508080610d6590614490565b915050610c73565b5080858481518110610d8157610d816143ee565b602002602001018190525050508080610d9990614490565b915050610bea565b6000546001600160a01b03163314610dcb5760405162461bcd60e51b8152600401610ae7906146ba565b6001600160a01b03811660009081526008602052604090205480610e175760405162461bcd60e51b81526020600482015260036024820152624d303760e81b6044820152606401610ae7565b6001600160a01b038216600081815260086020526040812055610e3b90338361301d565b6040518181526001600160a01b0383169033907f2f48e090d0e0f4a9b71b6daf952883ac941749f52ee4f6adb8d18d25d6410921906020015b60405180910390a35050565b3360009081526004602052604090205460ff16610eaf5760405162461bcd60e51b8152600401610ae7906144a9565b60008681526005602052604090205460ff16610ef35760405162461bcd60e51b81526020600482015260036024820152624d303360e81b6044820152606401610ae7565b600654610f0090426146ef565b841015610f355760405162461bcd60e51b81526020600482015260036024820152624d303360e81b6044820152606401610ae7565b83831015610f6b5760405162461bcd60e51b81526020600482015260036024820152624d303560e81b6044820152606401610ae7565b81811115610fa15760405162461bcd60e51b815260206004820152600360248201526226981b60e91b6044820152606401610ae7565b6000868152600560209081526040918290206007810180546001600160a01b0319166001600160a01b038a169081179091556008820188905560098201879055600a8201869055600b9091018490558251908152908101869052908101849052606081018390526080810182905286907f4e311f9848c202a70e3deaa2e30dc331bb0a0c7c4cf9463f7dfab3ae993213529060a00160405180910390a2505050505050565b6000546001600160a01b031633146110705760405162461bcd60e51b8152600401610ae7906146ba565b60005b818110156110e257600060046000858585818110611093576110936143ee565b90506020020160208101906110a891906138c5565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055806110da81614490565b915050611073565b505050565b606060006110f483612179565b9050806001600160401b0381111561110e5761110e613797565b60405190808252806020026020018201604052801561114157816020015b606081526020019060019003908161112c5790505b50915060005b81811015610ab157600084815260056020908152604080832084845260010190915290208054611176906144e3565b80601f01602080910402602001604051908101604052809291908181526020018280546111a2906144e3565b80156111ef5780601f106111c4576101008083540402835291602001916111ef565b820191906000526020600020905b8154815290600101906020018083116111d257829003601f168201915b5050505050838281518110611206576112066143ee565b6020026020010181905250808061121c90614490565b915050611147565b6000818152600560205260408120600801544210156112855760405162461bcd60e51b815260206004820152601a60248201527f41756374696f6e206861736e27742073746172746564207965740000000000006044820152606401610ae7565b6000828152600560205260409020600901544211156112b457506000908152600560205260409020600b015490565b600082815260056020526040902060088101546009909101546112d79190614702565b6000838152600560205260409020600b810154600a909101546112fa9190614702565b6000848152600560205260409020600801546113169042614702565b6113209190614715565b61132a919061472c565b6000838152600560205260409020600a015461088e9190614702565b919050565b600061088e620f42408361472c565b600081815260096020526040902060010154606090806001600160401b0381111561138757611387613797565b6040519080825280602002602001820160405280156113ba57816020015b60608152602001906001900390816113a55790505b50915060005b81811015610ab157600254600085815260096020526040902060010180546001600160a01b039092169163dccd6a3e919084908110611401576114016143ee565b90600052602060002001546040518263ffffffff1660e01b815260040161142a91815260200190565b600060405180830381865afa158015611447573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261146f9190810190614404565b838281518110611481576114816143ee565b6020026020010181905250808061149790614490565b9150506113c0565b8483146114d45760405162461bcd60e51b81526020600482015260036024820152624d303160e81b6044820152606401610ae7565b8481146115095760405162461bcd60e51b81526020600482015260036024820152624d303160e81b6044820152606401610ae7565b6000805b8681101561170a576000898152600560205260408120600401898984818110611538576115386143ee565b905060200201358154811061154f5761154f6143ee565b9060005260206000200187878481811061156b5761156b6143ee565b9050602002013581548110611582576115826143ee565b906000526020600020015490508484838181106115a1576115a16143ee565b600254604051627eeac760e11b8152306004820152602481018690526020929092029390930135926001600160a01b0316915062fdd58e90604401602060405180830381865afa1580156115f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161d919061474e565b10156116515760405162461bcd60e51b815260206004820152600360248201526226981960e91b6044820152606401610ae7565b848483818110611663576116636143ee565b905060200201358361167591906146ef565b6002549093506001600160a01b031663f242432a30338489898881811061169e5761169e6143ee565b905060200201356040518563ffffffff1660e01b81526004016116c49493929190614767565b600060405180830381600087803b1580156116de57600080fd5b505af11580156116f2573d6000803e3d6000fd5b5050505050808061170290614490565b91505061150d565b50600061171689611224565b6117209083614715565b60008a815260056020526040908190206007015490516323b872dd60e01b8152336004820152306024820152604481018390529192506001600160a01b03169081906323b872dd906064016020604051808303816000875af115801561178a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ae919061479f565b506000633b9aca006117c46305f5e10085614715565b6117ce919061472c565b6001600160a01b0383166000908152600860205260408120805492935083929091906117fb9084906146ef565b9091555061180b90508184614702565b60008c8152600560209081526040808320546001600160a01b0361010090910481168452600783528184209087168452909152812080549091906118509084906146ef565b909155505060405133907f09c6516e97076f01776d7830f07af136314f2576a6670a352193733de3b8196790611893908e908e908e908e908e908e908e906147f3565b60405180910390a25050505050505050505050565b3360009081526004602052604090205460ff166118d75760405162461bcd60e51b8152600401610ae7906144a9565b600083815260056020526040902054839060ff16156119085760405162461bcd60e51b8152600401610ae7906144c6565b6000848152600560205260409020600601611924838583614563565b5050505050565b3360009081526004602052604090205460ff1661195a5760405162461bcd60e51b8152600401610ae7906144a9565b60008b8152600560205260409020548b9060ff161561198b5760405162461bcd60e51b8152600401610ae7906144c6565b8988146119aa5760405162461bcd60e51b8152600401610ae790614843565b86518a146119ca5760405162461bcd60e51b8152600401610ae790614843565b611a648c8c8c8c8c600260009054906101000a90046001600160a01b03166001600160a01b0316636a25a7998e8e8e8e8e8e6040518763ffffffff1660e01b8152600401611a1d969594939291906148a9565b6000604051808303816000875af1158015611a3c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106e891908101906149de565b505050505050505050505050565b606060056000838152602001908152602001600020600201805480602002602001604051908101604052809291908181526020016000905b82821015611b56578382906000526020600020018054611ac9906144e3565b80601f0160208091040260200160405190810160405280929190818152602001828054611af5906144e3565b8015611b425780601f10611b1757610100808354040283529160200191611b42565b820191906000526020600020905b815481529060010190602001808311611b2557829003601f168201915b505050505081526020019060010190611aaa565b505050509050919050565b60038054611b6e906144e3565b80601f0160208091040260200160405190810160405280929190818152602001828054611b9a906144e3565b8015611be75780601f10611bbc57610100808354040283529160200191611be7565b820191906000526020600020905b815481529060010190602001808311611bca57829003601f168201915b505050505081565b3360009081526004602052604090205460ff16611c1e5760405162461bcd60e51b8152600401610ae7906144a9565b600083815260056020526040902054839060ff1615611c4f5760405162461bcd60e51b8152600401610ae7906144c6565b8151835114611c865760405162461bcd60e51b8152602060048201526003602482015262140c0d60ea1b6044820152606401610ae7565b60008481526005602090815260409091208451611cab926002909201918601906133ec565b5060008481526005602090815260409091208351611924926003909201918501906133ec565b6000546001600160a01b03163314611cfb5760405162461bcd60e51b8152600401610ae7906146ba565b611d05600061306f565b565b606060056000838152602001908152602001600020600401805480602002602001604051908101604052809291908181526020016000905b82821015611b5657600084815260209081902083018054604080518285028101850190915281815292830182828015611d9757602002820191906000526020600020905b815481526020019060010190808311611d83575b505050505081526020019060010190611d3f565b606060056000838152602001908152602001600020600301805480602002602001604051908101604052809291908181526020016000905b82821015611b56578382906000526020600020018054611e02906144e3565b80601f0160208091040260200160405190810160405280929190818152602001828054611e2e906144e3565b8015611e7b5780601f10611e5057610100808354040283529160200191611e7b565b820191906000526020600020905b815481529060010190602001808311611e5e57829003601f168201915b505050505081526020019060010190611de3565b3360009081526004602052604090205460ff16611ebe5760405162461bcd60e51b8152600401610ae7906144a9565b600154604051637416b2b960e11b8152306004820152602481018b90526000916001600160a01b03169063e82d6572906044016020604051808303816000875af1158015611f10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f34919061474e565b60008181526005602052604090208054610100600160a81b0319166101006001600160a01b038f1602178155909150600601611f708a82614a1a565b5060008181526005602090815260409091208951611f96926002909201918b01906133ec565b5060008181526005602090815260409091208851611fbc926003909201918a01906133ec565b506002546040516378a9895b60e11b81526001600160a01b039091169063f15312b690611ff59089908990899089908990600401614ad9565b6000604051808303816000875af1158015612014573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261203c9190810190614b75565b600560008381526020019081526020016000206004019080519060200190612065929190613442565b506040518181527f1ac2092e16e28eef29d1832f3dc69da1b21284a1f3159d3b26cb238b22fe4f8a9060200160405180910390a15050505050505050505050565b6000546001600160a01b031633146120d05760405162461bcd60e51b8152600401610ae7906146ba565b60036110e2828483614563565b6000546001600160a01b031633146121075760405162461bcd60e51b8152600401610ae7906146ba565b60005b818110156110e25760016004600085858581811061212a5761212a6143ee565b905060200201602081019061213f91906138c5565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558061217181614490565b91505061210a565b6000805b604080516000808252602080830180855283519020878352600582528483208684526001019091529083902090926121b59201614c25565b604051602081830303815290604052805190602001201461088e57806121da81614490565b91505061217d565b3360009081526007602090815260408083206001600160a01b0385168452909152902054806122395760405162461bcd60e51b81526020600482015260036024820152624d303760e81b6044820152606401610ae7565b3360008181526007602090815260408083206001600160a01b038716808552925282209190915561226a918361301d565b6040518181526001600160a01b0383169033907fd3a9278fe8dc6b954e6a19cf23e5d70b445c621918754d5ceaec526a7d26a0de90602001610e74565b600081815260096020526040902060010154606090806001600160401b038111156122d4576122d4613797565b60405190808252806020026020018201604052801561230757816020015b60608152602001906001900390816122f25790505b50915060005b81811015610ab157600254600085815260096020526040902060010180546001600160a01b03909216916355a1dde791908490811061234e5761234e6143ee565b90600052602060002001546040518263ffffffff1660e01b815260040161237791815260200190565b600060405180830381865afa158015612394573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526123bc9190810190614404565b8382815181106123ce576123ce6143ee565b602002602001018190525080806123e490614490565b91505061230d565b3360009081526004602052604090205460ff1661241b5760405162461bcd60e51b8152600401610ae7906144a9565b600086815260056020526040902054869060ff161561244c5760405162461bcd60e51b8152600401610ae7906144c6565b60005b8581101561250157828181518110612469576124696143ee565b6020026020010151600560008a8152602001908152602001600020600401888884818110612499576124996143ee565b90506020020135815481106124b0576124b06143ee565b906000526020600020018686848181106124cc576124cc6143ee565b90506020020135815481106124e3576124e36143ee565b600091825260209091200155806124f981614490565b91505061244f565b5050505050505050565b6001546040516331a9108f60e11b8152600481018390526001600160a01b0390911690636352211e90602401602060405180830381865afa158015612554573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125789190614c31565b6001600160a01b0316336001600160a01b0316146125be5760405162461bcd60e51b815260206004820152600360248201526253303360e81b6044820152606401610ae7565b60008181526009602052604090205460ff166126025760405162461bcd60e51b815260206004820152600360248201526214cc0d60ea1b6044820152606401610ae7565b60005b6000828152600960205260409020600101548110156126cc57600254600083815260096020526040902060010180546001600160a01b039092169163f242432a9130913391908690811061265b5761265b6143ee565b906000526020600020015460016040518563ffffffff1660e01b81526004016126879493929190614767565b600060405180830381600087803b1580156126a157600080fd5b505af11580156126b5573d6000803e3d6000fd5b5050505080806126c490614490565b915050612605565b50600081815260096020818152604080842060028101859055805460ff1916815581518581528084019283905294869052929091529151612713926001909201919061349b565b50600154604051632142170760e11b8152336004820152306024820152604481018390526001600160a01b03909116906342842e0e90606401600060405180830381600087803b15801561276657600080fd5b505af115801561277a573d6000803e3d6000fd5b505050506005600061278b8361134b565b815260208082019290925260409081016000908120600501805460018101825590825292812090920183905551339183917f1ce66d646856a661a790ff962311cb84d9c3eb337ba33f9b73ca2907d842b36c9190a350565b6127f28a8a8a8a8a8a8a61149f565b6127fd8a8383612a61565b5050505050505050505050565b600081815260056020526040902060060180546060919061282a906144e3565b80601f0160208091040260200160405190810160405280929190818152602001828054612856906144e3565b80156128a35780601f10612878576101008083540402835291602001916128a3565b820191906000526020600020905b81548152906001019060200180831161288657829003601f168201915b50505050509050919050565b6000546001600160a01b031633146128d95760405162461bcd60e51b8152600401610ae7906146ba565b60068190556040518181527f28f3b7e92bea3a83a4ed0552cff96f294f494ee5c34a27cab92a3ec6bdbd431d9060200160405180910390a150565b6000546001600160a01b0316331461293e5760405162461bcd60e51b8152600401610ae7906146ba565b6001600160a01b0381166129a35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610ae7565b6129ac8161306f565b50565b3360009081526004602052604090205460ff166129de5760405162461bcd60e51b8152600401610ae7906144a9565b600081815260056020526040902054819060ff1615612a0f5760405162461bcd60e51b8152600401610ae7906144c6565b6000828152600560205260409020600481015460029091015414612a455760405162461bcd60e51b8152600401610ae790614843565b506000908152600560205260409020805460ff19166001179055565b6000838152600560205260408120600201548214612aa75760405162461bcd60e51b815260206004820152600360248201526253303160e81b6044820152606401610ae7565b600154604051639116ce7f60e01b8152600481018690526001600160a01b0390911690639116ce7f90602401602060405180830381865afa158015612af0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b14919061474e565b60015460405163341d1eb760e01b8152600481018790526001600160a01b039091169063341d1eb790602401602060405180830381865afa158015612b5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b81919061474e565b1015612c03576001546040516394bf804d60e01b8152600481018690523360248201526001600160a01b03909116906394bf804d906044016020604051808303816000875af1158015612bd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bfc919061474e565b9050612d2d565b60008481526005602081905260409091200154612c485760405162461bcd60e51b815260206004820152600360248201526229981960e91b6044820152606401610ae7565b6000848152600560208190526040909120018054612c6890600190614702565b81548110612c7857612c786143ee565b9060005260206000200154905060056000858152602001908152602001600020600501805480612caa57612caa614c4e565b600082815260208120600019908301810191909155019055600154604051632142170760e11b8152306004820152336024820152604481018390526001600160a01b03909116906342842e0e90606401600060405180830381600087803b158015612d1457600080fd5b505af1158015612d28573d6000803e3d6000fd5b505050505b336000818152600a602090815260408083205490519293612d6d9390920160609290921b6bffffffffffffffffffffffff19168252601482015260340190565b60408051601f198184030181529181528151602092830120600085815260099093529082206002018190559150836001600160401b03811115612db257612db2613797565b604051908082528060200260200182016040528015612ddb578160200160208202803683370190505b50905060005b84811015612f02576000878152600560205260409020600401805482908110612e0c57612e0c6143ee565b90600052602060002001868683818110612e2857612e286143ee565b9050602002013581548110612e3f57612e3f6143ee565b9060005260206000200154828281518110612e5c57612e5c6143ee565b602090810291909101015260025482516001600160a01b039091169063f242432a9033903090869086908110612e9457612e946143ee565b602002602001015160016040518563ffffffff1660e01b8152600401612ebd9493929190614767565b600060405180830381600087803b158015612ed757600080fd5b505af1158015612eeb573d6000803e3d6000fd5b505050508080612efa90614490565b915050612de1565b506000838152600960209081526040909120805460ff1916600190811782558351612f3493929091019184019061349b565b50336000908152600a60205260408120805491612f5083614490565b9091555050604051339084907f0a8845a2c57cee2e7626fb1c364719df23696ce4c67538926c65271c600a4e5b90600090a350509392505050565b60606000612f98836130bf565b60010190506000816001600160401b03811115612fb757612fb7613797565b6040519080825280601f01601f191660200182016040528015612fe1576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084612feb57509392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526110e2908490613197565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106130fe5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061312a576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061314857662386f26fc10000830492506010015b6305f5e1008310613160576305f5e100830492506008015b612710831061317457612710830492506004015b60648310613186576064830492506002015b600a831061088e5760010192915050565b60006131ec826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166132699092919063ffffffff16565b8051909150156110e2578080602001905181019061320a919061479f565b6110e25760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610ae7565b60606132788484600085613282565b90505b9392505050565b6060824710156132e35760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610ae7565b6001600160a01b0385163b61333a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610ae7565b600080866001600160a01b031685876040516133569190614c64565b60006040518083038185875af1925050503d8060008114613393576040519150601f19603f3d011682016040523d82523d6000602084013e613398565b606091505b50915091506133a88282866133b3565b979650505050505050565b606083156133c257508161327b565b8251156133d25782518084602001fd5b8160405162461bcd60e51b8152600401610ae79190613764565b828054828255906000526020600020908101928215613432579160200282015b8281111561343257825182906134229082614a1a565b509160200191906001019061340c565b5061343e9291506134e2565b5090565b82805482825590600052602060002090810192821561348f579160200282015b8281111561348f578251805161347f91849160209091019061349b565b5091602001919060010190613462565b5061343e9291506134ff565b8280548282559060005260206000209081019282156134d6579160200282015b828111156134d65782518255916020019190600101906134bb565b5061343e92915061351c565b8082111561343e5760006134f68282613531565b506001016134e2565b8082111561343e576000613513828261356b565b506001016134ff565b5b8082111561343e576000815560010161351d565b50805461353d906144e3565b6000825580601f1061354d575050565b601f0160209004906000526020600020908101906129ac919061351c565b50805460008255906000526020600020908101906129ac919061351c565b60006020828403121561359b57600080fd5b81356001600160e01b03198116811461327b57600080fd5b6000602082840312156135c557600080fd5b5035919050565b60005b838110156135e75781810151838201526020016135cf565b50506000910152565b600081518084526136088160208601602086016135cc565b601f01601f19169290920160200192915050565b60008282518085526020808601955060058183821b8501018287016000805b868110156136a857601f1988850381018c5283518051808752908801908887019080891b88018a01865b8281101561369157858a830301845261367f8286516135f0565b948c0194938c01939150600101613665565b509e8a019e9750505093870193505060010161363b565b50919998505050505050505050565b60208152600061327b602083018461361c565b60008083601f8401126136dc57600080fd5b5081356001600160401b038111156136f357600080fd5b60208301915083602082850101111561370b57600080fd5b9250929050565b6000806000806060858703121561372857600080fd5b843593506020850135925060408501356001600160401b0381111561374c57600080fd5b613758878288016136ca565b95989497509550505050565b60208152600061327b60208301846135f0565b6001600160a01b03811681146129ac57600080fd5b803561134681613777565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156137d5576137d5613797565b604052919050565b60006001600160401b038211156137f6576137f6613797565b50601f01601f191660200190565b600082601f83011261381557600080fd5b8135613828613823826137dd565b6137ad565b81815284602083860101111561383d57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561387057600080fd5b843561387b81613777565b9350602085013561388b81613777565b92506040850135915060608501356001600160401b038111156138ad57600080fd5b6138b987828801613804565b91505092959194509250565b6000602082840312156138d757600080fd5b813561327b81613777565b60008060008060008060c087890312156138fb57600080fd5b86359550602087013561390d81613777565b95989597505050506040840135936060810135936080820135935060a0909101359150565b60008083601f84011261394457600080fd5b5081356001600160401b0381111561395b57600080fd5b6020830191508360208260051b850101111561370b57600080fd5b6000806020838503121561398957600080fd5b82356001600160401b0381111561399f57600080fd5b6139ab85828601613932565b90969095509350505050565b600081518084526020808501808196508360051b8101915082860160005b858110156139ff5782840389526139ed8483516135f0565b988501989350908401906001016139d5565b5091979650505050505050565b60208152600061327b60208301846139b7565b60008060008060008060006080888a031215613a3a57600080fd5b8735965060208801356001600160401b0380821115613a5857600080fd5b613a648b838c01613932565b909850965060408a0135915080821115613a7d57600080fd5b613a898b838c01613932565b909650945060608a0135915080821115613aa257600080fd5b50613aaf8a828b01613932565b989b979a50959850939692959293505050565b60008060408385031215613ad557600080fd5b8235613ae081613777565b91506020830135613af081613777565b809150509250929050565b600080600060408486031215613b1057600080fd5b8335925060208401356001600160401b03811115613b2d57600080fd5b613b39868287016136ca565b9497909650939450505050565b60006001600160401b03821115613b5f57613b5f613797565b5060051b60200190565b600082601f830112613b7a57600080fd5b81356020613b8a61382383613b46565b82815260059290921b84018101918181019086841115613ba957600080fd5b8286015b84811015613be85780356001600160401b03811115613bcc5760008081fd5b613bda8986838b0101613804565b845250918301918301613bad565b509695505050505050565b600080600080600080600080600080600060e08c8e031215613c1457600080fd5b8b359a506001600160401b038060208e01351115613c3157600080fd5b613c418e60208f01358f01613932565b909b50995060408d0135811015613c5757600080fd5b613c678e60408f01358f01613932565b909950975060608d0135811015613c7d57600080fd5b613c8d8e60608f01358f01613b69565b96508060808e01351115613ca057600080fd5b613cb08e60808f01358f01613b69565b95508060a08e01351115613cc357600080fd5b613cd38e60a08f01358f01613932565b909550935060c08d0135811015613ce957600080fd5b50613cfa8d60c08e01358e01613932565b81935080925050509295989b509295989b9093969950565b600080600060608486031215613d2757600080fd5b8335925060208401356001600160401b0380821115613d4557600080fd5b613d5187838801613b69565b93506040860135915080821115613d6757600080fd5b50613d7486828701613b69565b9150509250925092565b600081518084526020808501808196508360051b810191508286016000805b86811015613dec578385038a52825180518087529087019087870190845b81811015613dd757835183529289019291890191600101613dbb565b50509a87019a95505091850191600101613d9d565b509298975050505050505050565b60208152600061327b6020830184613d7e565b600082601f830112613e1e57600080fd5b81356020613e2e61382383613b46565b82815260059290921b84018101918181019086841115613e4d57600080fd5b8286015b84811015613be85780356001600160401b03811115613e705760008081fd5b613e7e8986838b0101613b69565b845250918301918301613e51565b600082601f830112613e9d57600080fd5b81356020613ead61382383613b46565b82815260059290921b84018101918181019086841115613ecc57600080fd5b8286015b84811015613be85780358352918301918301613ed0565b600082601f830112613ef857600080fd5b81356020613f0861382383613b46565b82815260059290921b84018101918181019086841115613f2757600080fd5b8286015b84811015613be85780356001600160401b0380821115613f4a57600080fd5b818901915089603f830112613f5e57600080fd5b85820135613f6e61382382613b46565b81815260059190911b830160400190878101908c831115613f8e57600080fd5b604085015b83811015613fc757803585811115613faa57600080fd5b613fb98f6040838a0101613e8c565b845250918901918901613f93565b50875250505092840192508301613f2b565b6000806000806000806000806000806101208b8d031215613ff957600080fd5b6140028b61378c565b995060208b0135985060408b01356001600160401b038082111561402557600080fd5b6140318e838f01613804565b995060608d013591508082111561404757600080fd5b6140538e838f01613b69565b985060808d013591508082111561406957600080fd5b6140758e838f01613b69565b975060a08d013591508082111561408b57600080fd5b6140978e838f01613e0d565b965060c08d01359150808211156140ad57600080fd5b6140b98e838f01613e0d565b955060e08d01359150808211156140cf57600080fd5b6140db8e838f01613ee7565b94506101008d01359150808211156140f257600080fd5b506140ff8d828e01613932565b915080935050809150509295989b9194979a5092959850565b6000806020838503121561412b57600080fd5b82356001600160401b0381111561414157600080fd5b6139ab858286016136ca565b600080600080600060a0868803121561416557600080fd5b853561417081613777565b9450602086013561418081613777565b935060408601356001600160401b038082111561419c57600080fd5b6141a889838a01613e8c565b945060608801359150808211156141be57600080fd5b6141ca89838a01613e8c565b935060808801359150808211156141e057600080fd5b506141ed88828901613804565b9150509295509295909350565b6000806000806000806080878903121561421357600080fd5b8635955060208701356001600160401b038082111561423157600080fd5b61423d8a838b01613932565b9097509550604089013591508082111561425657600080fd5b6142628a838b01613932565b9095509350606089013591508082111561427b57600080fd5b5061428889828a01613e8c565b9150509295509295509295565b60008060008060008060008060008060c08b8d0312156142b457600080fd5b8a35995060208b01356001600160401b03808211156142d257600080fd5b6142de8e838f01613932565b909b50995060408d01359150808211156142f757600080fd5b6143038e838f01613932565b909950975060608d013591508082111561431c57600080fd5b6143288e838f01613932565b909750955060808d0135945060a08d01359150808211156140f257600080fd5b600080600080600060a0868803121561436057600080fd5b853561436b81613777565b9450602086013561437b81613777565b9350604086013592506060860135915060808601356001600160401b038111156143a457600080fd5b6141ed88828901613804565b6000806000604084860312156143c557600080fd5b8335925060208401356001600160401b038111156143e257600080fd5b613b3986828701613932565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561441657600080fd5b81516001600160401b0381111561442c57600080fd5b8201601f8101841361443d57600080fd5b805161444b613823826137dd565b81815285602083850101111561446057600080fd5b6144718260208301602086016135cc565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b6000600182016144a2576144a261447a565b5060010190565b60208082526003908201526250303160e81b604082015260600190565b60208082526003908201526228181960e91b604082015260600190565b600181811c908216806144f757607f821691505b60208210810361451757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156110e257600081815260208120601f850160051c810160208610156145445750805b601f850160051c820191505b81811015610b4857828155600101614550565b6001600160401b0383111561457a5761457a613797565b61458e8361458883546144e3565b8361451d565b6000601f8411600181146145c257600085156145aa5750838201355b600019600387901b1c1916600186901b178355611924565b600083815260209020601f19861690835b828110156145f357868501358255602094850194600190920191016145d3565b50868210156146105760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6000815461462f816144e3565b60018281168015614647576001811461465c5761468b565b60ff198416875282151583028701945061468b565b8560005260208060002060005b858110156146825781548a820152908401908201614669565b50505082870194505b5050505092915050565b60006146a18285614622565b83516146b18183602088016135cc565b01949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b8082018082111561088e5761088e61447a565b8181038181111561088e5761088e61447a565b808202811582820484141761088e5761088e61447a565b60008261474957634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561476057600080fd5b5051919050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b6000602082840312156147b157600080fd5b8151801515811461327b57600080fd5b81835260006001600160fb1b038311156147da57600080fd5b8260051b80836020870137939093016020019392505050565b87815260806020820152600061480d60808301888a6147c1565b82810360408401526148208187896147c1565b905082810360608401526148358185876147c1565b9a9950505050505050505050565b60208082526003908201526250303360e81b604082015260600190565b8183526000602080850194508260005b8581101561489e57813561488381613777565b6001600160a01b031687529582019590820190600101614870565b509495945050505050565b6080815260006148bc60808301896139b7565b6020838203818501526148cf828a6139b7565b84810360408601528781529150808201600588811b840183018a60005b8b81101561495d57868303601f190185528135368e9003601e1901811261491257600080fd5b8d0186810190356001600160401b0381111561492d57600080fd5b80861b360382131561493e57600080fd5b6149498582846147c1565b9688019694505050908501906001016148ec565b5050868103606088015261497281898b614860565b9d9c50505050505050505050505050565b600082601f83011261499457600080fd5b815160206149a461382383613b46565b82815260059290921b840181019181810190868411156149c357600080fd5b8286015b84811015613be857805183529183019183016149c7565b6000602082840312156149f057600080fd5b81516001600160401b03811115614a0657600080fd5b614a1284828501614983565b949350505050565b81516001600160401b03811115614a3357614a33613797565b614a4781614a4184546144e3565b8461451d565b602080601f831160018114614a7c5760008415614a645750858301515b600019600386901b1c1916600185901b178555610b48565b600085815260208120601f198616915b82811015614aab57888601518255948401946001909101908401614a8c565b5085821015614ac95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608081526000614aec608083018861361c565b602083820381850152614aff828961361c565b915083820360408501528187518084528284019150828160051b850101838a0160005b83811015614b5057601f19878403018552614b3e838351613d7e565b94860194925090850190600101614b22565b50508681036060880152614b6581898b614860565b9c9b505050505050505050505050565b60006020808385031215614b8857600080fd5b82516001600160401b0380821115614b9f57600080fd5b818501915085601f830112614bb357600080fd5b8151614bc161382382613b46565b81815260059190911b83018401908481019088831115614be057600080fd5b8585015b83811015614c1857805185811115614bfc5760008081fd5b614c0a8b89838a0101614983565b845250918601918601614be4565b5098975050505050505050565b600061327b8284614622565b600060208284031215614c4357600080fd5b815161327b81613777565b634e487b7160e01b600052603160045260246000fd5b60008251614c768184602087016135cc565b919091019291505056fea26469706673582212202abed3f3b3fddbf41b0d5ba328e8c6ad544834d070855d04d7ee0054721ef5e164736f6c63430008110033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Studio.sol:Studio",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5594,
        "contract": "contracts/Studio.sol:Studio",
        "label": "canvas",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(ICanvas)7206"
      },
      {
        "astId": 5597,
        "contract": "contracts/Studio.sol:Studio",
        "label": "element",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IElement)7302"
      },
      {
        "astId": 5599,
        "contract": "contracts/Studio.sol:Studio",
        "label": "baseURI",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 5603,
        "contract": "contracts/Studio.sol:Studio",
        "label": "admins",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 5608,
        "contract": "contracts/Studio.sol:Studio",
        "label": "projects",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(ProjectData)7446_storage)"
      },
      {
        "astId": 5096,
        "contract": "contracts/Studio.sol:Studio",
        "label": "auctionStartDelay",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 5102,
        "contract": "contracts/Studio.sol:Studio",
        "label": "artistClaimableRevenues",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 5106,
        "contract": "contracts/Studio.sol:Studio",
        "label": "platformClaimableRevenues",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 6598,
        "contract": "contracts/Studio.sol:Studio",
        "label": "canvases",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_struct(CanvasData)7469_storage)"
      },
      {
        "astId": 6602,
        "contract": "contracts/Studio.sol:Studio",
        "label": "userNonces",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_array(t_uint256)dyn_storage)dyn_storage": {
        "base": "t_array(t_uint256)dyn_storage",
        "encoding": "dynamic_array",
        "label": "uint256[][]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(ICanvas)7206": {
        "encoding": "inplace",
        "label": "contract ICanvas",
        "numberOfBytes": "20"
      },
      "t_contract(IElement)7302": {
        "encoding": "inplace",
        "label": "contract IElement",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_uint256,t_struct(CanvasData)7469_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct IStudio.CanvasData)",
        "numberOfBytes": "32",
        "value": "t_struct(CanvasData)7469_storage"
      },
      "t_mapping(t_uint256,t_struct(ProjectData)7446_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct IProjects.ProjectData)",
        "numberOfBytes": "32",
        "value": "t_struct(ProjectData)7446_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(CanvasData)7469_storage": {
        "encoding": "inplace",
        "label": "struct IStudio.CanvasData",
        "members": [
          {
            "astId": 7463,
            "contract": "contracts/Studio.sol:Studio",
            "label": "wrapped",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 7466,
            "contract": "contracts/Studio.sol:Studio",
            "label": "wrappedElementTokenIds",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 7468,
            "contract": "contracts/Studio.sol:Studio",
            "label": "hash",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(ProjectData)7446_storage": {
        "encoding": "inplace",
        "label": "struct IProjects.ProjectData",
        "members": [
          {
            "astId": 7414,
            "contract": "contracts/Studio.sol:Studio",
            "label": "locked",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 7416,
            "contract": "contracts/Studio.sol:Studio",
            "label": "artistAddress",
            "offset": 1,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 7420,
            "contract": "contracts/Studio.sol:Studio",
            "label": "scripts",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_string_storage)"
          },
          {
            "astId": 7423,
            "contract": "contracts/Studio.sol:Studio",
            "label": "elementCategoryLabels",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 7426,
            "contract": "contracts/Studio.sol:Studio",
            "label": "elementCategoryValues",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 7430,
            "contract": "contracts/Studio.sol:Studio",
            "label": "elementTokenIds",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_array(t_uint256)dyn_storage)dyn_storage"
          },
          {
            "astId": 7433,
            "contract": "contracts/Studio.sol:Studio",
            "label": "blankCanvasIds",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 7435,
            "contract": "contracts/Studio.sol:Studio",
            "label": "metadata",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          },
          {
            "astId": 7437,
            "contract": "contracts/Studio.sol:Studio",
            "label": "auctionERC20",
            "offset": 0,
            "slot": "7",
            "type": "t_address"
          },
          {
            "astId": 7439,
            "contract": "contracts/Studio.sol:Studio",
            "label": "auctionStartTime",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 7441,
            "contract": "contracts/Studio.sol:Studio",
            "label": "auctionEndTime",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 7443,
            "contract": "contracts/Studio.sol:Studio",
            "label": "auctionStartPrice",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 7445,
            "contract": "contracts/Studio.sol:Studio",
            "label": "auctionEndPrice",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}