{
  "address": "0x177835b21E75ef9df4761E8ec74d7AB098EE43ba",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "revenueClaimed",
          "type": "uint256"
        }
      ],
      "name": "ArtistRevenueClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "constantA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "constantB",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "artistAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "erc20Token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        }
      ],
      "name": "BondingCurveCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bondingCurveCreator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "erc1155Quantity",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "erc20TotalSpent",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "erc20TotalFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "erc20ArtistFee",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "ElementsBought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bondingCurveCreator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "erc1155Quantity",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "erc20Received",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "ElementsSold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "revenueClaimed",
          "type": "uint256"
        }
      ],
      "name": "PlatformRevenueClaimed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "artistFeeNumerator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "artistRevenues",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_erc1155Quantities",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_maxERC20sToSpend",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "batchBuyElements",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_erc1155Quantities",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_minERC20sToReceive",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "_erc20Recipient",
          "type": "address"
        }
      ],
      "name": "batchSellElements",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_erc1155Quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxERC20ToSpend",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "buyElements",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_constantA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_constantB",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_artistAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_erc20Token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        }
      ],
      "name": "createBondingCurve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_constantAs",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_constantBs",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "_artistAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_erc20Token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        }
      ],
      "name": "createBondingCurves",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "element",
      "outputs": [
        {
          "internalType": "contract IERC1155MintBurn",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_erc1155Quantity",
          "type": "uint256"
        }
      ],
      "name": "getBuyERC20Amount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "erc20Amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_erc1155Quantity",
          "type": "uint256"
        }
      ],
      "name": "getBuyERC20AmountWithFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "erc20TotalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "erc20TotalFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "erc20ArtistFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_erc1155Quantity",
          "type": "uint256"
        }
      ],
      "name": "getSellERC20Amount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "erc20Amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_element",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_studio",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_totalFeeNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_artistFeeNumerator",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "platformRevenue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_erc1155Quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minERC20ToReceive",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_erc20Recipient",
          "type": "address"
        }
      ],
      "name": "sellElements",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "studio",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToBondingCurve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "constantA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "constantB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserves",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "artistAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "erc20Token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFeeNumerator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x7084501aed9b5e2c4a42ec36573c6fd90fb3abf3da77c38211240f1be76267ac",
  "receipt": {
    "to": null,
    "from": "0x6bd62FeB486Bf699Ac04eD6DC09dE36D11720509",
    "contractAddress": "0x177835b21E75ef9df4761E8ec74d7AB098EE43ba",
    "transactionIndex": 2,
    "gasUsed": "1519301",
    "logsBloom": "0x
    "blockHash": "0x5c5092fe50b1c514c77959908c15f01a1c1c8e4d532a264a7793280da342cdac",
    "transactionHash": "0x7084501aed9b5e2c4a42ec36573c6fd90fb3abf3da77c38211240f1be76267ac",
    "logs": [],
    "blockNumber": 7310931,
    "cumulativeGasUsed": "2927538",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "087a7cb0e2ad6a30db8c30e9538f1bcb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"revenueClaimed\",\"type\":\"uint256\"}],\"name\":\"ArtistRevenueClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"constantA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"constantB\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"artistAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20Token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"name\":\"BondingCurveCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondingCurveCreator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"erc1155Quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"erc20TotalSpent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"erc20TotalFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"erc20ArtistFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"ElementsBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondingCurveCreator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"erc1155Quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"erc20Received\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"ElementsSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"revenueClaimed\",\"type\":\"uint256\"}],\"name\":\"PlatformRevenueClaimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"artistFeeNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"artistRevenues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_erc1155Quantities\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_maxERC20sToSpend\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"batchBuyElements\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_erc1155Quantities\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_minERC20sToReceive\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"_erc20Recipient\",\"type\":\"address\"}],\"name\":\"batchSellElements\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_erc1155Quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxERC20ToSpend\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"buyElements\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_constantA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_constantB\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_artistAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_erc20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"}],\"name\":\"createBondingCurve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_constantAs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_constantBs\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"_artistAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_erc20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"}],\"name\":\"createBondingCurves\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"element\",\"outputs\":[{\"internalType\":\"contract IERC1155MintBurn\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_erc1155Quantity\",\"type\":\"uint256\"}],\"name\":\"getBuyERC20Amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20Amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_erc1155Quantity\",\"type\":\"uint256\"}],\"name\":\"getBuyERC20AmountWithFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20TotalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"erc20TotalFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"erc20ArtistFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_erc1155Quantity\",\"type\":\"uint256\"}],\"name\":\"getSellERC20Amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20Amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_element\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_studio\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalFeeNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_artistFeeNumerator\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformRevenue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_erc1155Quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minERC20ToReceive\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_erc20Recipient\",\"type\":\"address\"}],\"name\":\"sellElements\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"studio\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenIdToBondingCurve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"constantA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"constantB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserves\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"artistAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFeeNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AMM.sol\":\"AMM\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"contracts/AMM.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"./interfaces/IERC1155MintBurn.sol\\\";\\r\\nimport \\\"./interfaces/IAMM.sol\\\";\\r\\n\\r\\ncontract AMM is IAMM, Initializable {\\r\\n    using SafeERC20 for IERC20;\\r\\n\\r\\n    // todo: Change this interface\\r\\n    IERC1155MintBurn public element;\\r\\n    address public studio;\\r\\n    uint256 public totalFeeNumerator;\\r\\n    uint256 public artistFeeNumerator;\\r\\n    uint256 constant FEE_DENOMINATOR = 1_000_000_000;\\r\\n    uint256 public platformRevenue;\\r\\n\\r\\n    // tokenID => BondingCurve\\r\\n    mapping(uint256 => BondingCurve) public tokenIdToBondingCurve;\\r\\n    mapping(address => uint256) public artistRevenues;\\r\\n\\r\\n    modifier onlyStudio() {\\r\\n        require(\\r\\n            msg.sender == studio,\\r\\n            \\\"Only the Studio contract can call this function\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function initialize(\\r\\n        address _element,\\r\\n        address _studio,\\r\\n        uint256 _totalFeeNumerator,\\r\\n        uint256 _artistFeeNumerator\\r\\n    ) external initializer {\\r\\n        element = IERC1155MintBurn(_element);\\r\\n        studio = _studio;\\r\\n        totalFeeNumerator = _totalFeeNumerator;\\r\\n        artistFeeNumerator = _artistFeeNumerator;\\r\\n    }\\r\\n\\r\\n    function createBondingCurves(\\r\\n        uint256[] calldata _tokenIds,\\r\\n        uint256[] calldata _constantAs,\\r\\n        uint256[] calldata _constantBs,\\r\\n        address _artistAddress,\\r\\n        address _erc20Token,\\r\\n        uint256 _startTime\\r\\n    ) external onlyStudio {\\r\\n        require(\\r\\n            _tokenIds.length == _constantAs.length &&\\r\\n                _tokenIds.length == _constantBs.length,\\r\\n            \\\"Invalid array lengths\\\"\\r\\n        );\\r\\n        for (uint256 i; i < _tokenIds.length; i++) {\\r\\n            createBondingCurve(\\r\\n                _tokenIds[i],\\r\\n                _constantAs[i],\\r\\n                _constantBs[i],\\r\\n                _artistAddress,\\r\\n                _erc20Token,\\r\\n                _startTime\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function createBondingCurve(\\r\\n        uint256 _tokenId,\\r\\n        uint256 _constantA,\\r\\n        uint256 _constantB,\\r\\n        address _artistAddress,\\r\\n        address _erc20Token,\\r\\n        uint256 _startTime\\r\\n    ) public onlyStudio {\\r\\n        require(\\r\\n            _artistAddress != address(0),\\r\\n            \\\"Artist address cannot be address zero\\\"\\r\\n        );\\r\\n        require(\\r\\n            tokenIdToBondingCurve[_tokenId].artistAddress == address(0),\\r\\n            \\\"Bonding curve already initialized\\\"\\r\\n        );\\r\\n\\r\\n        tokenIdToBondingCurve[_tokenId] = BondingCurve(\\r\\n            _constantA,\\r\\n            _constantB,\\r\\n            0,\\r\\n            _artistAddress,\\r\\n            _erc20Token,\\r\\n            _startTime\\r\\n        );\\r\\n\\r\\n        emit BondingCurveCreated(\\r\\n            _tokenId,\\r\\n            _constantA,\\r\\n            _constantB,\\r\\n            _artistAddress,\\r\\n            _erc20Token,\\r\\n            _startTime\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function buyElements(\\r\\n        uint256 _tokenId,\\r\\n        uint256 _erc1155Quantity,\\r\\n        uint256 _maxERC20ToSpend,\\r\\n        address _spender,\\r\\n        address _recipient\\r\\n    ) public onlyStudio {\\r\\n        (\\r\\n            uint256 erc20TotalAmount,\\r\\n            uint256 erc20TotalFee,\\r\\n            uint256 erc20ArtistFee\\r\\n        ) = getBuyERC20AmountWithFee(_tokenId, _erc1155Quantity);\\r\\n\\r\\n        require(erc20TotalAmount <= _maxERC20ToSpend, \\\"Slippage too high\\\");\\r\\n\\r\\n        IERC20(tokenIdToBondingCurve[_tokenId].erc20Token).safeTransferFrom(\\r\\n            _spender,\\r\\n            address(this),\\r\\n            erc20TotalAmount\\r\\n        );\\r\\n        // platformRevenue += erc20TotalFee - erc20ArtistFee;\\r\\n        // artistRevenues[\\r\\n        //     tokenIdToBondingCurve[_tokenId].artistAddress\\r\\n        // ] += erc20ArtistFee;\\r\\n        tokenIdToBondingCurve[_tokenId].reserves += (erc20TotalAmount -\\r\\n            erc20TotalFee);\\r\\n\\r\\n        element.mint(_recipient, _tokenId, _erc1155Quantity);\\r\\n\\r\\n        // emit ElementsBought(\\r\\n        //     _bondingCurveCreator,\\r\\n        //     _tokenId,\\r\\n        //     _erc1155Quantity,\\r\\n        //     erc20TotalAmount,\\r\\n        //     erc20TotalFee,\\r\\n        //     erc20ArtistFee,\\r\\n        //     _recipient\\r\\n        // );\\r\\n    }\\r\\n\\r\\n    function batchBuyElements(\\r\\n        uint256[] memory _tokenIds,\\r\\n        uint256[] memory _erc1155Quantities,\\r\\n        uint256[] memory _maxERC20sToSpend,\\r\\n        address _spender,\\r\\n        address _recipient\\r\\n    ) external onlyStudio {\\r\\n        require(\\r\\n            _tokenIds.length == _erc1155Quantities.length &&\\r\\n                _tokenIds.length == _maxERC20sToSpend.length,\\r\\n            \\\"Invalid array lengths\\\"\\r\\n        );\\r\\n\\r\\n        for (uint256 i; i < _tokenIds.length; i++) {\\r\\n            buyElements(\\r\\n                _tokenIds[i],\\r\\n                _erc1155Quantities[i],\\r\\n                _maxERC20sToSpend[i],\\r\\n                _spender,\\r\\n                _recipient\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function sellElements(\\r\\n        uint256 _tokenId,\\r\\n        uint256 _erc1155Quantity,\\r\\n        uint256 _minERC20ToReceive,\\r\\n        address _erc20Recipient\\r\\n    ) public onlyStudio {\\r\\n        require(\\r\\n            block.timestamp >= tokenIdToBondingCurve[_tokenId].startTime,\\r\\n            \\\"AMM has not started yet\\\"\\r\\n        );\\r\\n        uint256 erc20TotalAmount = getSellERC20Amount(\\r\\n            _tokenId,\\r\\n            _erc1155Quantity\\r\\n        );\\r\\n        require(erc20TotalAmount >= _minERC20ToReceive, \\\"Slippage too high\\\");\\r\\n\\r\\n        tokenIdToBondingCurve[_tokenId].reserves -= erc20TotalAmount;\\r\\n\\r\\n        element.burn(msg.sender, _tokenId, _erc1155Quantity);\\r\\n\\r\\n        IERC20(tokenIdToBondingCurve[_tokenId].erc20Token).safeTransfer(\\r\\n            _erc20Recipient,\\r\\n            erc20TotalAmount\\r\\n        );\\r\\n\\r\\n        // emit ElementsSold(\\r\\n        //     _bondingCurveCreator,\\r\\n        //     _tokenId,\\r\\n        //     _erc1155Quantity,\\r\\n        //     erc20TotalAmount,\\r\\n        //     _recipient\\r\\n        // );\\r\\n    }\\r\\n\\r\\n    function batchSellElements(\\r\\n        uint256[] memory _tokenIds,\\r\\n        uint256[] memory _erc1155Quantities,\\r\\n        uint256[] memory _minERC20sToReceive,\\r\\n        address _erc20Recipient\\r\\n    ) external onlyStudio {\\r\\n        require(\\r\\n            _tokenIds.length == _erc1155Quantities.length &&\\r\\n                _tokenIds.length == _minERC20sToReceive.length,\\r\\n            \\\"Invalid array lengths\\\"\\r\\n        );\\r\\n\\r\\n        for (uint256 i; i < _tokenIds.length; i++) {\\r\\n            sellElements(\\r\\n                _tokenIds[i],\\r\\n                _erc1155Quantities[i],\\r\\n                _minERC20sToReceive[i],\\r\\n                _erc20Recipient\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // function claimPlatformRevenue(address _recipient) external onlyOwner {\\r\\n    //     uint256 _platformRevenue = platformRevenue;\\r\\n    //     platformRevenue = 0;\\r\\n\\r\\n    //     weth.transfer(_recipient, _platformRevenue);\\r\\n\\r\\n    //     emit PlatformRevenueClaimed(_recipient, _platformRevenue);\\r\\n    // }\\r\\n\\r\\n    // function claimArtistRevenue(address _recipient) external {\\r\\n    //     require(\\r\\n    //         artistRevenues[msg.sender] > 0,\\r\\n    //         \\\"You do not have an available balance\\\"\\r\\n    //     );\\r\\n\\r\\n    //     uint256 claimedRevenue = artistRevenues[msg.sender];\\r\\n    //     artistRevenues[msg.sender] = 0;\\r\\n\\r\\n    //     weth.safeTransfer(_recipient, claimedRevenue);\\r\\n\\r\\n    //     emit ArtistRevenueClaimed(_recipient, claimedRevenue);\\r\\n    // }\\r\\n\\r\\n    function getBuyERC20AmountWithFee(\\r\\n        uint256 _tokenId,\\r\\n        uint256 _erc1155Quantity\\r\\n    )\\r\\n        public\\r\\n        view\\r\\n        returns (\\r\\n            uint256 erc20TotalAmount,\\r\\n            uint256 erc20TotalFee,\\r\\n            uint256 erc20ArtistFee\\r\\n        )\\r\\n    {\\r\\n        uint256 nominalERC20Amount = getBuyERC20Amount(\\r\\n            _tokenId,\\r\\n            _erc1155Quantity\\r\\n        );\\r\\n        erc20TotalFee =\\r\\n            (nominalERC20Amount * totalFeeNumerator) /\\r\\n            FEE_DENOMINATOR;\\r\\n        erc20ArtistFee =\\r\\n            (nominalERC20Amount * artistFeeNumerator) /\\r\\n            FEE_DENOMINATOR;\\r\\n        erc20TotalAmount = nominalERC20Amount + erc20TotalFee;\\r\\n    }\\r\\n\\r\\n    function getBuyERC20Amount(uint256 _tokenId, uint256 _erc1155Quantity)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256 erc20Amount)\\r\\n    {\\r\\n        require(\\r\\n            block.timestamp >= tokenIdToBondingCurve[_tokenId].startTime,\\r\\n            \\\"AMM has not started yet\\\"\\r\\n        );\\r\\n        require(\\r\\n            tokenIdToBondingCurve[_tokenId].artistAddress != address(0),\\r\\n            \\\"Bonding curve not initialized\\\"\\r\\n        );\\r\\n\\r\\n        // reserves = (a * supply) + (b * supply)^2\\r\\n        uint256 newElementSupply = element.totalSupply(_tokenId) +\\r\\n            _erc1155Quantity;\\r\\n\\r\\n        erc20Amount =\\r\\n            ((tokenIdToBondingCurve[_tokenId].constantA * newElementSupply) +\\r\\n                (tokenIdToBondingCurve[_tokenId].constantB *\\r\\n                    newElementSupply) **\\r\\n                    2) -\\r\\n            tokenIdToBondingCurve[_tokenId].reserves;\\r\\n    }\\r\\n\\r\\n    function getSellERC20Amount(uint256 _tokenId, uint256 _erc1155Quantity)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256 erc20Amount)\\r\\n    {\\r\\n        require(\\r\\n            block.timestamp >= tokenIdToBondingCurve[_tokenId].startTime,\\r\\n            \\\"AMM has not started yet\\\"\\r\\n        );\\r\\n        require(\\r\\n            tokenIdToBondingCurve[_tokenId].artistAddress != address(0),\\r\\n            \\\"Bonding curve not initialized\\\"\\r\\n        );\\r\\n        require(\\r\\n            element.totalSupply(_tokenId) >= _erc1155Quantity,\\r\\n            \\\"Quantity greater than total supply\\\"\\r\\n        );\\r\\n        // reserves = (a * supply) + (b * supply)^2\\r\\n        uint256 newElementSupply = element.totalSupply(_tokenId) -\\r\\n            _erc1155Quantity;\\r\\n\\r\\n        erc20Amount =\\r\\n            tokenIdToBondingCurve[_tokenId].reserves -\\r\\n            ((tokenIdToBondingCurve[_tokenId].constantA * newElementSupply) +\\r\\n                (tokenIdToBondingCurve[_tokenId].constantB *\\r\\n                    newElementSupply) **\\r\\n                    2);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xefc38b2cac72dca6641f0da89f4e9ff9b52f5237e3acca0d3562d05c85a30191\",\"license\":\"Unlicense\"},\"contracts/interfaces/IAMM.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IAMM {\\r\\n    struct BondingCurve {\\r\\n        uint256 constantA;\\r\\n        uint256 constantB;\\r\\n        uint256 reserves;\\r\\n        address artistAddress;\\r\\n        address erc20Token;\\r\\n        uint256 startTime;\\r\\n    }\\r\\n\\r\\n    event BondingCurveCreated(\\r\\n        uint256 indexed tokenId,\\r\\n        uint256 constantA,\\r\\n        uint256 constantB,\\r\\n        address indexed artistAddress,\\r\\n        address erc20Token,\\r\\n        uint256 startTime\\r\\n    );\\r\\n\\r\\n    event ElementsBought(\\r\\n        address indexed bondingCurveCreator,\\r\\n        uint256 indexed tokenId,\\r\\n        uint256 erc1155Quantity,\\r\\n        uint256 erc20TotalSpent,\\r\\n        uint256 erc20TotalFee,\\r\\n        uint256 erc20ArtistFee,\\r\\n        address indexed recipient\\r\\n    );\\r\\n\\r\\n    event ElementsSold(\\r\\n        address indexed bondingCurveCreator,\\r\\n        uint256 indexed tokenId,\\r\\n        uint256 erc1155Quantity,\\r\\n        uint256 erc20Received,\\r\\n        address indexed recipient\\r\\n    );\\r\\n\\r\\n    event PlatformRevenueClaimed(\\r\\n        address indexed recipient,\\r\\n        uint256 revenueClaimed\\r\\n    );\\r\\n\\r\\n    event ArtistRevenueClaimed(\\r\\n        address indexed recipient,\\r\\n        uint256 revenueClaimed\\r\\n    );\\r\\n\\r\\n    function initialize(\\r\\n        address _element,\\r\\n        address _studio,\\r\\n        uint256 _totalFeeNumerator,\\r\\n        uint256 _artistFeeNumerator\\r\\n    ) external;\\r\\n\\r\\n    function createBondingCurves(\\r\\n        uint256[] calldata _tokenIds,\\r\\n        uint256[] calldata _constantAs,\\r\\n        uint256[] calldata _constantBs,\\r\\n        address _artistAddress,\\r\\n        address _erc20Token,\\r\\n        uint256 _startTime\\r\\n    ) external;\\r\\n\\r\\n    function createBondingCurve(\\r\\n        uint256 _tokenId,\\r\\n        uint256 _constantA,\\r\\n        uint256 _constantB,\\r\\n        address _artistAddress,\\r\\n        address _erc20Token,\\r\\n        uint256 _startTime\\r\\n    ) external;\\r\\n\\r\\n    function buyElements(\\r\\n        uint256 _tokenId,\\r\\n        uint256 _erc1155Quantity,\\r\\n        uint256 _maxERC20ToSpend,\\r\\n        address _spender,\\r\\n        address _recipient\\r\\n    ) external;\\r\\n\\r\\n    function batchBuyElements(\\r\\n        uint256[] memory _tokenIds,\\r\\n        uint256[] memory _erc1155Quantities,\\r\\n        uint256[] memory _maxERC20sToSpend,\\r\\n        address _spender,\\r\\n        address _recipient\\r\\n    ) external;\\r\\n\\r\\n    function sellElements(\\r\\n        uint256 _tokenId,\\r\\n        uint256 _erc1155Quantity,\\r\\n        uint256 _minERC20ToReceive,\\r\\n        address _erc20Recipient\\r\\n    ) external;\\r\\n\\r\\n    function batchSellElements(\\r\\n        uint256[] memory _tokenIds,\\r\\n        uint256[] memory _erc1155Quantities,\\r\\n        uint256[] memory _minERC20sToReceive,\\r\\n        address _erc20Recipient\\r\\n    ) external;\\r\\n\\r\\n    function getBuyERC20AmountWithFee(\\r\\n        uint256 _tokenId,\\r\\n        uint256 _erc1155Quantity\\r\\n    )\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256 erc20TotalAmount,\\r\\n            uint256 erc20TotalFee,\\r\\n            uint256 erc20ArtistFee\\r\\n        );\\r\\n\\r\\n    function getBuyERC20Amount(uint256 _tokenId, uint256 _erc1155Quantity)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256 erc20Amount);\\r\\n    \\r\\n\\r\\n    function getSellERC20Amount(uint256 _tokenId, uint256 _erc1155Quantity)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256 erc20Amount);\\r\\n}\\r\\n\",\"keccak256\":\"0xb5388fe3e5787be3576f943ac9871fc96879fc75a73ddfe153318d22e3f8c553\",\"license\":\"Unlicense\"},\"contracts/interfaces/IERC1155MintBurn.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IERC1155MintBurn {\\r\\n    function mint(\\r\\n        address account,\\r\\n        uint256 id,\\r\\n        uint256 amount\\r\\n    ) external;\\r\\n\\r\\n    function burn(\\r\\n        address account,\\r\\n        uint256 id,\\r\\n        uint256 value\\r\\n    ) external;\\r\\n\\r\\n    function totalSupply(uint256 id) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0xde9a2b2d4faf0c9d4341972264a3d9160a8a430f976da40b78ac15b6197f1d5a\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611a87806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806394d391fe116100a2578063c7cb00fe11610071578063c7cb00fe146102aa578063ca7ee8a0146102bd578063d282855b146102d0578063eb990c59146102e3578063fd40af0f146102f657600080fd5b806394d391fe146101ef578063ae2f151114610202578063b8d3370b1461028e578063c0c7b5051461029757600080fd5b80638951c8e3116100de5780638951c8e3146101a057806390db5d03146101b357806391a37ced146101bc57806392069f8f146101cf57600080fd5b806324048ba1146101105780632884fd001461012c578063421e56921461015d57806384a18b681461018b575b600080fd5b61011960045481565b6040519081526020015b60405180910390f35b600054610145906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001610123565b61017061016b3660046112cd565b610309565b60408051938452602084019290925290820152606001610123565b61019e6101993660046113b1565b61036d565b005b61019e6101ae36600461145b565b61044c565b61011960035481565b6101196101ca3660046112cd565b6105bd565b6101196101dd36600461149a565b60066020526000908152604090205481565b61019e6101fd3660046114b5565b610814565b6102556102103660046114eb565b60056020819052600091825260409091208054600182015460028301546003840154600485015494909501549294919390926001600160a01b03928316929091169086565b604080519687526020870195909552938501929092526001600160a01b03908116606085015216608083015260a082015260c001610123565b61011960025481565b6101196102a53660046112cd565b61096c565b61019e6102b8366004611504565b610ae4565b600154610145906001600160a01b031681565b61019e6102de3660046115a8565b610d2b565b61019e6102f136600461166c565b610dfe565b61019e6103043660046116ae565b610f05565b600080600080610319868661096c565b9050633b9aca006002548261032e9190611752565b6103389190611771565b9250633b9aca006003548261034d9190611752565b6103579190611771565b91506103638382611793565b9350509250925092565b6001546001600160a01b031633146103a05760405162461bcd60e51b8152600401610397906117ab565b60405180910390fd5b835185511480156103b2575082518551145b6103ce5760405162461bcd60e51b8152600401610397906117fa565b60005b8551811015610444576104328682815181106103ef576103ef611829565b602002602001015186838151811061040957610409611829565b602002602001015186848151811061042357610423611829565b60200260200101518686610814565b8061043c8161183f565b9150506103d1565b505050505050565b6001546001600160a01b031633146104765760405162461bcd60e51b8152600401610397906117ab565b600084815260056020819052604090912001544210156104a85760405162461bcd60e51b815260040161039790611858565b60006104b485856105bd565b9050828110156104fa5760405162461bcd60e51b81526020600482015260116024820152700a6d8d2e0e0c2ceca40e8dede40d0d2ced607b1b6044820152606401610397565b6000858152600560205260408120600201805483929061051b90849061188f565b9091555050600054604051637a94c56560e11b81523360048201526024810187905260448101869052620100009091046001600160a01b03169063f5298aca90606401600060405180830381600087803b15801561057857600080fd5b505af115801561058c573d6000803e3d6000fd5b5050506000868152600560205260409020600401546105b691506001600160a01b03168383610fd2565b5050505050565b6000828152600560208190526040822001544210156105ee5760405162461bcd60e51b815260040161039790611858565b6000838152600560205260409020600301546001600160a01b03166106555760405162461bcd60e51b815260206004820152601d60248201527f426f6e64696e67206375727665206e6f7420696e697469616c697a65640000006044820152606401610397565b60005460405163bd85b03960e01b81526004810185905283916201000090046001600160a01b03169063bd85b03990602401602060405180830381865afa1580156106a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c891906118a6565b10156107215760405162461bcd60e51b815260206004820152602260248201527f5175616e746974792067726561746572207468616e20746f74616c20737570706044820152616c7960f01b6064820152608401610397565b6000805460405163bd85b03960e01b81526004810186905284916201000090046001600160a01b03169063bd85b03990602401602060405180830381865afa158015610771573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079591906118a6565b61079f919061188f565b6000858152600560205260409020600101549091506002906107c2908390611752565b6107cc91906119a5565b6000858152600560205260409020546107e6908390611752565b6107f09190611793565b60008581526005602052604090206002015461080c919061188f565b949350505050565b6001546001600160a01b0316331461083e5760405162461bcd60e51b8152600401610397906117ab565b600080600061084d8888610309565b925092509250858311156108975760405162461bcd60e51b81526020600482015260116024820152700a6d8d2e0e0c2ceca40e8dede40d0d2ced607b1b6044820152606401610397565b6000888152600560205260409020600401546108be906001600160a01b031686308661103a565b6108c8828461188f565b600089815260056020526040812060020180549091906108e9908490611793565b9091555050600054604051630ab714fb60e11b81526001600160a01b038681166004830152602482018b9052604482018a9052620100009092049091169063156e29f690606401600060405180830381600087803b15801561094a57600080fd5b505af115801561095e573d6000803e3d6000fd5b505050505050505050505050565b60008281526005602081905260408220015442101561099d5760405162461bcd60e51b815260040161039790611858565b6000838152600560205260409020600301546001600160a01b0316610a045760405162461bcd60e51b815260206004820152601d60248201527f426f6e64696e67206375727665206e6f7420696e697469616c697a65640000006044820152606401610397565b6000805460405163bd85b03960e01b81526004810186905284916201000090046001600160a01b03169063bd85b03990602401602060405180830381865afa158015610a54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7891906118a6565b610a829190611793565b60008581526005602052604090206002808201546001909201549293509091610aac908490611752565b610ab691906119a5565b600086815260056020526040902054610ad0908490611752565b610ada9190611793565b61080c919061188f565b6001546001600160a01b03163314610b0e5760405162461bcd60e51b8152600401610397906117ab565b6001600160a01b038316610b725760405162461bcd60e51b815260206004820152602560248201527f41727469737420616464726573732063616e6e6f742062652061646472657373604482015264207a65726f60d81b6064820152608401610397565b6000868152600560205260409020600301546001600160a01b031615610be45760405162461bcd60e51b815260206004820152602160248201527f426f6e64696e6720637572766520616c726561647920696e697469616c697a656044820152601960fa1b6064820152608401610397565b6040518060c0016040528086815260200185815260200160008152602001846001600160a01b03168152602001836001600160a01b03168152602001828152506005600088815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160040160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160050155905050826001600160a01b0316867fe6dfcb81806ee4e059abaffdf5fb294d228ce3d8f0d57d90a5e853b79ea8fc8687878686604051610d1b949392919093845260208401929092526001600160a01b03166040830152606082015260800190565b60405180910390a3505050505050565b6001546001600160a01b03163314610d555760405162461bcd60e51b8152600401610397906117ab565b8786148015610d6357508784145b610d7f5760405162461bcd60e51b8152600401610397906117fa565b60005b88811015610df257610de08a8a83818110610d9f57610d9f611829565b90506020020135898984818110610db857610db8611829565b90506020020135888885818110610dd157610dd1611829565b90506020020135878787610ae4565b80610dea8161183f565b915050610d82565b50505050505050505050565b600054610100900460ff16610e195760005460ff1615610e1d565b303b155b610e805760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610397565b600054610100900460ff16158015610ea2576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b038881169190910291909117909155600180546001600160a01b0319169186169190911790556002839055600382905580156105b6576000805461ff00191690555050505050565b6001546001600160a01b03163314610f2f5760405162461bcd60e51b8152600401610397906117ab565b82518451148015610f41575081518451145b610f5d5760405162461bcd60e51b8152600401610397906117fa565b60005b84518110156105b657610fc0858281518110610f7e57610f7e611829565b6020026020010151858381518110610f9857610f98611829565b6020026020010151858481518110610fb257610fb2611829565b60200260200101518561044c565b80610fca8161183f565b915050610f60565b6040516001600160a01b03831660248201526044810182905261103590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611078565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526110729085906323b872dd60e01b90608401610ffe565b50505050565b60006110cd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661114a9092919063ffffffff16565b80519091501561103557808060200190518101906110eb91906119b4565b6110355760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610397565b60606111598484600085611163565b90505b9392505050565b6060824710156111c45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610397565b6001600160a01b0385163b61121b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610397565b600080866001600160a01b031685876040516112379190611a02565b60006040518083038185875af1925050503d8060008114611274576040519150601f19603f3d011682016040523d82523d6000602084013e611279565b606091505b5091509150611289828286611294565b979650505050505050565b606083156112a357508161115c565b8251156112b35782518084602001fd5b8160405162461bcd60e51b81526004016103979190611a1e565b600080604083850312156112e057600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261131657600080fd5b8135602067ffffffffffffffff80831115611333576113336112ef565b8260051b604051601f19603f83011681018181108482111715611358576113586112ef565b60405293845285810183019383810192508785111561137657600080fd5b83870191505b848210156112895781358352918301919083019061137c565b80356001600160a01b03811681146113ac57600080fd5b919050565b600080600080600060a086880312156113c957600080fd5b853567ffffffffffffffff808211156113e157600080fd5b6113ed89838a01611305565b9650602088013591508082111561140357600080fd5b61140f89838a01611305565b9550604088013591508082111561142557600080fd5b5061143288828901611305565b93505061144160608701611395565b915061144f60808701611395565b90509295509295909350565b6000806000806080858703121561147157600080fd5b84359350602085013592506040850135915061148f60608601611395565b905092959194509250565b6000602082840312156114ac57600080fd5b61115c82611395565b600080600080600060a086880312156114cd57600080fd5b85359450602086013593506040860135925061144160608701611395565b6000602082840312156114fd57600080fd5b5035919050565b60008060008060008060c0878903121561151d57600080fd5b86359550602087013594506040870135935061153b60608801611395565b925061154960808801611395565b915060a087013590509295509295509295565b60008083601f84011261156e57600080fd5b50813567ffffffffffffffff81111561158657600080fd5b6020830191508360208260051b85010111156115a157600080fd5b9250929050565b600080600080600080600080600060c08a8c0312156115c657600080fd5b893567ffffffffffffffff808211156115de57600080fd5b6115ea8d838e0161155c565b909b50995060208c013591508082111561160357600080fd5b61160f8d838e0161155c565b909950975060408c013591508082111561162857600080fd5b506116358c828d0161155c565b9096509450611648905060608b01611395565b925061165660808b01611395565b915060a08a013590509295985092959850929598565b6000806000806080858703121561168257600080fd5b61168b85611395565b935061169960208601611395565b93969395505050506040820135916060013590565b600080600080608085870312156116c457600080fd5b843567ffffffffffffffff808211156116dc57600080fd5b6116e888838901611305565b955060208701359150808211156116fe57600080fd5b61170a88838901611305565b9450604087013591508082111561172057600080fd5b5061172d87828801611305565b92505061148f60608601611395565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561176c5761176c61173c565b500290565b60008261178e57634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156117a6576117a661173c565b500190565b6020808252602f908201527f4f6e6c79207468652053747564696f20636f6e74726163742063616e2063616c60408201526e36103a3434b990333ab731ba34b7b760891b606082015260800190565b602080825260159082015274496e76616c6964206172726179206c656e6774687360581b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000600182016118515761185161173c565b5060010190565b60208082526017908201527f414d4d20686173206e6f74207374617274656420796574000000000000000000604082015260600190565b6000828210156118a1576118a161173c565b500390565b6000602082840312156118b857600080fd5b5051919050565b600181815b808511156118fa5781600019048211156118e0576118e061173c565b808516156118ed57918102915b93841c93908002906118c4565b509250929050565b6000826119115750600161199f565b8161191e5750600061199f565b8160018114611934576002811461193e5761195a565b600191505061199f565b60ff84111561194f5761194f61173c565b50506001821b61199f565b5060208310610133831016604e8410600b841016171561197d575081810a61199f565b61198783836118bf565b806000190482111561199b5761199b61173c565b0290505b92915050565b600061115c60ff841683611902565b6000602082840312156119c657600080fd5b8151801515811461115c57600080fd5b60005b838110156119f15781810151838201526020016119d9565b838111156110725750506000910152565b60008251611a148184602087016119d6565b9190910192915050565b6020815260008251806020840152611a3d8160408501602087016119d6565b601f01601f1916919091016040019291505056fea2646970667358221220bece2b4b9e85fbb58095d0cc68dcbc6927002fcb59600e2f1744e1bdc80f6d1b64736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c806394d391fe116100a2578063c7cb00fe11610071578063c7cb00fe146102aa578063ca7ee8a0146102bd578063d282855b146102d0578063eb990c59146102e3578063fd40af0f146102f657600080fd5b806394d391fe146101ef578063ae2f151114610202578063b8d3370b1461028e578063c0c7b5051461029757600080fd5b80638951c8e3116100de5780638951c8e3146101a057806390db5d03146101b357806391a37ced146101bc57806392069f8f146101cf57600080fd5b806324048ba1146101105780632884fd001461012c578063421e56921461015d57806384a18b681461018b575b600080fd5b61011960045481565b6040519081526020015b60405180910390f35b600054610145906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001610123565b61017061016b3660046112cd565b610309565b60408051938452602084019290925290820152606001610123565b61019e6101993660046113b1565b61036d565b005b61019e6101ae36600461145b565b61044c565b61011960035481565b6101196101ca3660046112cd565b6105bd565b6101196101dd36600461149a565b60066020526000908152604090205481565b61019e6101fd3660046114b5565b610814565b6102556102103660046114eb565b60056020819052600091825260409091208054600182015460028301546003840154600485015494909501549294919390926001600160a01b03928316929091169086565b604080519687526020870195909552938501929092526001600160a01b03908116606085015216608083015260a082015260c001610123565b61011960025481565b6101196102a53660046112cd565b61096c565b61019e6102b8366004611504565b610ae4565b600154610145906001600160a01b031681565b61019e6102de3660046115a8565b610d2b565b61019e6102f136600461166c565b610dfe565b61019e6103043660046116ae565b610f05565b600080600080610319868661096c565b9050633b9aca006002548261032e9190611752565b6103389190611771565b9250633b9aca006003548261034d9190611752565b6103579190611771565b91506103638382611793565b9350509250925092565b6001546001600160a01b031633146103a05760405162461bcd60e51b8152600401610397906117ab565b60405180910390fd5b835185511480156103b2575082518551145b6103ce5760405162461bcd60e51b8152600401610397906117fa565b60005b8551811015610444576104328682815181106103ef576103ef611829565b602002602001015186838151811061040957610409611829565b602002602001015186848151811061042357610423611829565b60200260200101518686610814565b8061043c8161183f565b9150506103d1565b505050505050565b6001546001600160a01b031633146104765760405162461bcd60e51b8152600401610397906117ab565b600084815260056020819052604090912001544210156104a85760405162461bcd60e51b815260040161039790611858565b60006104b485856105bd565b9050828110156104fa5760405162461bcd60e51b81526020600482015260116024820152700a6d8d2e0e0c2ceca40e8dede40d0d2ced607b1b6044820152606401610397565b6000858152600560205260408120600201805483929061051b90849061188f565b9091555050600054604051637a94c56560e11b81523360048201526024810187905260448101869052620100009091046001600160a01b03169063f5298aca90606401600060405180830381600087803b15801561057857600080fd5b505af115801561058c573d6000803e3d6000fd5b5050506000868152600560205260409020600401546105b691506001600160a01b03168383610fd2565b5050505050565b6000828152600560208190526040822001544210156105ee5760405162461bcd60e51b815260040161039790611858565b6000838152600560205260409020600301546001600160a01b03166106555760405162461bcd60e51b815260206004820152601d60248201527f426f6e64696e67206375727665206e6f7420696e697469616c697a65640000006044820152606401610397565b60005460405163bd85b03960e01b81526004810185905283916201000090046001600160a01b03169063bd85b03990602401602060405180830381865afa1580156106a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c891906118a6565b10156107215760405162461bcd60e51b815260206004820152602260248201527f5175616e746974792067726561746572207468616e20746f74616c20737570706044820152616c7960f01b6064820152608401610397565b6000805460405163bd85b03960e01b81526004810186905284916201000090046001600160a01b03169063bd85b03990602401602060405180830381865afa158015610771573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079591906118a6565b61079f919061188f565b6000858152600560205260409020600101549091506002906107c2908390611752565b6107cc91906119a5565b6000858152600560205260409020546107e6908390611752565b6107f09190611793565b60008581526005602052604090206002015461080c919061188f565b949350505050565b6001546001600160a01b0316331461083e5760405162461bcd60e51b8152600401610397906117ab565b600080600061084d8888610309565b925092509250858311156108975760405162461bcd60e51b81526020600482015260116024820152700a6d8d2e0e0c2ceca40e8dede40d0d2ced607b1b6044820152606401610397565b6000888152600560205260409020600401546108be906001600160a01b031686308661103a565b6108c8828461188f565b600089815260056020526040812060020180549091906108e9908490611793565b9091555050600054604051630ab714fb60e11b81526001600160a01b038681166004830152602482018b9052604482018a9052620100009092049091169063156e29f690606401600060405180830381600087803b15801561094a57600080fd5b505af115801561095e573d6000803e3d6000fd5b505050505050505050505050565b60008281526005602081905260408220015442101561099d5760405162461bcd60e51b815260040161039790611858565b6000838152600560205260409020600301546001600160a01b0316610a045760405162461bcd60e51b815260206004820152601d60248201527f426f6e64696e67206375727665206e6f7420696e697469616c697a65640000006044820152606401610397565b6000805460405163bd85b03960e01b81526004810186905284916201000090046001600160a01b03169063bd85b03990602401602060405180830381865afa158015610a54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7891906118a6565b610a829190611793565b60008581526005602052604090206002808201546001909201549293509091610aac908490611752565b610ab691906119a5565b600086815260056020526040902054610ad0908490611752565b610ada9190611793565b61080c919061188f565b6001546001600160a01b03163314610b0e5760405162461bcd60e51b8152600401610397906117ab565b6001600160a01b038316610b725760405162461bcd60e51b815260206004820152602560248201527f41727469737420616464726573732063616e6e6f742062652061646472657373604482015264207a65726f60d81b6064820152608401610397565b6000868152600560205260409020600301546001600160a01b031615610be45760405162461bcd60e51b815260206004820152602160248201527f426f6e64696e6720637572766520616c726561647920696e697469616c697a656044820152601960fa1b6064820152608401610397565b6040518060c0016040528086815260200185815260200160008152602001846001600160a01b03168152602001836001600160a01b03168152602001828152506005600088815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160040160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160050155905050826001600160a01b0316867fe6dfcb81806ee4e059abaffdf5fb294d228ce3d8f0d57d90a5e853b79ea8fc8687878686604051610d1b949392919093845260208401929092526001600160a01b03166040830152606082015260800190565b60405180910390a3505050505050565b6001546001600160a01b03163314610d555760405162461bcd60e51b8152600401610397906117ab565b8786148015610d6357508784145b610d7f5760405162461bcd60e51b8152600401610397906117fa565b60005b88811015610df257610de08a8a83818110610d9f57610d9f611829565b90506020020135898984818110610db857610db8611829565b90506020020135888885818110610dd157610dd1611829565b90506020020135878787610ae4565b80610dea8161183f565b915050610d82565b50505050505050505050565b600054610100900460ff16610e195760005460ff1615610e1d565b303b155b610e805760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610397565b600054610100900460ff16158015610ea2576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b038881169190910291909117909155600180546001600160a01b0319169186169190911790556002839055600382905580156105b6576000805461ff00191690555050505050565b6001546001600160a01b03163314610f2f5760405162461bcd60e51b8152600401610397906117ab565b82518451148015610f41575081518451145b610f5d5760405162461bcd60e51b8152600401610397906117fa565b60005b84518110156105b657610fc0858281518110610f7e57610f7e611829565b6020026020010151858381518110610f9857610f98611829565b6020026020010151858481518110610fb257610fb2611829565b60200260200101518561044c565b80610fca8161183f565b915050610f60565b6040516001600160a01b03831660248201526044810182905261103590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611078565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526110729085906323b872dd60e01b90608401610ffe565b50505050565b60006110cd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661114a9092919063ffffffff16565b80519091501561103557808060200190518101906110eb91906119b4565b6110355760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610397565b60606111598484600085611163565b90505b9392505050565b6060824710156111c45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610397565b6001600160a01b0385163b61121b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610397565b600080866001600160a01b031685876040516112379190611a02565b60006040518083038185875af1925050503d8060008114611274576040519150601f19603f3d011682016040523d82523d6000602084013e611279565b606091505b5091509150611289828286611294565b979650505050505050565b606083156112a357508161115c565b8251156112b35782518084602001fd5b8160405162461bcd60e51b81526004016103979190611a1e565b600080604083850312156112e057600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261131657600080fd5b8135602067ffffffffffffffff80831115611333576113336112ef565b8260051b604051601f19603f83011681018181108482111715611358576113586112ef565b60405293845285810183019383810192508785111561137657600080fd5b83870191505b848210156112895781358352918301919083019061137c565b80356001600160a01b03811681146113ac57600080fd5b919050565b600080600080600060a086880312156113c957600080fd5b853567ffffffffffffffff808211156113e157600080fd5b6113ed89838a01611305565b9650602088013591508082111561140357600080fd5b61140f89838a01611305565b9550604088013591508082111561142557600080fd5b5061143288828901611305565b93505061144160608701611395565b915061144f60808701611395565b90509295509295909350565b6000806000806080858703121561147157600080fd5b84359350602085013592506040850135915061148f60608601611395565b905092959194509250565b6000602082840312156114ac57600080fd5b61115c82611395565b600080600080600060a086880312156114cd57600080fd5b85359450602086013593506040860135925061144160608701611395565b6000602082840312156114fd57600080fd5b5035919050565b60008060008060008060c0878903121561151d57600080fd5b86359550602087013594506040870135935061153b60608801611395565b925061154960808801611395565b915060a087013590509295509295509295565b60008083601f84011261156e57600080fd5b50813567ffffffffffffffff81111561158657600080fd5b6020830191508360208260051b85010111156115a157600080fd5b9250929050565b600080600080600080600080600060c08a8c0312156115c657600080fd5b893567ffffffffffffffff808211156115de57600080fd5b6115ea8d838e0161155c565b909b50995060208c013591508082111561160357600080fd5b61160f8d838e0161155c565b909950975060408c013591508082111561162857600080fd5b506116358c828d0161155c565b9096509450611648905060608b01611395565b925061165660808b01611395565b915060a08a013590509295985092959850929598565b6000806000806080858703121561168257600080fd5b61168b85611395565b935061169960208601611395565b93969395505050506040820135916060013590565b600080600080608085870312156116c457600080fd5b843567ffffffffffffffff808211156116dc57600080fd5b6116e888838901611305565b955060208701359150808211156116fe57600080fd5b61170a88838901611305565b9450604087013591508082111561172057600080fd5b5061172d87828801611305565b92505061148f60608601611395565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561176c5761176c61173c565b500290565b60008261178e57634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156117a6576117a661173c565b500190565b6020808252602f908201527f4f6e6c79207468652053747564696f20636f6e74726163742063616e2063616c60408201526e36103a3434b990333ab731ba34b7b760891b606082015260800190565b602080825260159082015274496e76616c6964206172726179206c656e6774687360581b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000600182016118515761185161173c565b5060010190565b60208082526017908201527f414d4d20686173206e6f74207374617274656420796574000000000000000000604082015260600190565b6000828210156118a1576118a161173c565b500390565b6000602082840312156118b857600080fd5b5051919050565b600181815b808511156118fa5781600019048211156118e0576118e061173c565b808516156118ed57918102915b93841c93908002906118c4565b509250929050565b6000826119115750600161199f565b8161191e5750600061199f565b8160018114611934576002811461193e5761195a565b600191505061199f565b60ff84111561194f5761194f61173c565b50506001821b61199f565b5060208310610133831016604e8410600b841016171561197d575081810a61199f565b61198783836118bf565b806000190482111561199b5761199b61173c565b0290505b92915050565b600061115c60ff841683611902565b6000602082840312156119c657600080fd5b8151801515811461115c57600080fd5b60005b838110156119f15781810151838201526020016119d9565b838111156110725750506000910152565b60008251611a148184602087016119d6565b9190910192915050565b6020815260008251806020840152611a3d8160408501602087016119d6565b601f01601f1916919091016040019291505056fea2646970667358221220bece2b4b9e85fbb58095d0cc68dcbc6927002fcb59600e2f1744e1bdc80f6d1b64736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6,
        "contract": "contracts/AMM.sol:AMM",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 9,
        "contract": "contracts/AMM.sol:AMM",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 4768,
        "contract": "contracts/AMM.sol:AMM",
        "label": "element",
        "offset": 2,
        "slot": "0",
        "type": "t_contract(IERC1155MintBurn)7781"
      },
      {
        "astId": 4770,
        "contract": "contracts/AMM.sol:AMM",
        "label": "studio",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 4772,
        "contract": "contracts/AMM.sol:AMM",
        "label": "totalFeeNumerator",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 4774,
        "contract": "contracts/AMM.sol:AMM",
        "label": "artistFeeNumerator",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 4779,
        "contract": "contracts/AMM.sol:AMM",
        "label": "platformRevenue",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 4784,
        "contract": "contracts/AMM.sol:AMM",
        "label": "tokenIdToBondingCurve",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(BondingCurve)7409_storage)"
      },
      {
        "astId": 4788,
        "contract": "contracts/AMM.sol:AMM",
        "label": "artistRevenues",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC1155MintBurn)7781": {
        "encoding": "inplace",
        "label": "contract IERC1155MintBurn",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(BondingCurve)7409_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct IAMM.BondingCurve)",
        "numberOfBytes": "32",
        "value": "t_struct(BondingCurve)7409_storage"
      },
      "t_struct(BondingCurve)7409_storage": {
        "encoding": "inplace",
        "label": "struct IAMM.BondingCurve",
        "members": [
          {
            "astId": 7398,
            "contract": "contracts/AMM.sol:AMM",
            "label": "constantA",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 7400,
            "contract": "contracts/AMM.sol:AMM",
            "label": "constantB",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 7402,
            "contract": "contracts/AMM.sol:AMM",
            "label": "reserves",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 7404,
            "contract": "contracts/AMM.sol:AMM",
            "label": "artistAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 7406,
            "contract": "contracts/AMM.sol:AMM",
            "label": "erc20Token",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 7408,
            "contract": "contracts/AMM.sol:AMM",
            "label": "startTime",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}