{
  "address": "0xadFf6fe91B7A102682dC2375b503dA94497F5C42",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_canvas",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_element",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_auctionStartDelay",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "AMMInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "erc20",
          "type": "address"
        }
      ],
      "name": "ApprovedERC20Added",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "erc20",
          "type": "address"
        }
      ],
      "name": "ApprovedERC20Removed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "artist",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimedRevenue",
          "type": "uint256"
        }
      ],
      "name": "ArtistRevenueClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionStartDelay",
          "type": "uint256"
        }
      ],
      "name": "AuctionStartDelayUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "canvasId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "unwrapper",
          "type": "address"
        }
      ],
      "name": "CanvasUnwrapped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "canvasTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "wrapper",
          "type": "address"
        }
      ],
      "name": "CanvasWrapped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "erc20Spent",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newERC20Balance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newElementBalance",
          "type": "uint256"
        }
      ],
      "name": "ElementBoughtFromAMM",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "ElementBoughtFromAuction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "erc20Received",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newERC20Balance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newElementBalance",
          "type": "uint256"
        }
      ],
      "name": "ElementSoldToAMM",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "elementTokenId",
          "type": "uint256"
        }
      ],
      "name": "MarketUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimedRevenue",
          "type": "uint256"
        }
      ],
      "name": "PlatformRevenueClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        }
      ],
      "name": "ProjectCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FEE_DENOMINATOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_erc20",
          "type": "address"
        }
      ],
      "name": "addApprovedERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_artists",
          "type": "address[]"
        }
      ],
      "name": "addWhitelistedArtists",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ammArtistFeeNumerator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ammPlatformFeeNumerator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvedERC20s",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "artistClaimableRevenues",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auctionPlatformFeeNumerator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auctionStartDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxERC20ToSpend",
          "type": "uint256"
        }
      ],
      "name": "buyElementFromAMM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_erc20Spent",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "buyElementFromAuction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_erc20Spent",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_quantities",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_maxERC20ToSpend",
          "type": "uint256"
        }
      ],
      "name": "buyElements",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_erc20Spent",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokenIdsToBuy",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenQuantitiesToBuy",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_maxERC20ToSpend",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_elementIndexesToWrap",
          "type": "uint256[]"
        }
      ],
      "name": "buyElementsAndWrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canvas",
      "outputs": [
        {
          "internalType": "contract ICanvas",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "canvases",
      "outputs": [
        {
          "internalType": "bool",
          "name": "wrapped",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "claimArtistRevenue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "claimPlatformTokenRevenue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_elementCategoryIndexes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_elementIndexes",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "_elementLabels",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "_elementValues",
          "type": "string[]"
        },
        {
          "internalType": "uint256[][]",
          "name": "_elementAmounts",
          "type": "uint256[][]"
        },
        {
          "internalType": "address[]",
          "name": "_elementRecipients",
          "type": "address[]"
        }
      ],
      "name": "createAndUpdateElements",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_artistAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxSupply",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_metadata",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_elementCategoryLabels",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "_elementCategoryValues",
          "type": "string[]"
        },
        {
          "internalType": "string[][]",
          "name": "_elementLabels",
          "type": "string[][]"
        },
        {
          "internalType": "string[][]",
          "name": "_elementValues",
          "type": "string[][]"
        },
        {
          "internalType": "uint256[][][]",
          "name": "_elementAmounts",
          "type": "uint256[][][]"
        },
        {
          "internalType": "address[]",
          "name": "_recipients",
          "type": "address[]"
        }
      ],
      "name": "createProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "element",
      "outputs": [
        {
          "internalType": "contract IElement",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_canvasId",
          "type": "uint256"
        }
      ],
      "name": "getCanvasElementLabels",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "elementLabels",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_canvasId",
          "type": "uint256"
        }
      ],
      "name": "getCanvasElementValues",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "elementValues",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_canvasId",
          "type": "uint256"
        }
      ],
      "name": "getCanvasHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_canvasTokenId",
          "type": "uint256"
        }
      ],
      "name": "getCanvasURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "getElementAMMBuyCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_erc20Cost",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "getElementAMMBuyCostWithFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_erc20CostWithFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_erc20ArtistFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_erc20PlatformFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "getElementAMMSellCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_erc20Received",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getElementAuctionPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_artist",
          "type": "address"
        }
      ],
      "name": "getIsArtistWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_canvasId",
          "type": "uint256"
        }
      ],
      "name": "getIsCanvasWrapped",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectArtist",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectElementCategoryLabels",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectElementCategoryValues",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectElementLabels",
      "outputs": [
        {
          "internalType": "string[][]",
          "name": "elementLabels",
          "type": "string[][]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectElementTokenIds",
      "outputs": [
        {
          "internalType": "uint256[][]",
          "name": "",
          "type": "uint256[][]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectElementValues",
      "outputs": [
        {
          "internalType": "string[][]",
          "name": "elementValues",
          "type": "string[][]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "canvasId",
          "type": "uint256"
        }
      ],
      "name": "getProjectIdFromCanvasId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectIsLocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectMetadata",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectScriptCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectScripts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "_scripts",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "lockProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "markets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ammERC20Balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "auctionERC20Balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ammElementBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveElementBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "auctionElementBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveElementBalanceInitial",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "auctionElementBalanceInitial",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "erc20",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "auctionStartTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "auctionEndTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "auctionStartPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "auctionEndPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "artist",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "platformRevenues",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_erc20",
          "type": "address"
        }
      ],
      "name": "removeApprovedERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_artists",
          "type": "address[]"
        }
      ],
      "name": "removeWhitelistedArtists",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minERC20ToReceive",
          "type": "uint256"
        }
      ],
      "name": "sellElementToAMM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_erc20Received",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_quantities",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_minERC20ToReceive",
          "type": "uint256"
        }
      ],
      "name": "sellElements",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_erc20Received",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_canvasId",
          "type": "uint256"
        }
      ],
      "name": "unwrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_auctionStartDelay",
          "type": "uint256"
        }
      ],
      "name": "updateAuctionStartDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "updateBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "string[]",
          "name": "_elementCategoryLabels",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "_elementCategoryValues",
          "type": "string[]"
        }
      ],
      "name": "updateElementCategories",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_elementCategoryIndexes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_elementIndexes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_elementTokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "updateElements",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_artist",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_elementCategoryIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_elementIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reserveElementBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_auctionElementBalance",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_erc20",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_auctionStartTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_auctionEndTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_auctionStartPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_auctionEndPrice",
          "type": "uint256"
        }
      ],
      "name": "updateMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "elementCategoryIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "elementIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveElementBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auctionElementBalance",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "auctionStartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auctionEndTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auctionStartPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auctionEndPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IMarketplace.CreateMarketData[]",
          "name": "_marketData",
          "type": "tuple[]"
        }
      ],
      "name": "updateMarkets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_metadata",
          "type": "string"
        }
      ],
      "name": "updateMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_scriptIndex",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_script",
          "type": "string"
        }
      ],
      "name": "updateScript",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userNonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_elementIndexes",
          "type": "uint256[]"
        }
      ],
      "name": "wrap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_canvasTokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd82e96dd12914db0a1fb819532298e4238b415bb76c1a142f583b592c5ca9172",
  "receipt": {
    "to": null,
    "from": "0x7930DdA80157Fcc47ba9c3836398c82d89C16416",
    "contractAddress": "0xadFf6fe91B7A102682dC2375b503dA94497F5C42",
    "transactionIndex": 0,
    "gasUsed": "5466945",
    "logsBloom": "0x
    "blockHash": "0x2b8acf317d0928bc5f77cc20d4460462d8c3d09586db717fec57ff81c80e5024",
    "transactionHash": "0xd82e96dd12914db0a1fb819532298e4238b415bb76c1a142f583b592c5ca9172",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 2193585,
        "transactionHash": "0xd82e96dd12914db0a1fb819532298e4238b415bb76c1a142f583b592c5ca9172",
        "address": "0xadFf6fe91B7A102682dC2375b503dA94497F5C42",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000007930dda80157fcc47ba9c3836398c82d89c16416"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x2b8acf317d0928bc5f77cc20d4460462d8c3d09586db717fec57ff81c80e5024"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 2193585,
        "transactionHash": "0xd82e96dd12914db0a1fb819532298e4238b415bb76c1a142f583b592c5ca9172",
        "address": "0xadFf6fe91B7A102682dC2375b503dA94497F5C42",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000007930dda80157fcc47ba9c3836398c82d89c16416",
          "0x0000000000000000000000007930dda80157fcc47ba9c3836398c82d89c16416"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x2b8acf317d0928bc5f77cc20d4460462d8c3d09586db717fec57ff81c80e5024"
      }
    ],
    "blockNumber": 2193585,
    "cumulativeGasUsed": "5466945",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7930DdA80157Fcc47ba9c3836398c82d89C16416",
    "0xfb56f05a89a1f49cda68ff53484c6d52e4fefbef",
    "0xa01C40B77E8B7215104636c874a018bc7fCB5C2d",
    1,
    "https://intrinsic.art"
  ],
  "numDeployments": 2,
  "solcInputHash": "1f2939a5e29dd3a8d2bb9863a62afe42",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_canvas\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_element\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_auctionStartDelay\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"AMMInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"}],\"name\":\"ApprovedERC20Added\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"}],\"name\":\"ApprovedERC20Removed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"artist\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimedRevenue\",\"type\":\"uint256\"}],\"name\":\"ArtistRevenueClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionStartDelay\",\"type\":\"uint256\"}],\"name\":\"AuctionStartDelayUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"canvasId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"unwrapper\",\"type\":\"address\"}],\"name\":\"CanvasUnwrapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"canvasTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wrapper\",\"type\":\"address\"}],\"name\":\"CanvasWrapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"erc20Spent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newERC20Balance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newElementBalance\",\"type\":\"uint256\"}],\"name\":\"ElementBoughtFromAMM\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"ElementBoughtFromAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"erc20Received\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newERC20Balance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newElementBalance\",\"type\":\"uint256\"}],\"name\":\"ElementSoldToAMM\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"elementTokenId\",\"type\":\"uint256\"}],\"name\":\"MarketUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimedRevenue\",\"type\":\"uint256\"}],\"name\":\"PlatformRevenueClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"name\":\"ProjectCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FEE_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20\",\"type\":\"address\"}],\"name\":\"addApprovedERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_artists\",\"type\":\"address[]\"}],\"name\":\"addWhitelistedArtists\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ammArtistFeeNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ammPlatformFeeNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedERC20s\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"artistClaimableRevenues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionPlatformFeeNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionStartDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxERC20ToSpend\",\"type\":\"uint256\"}],\"name\":\"buyElementFromAMM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_erc20Spent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"buyElementFromAuction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_erc20Spent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_quantities\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_maxERC20ToSpend\",\"type\":\"uint256\"}],\"name\":\"buyElements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_erc20Spent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIdsToBuy\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenQuantitiesToBuy\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_maxERC20ToSpend\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_elementIndexesToWrap\",\"type\":\"uint256[]\"}],\"name\":\"buyElementsAndWrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canvas\",\"outputs\":[{\"internalType\":\"contract ICanvas\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"canvases\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"wrapped\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimArtistRevenue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimPlatformTokenRevenue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_elementCategoryIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_elementIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"_elementLabels\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_elementValues\",\"type\":\"string[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"_elementAmounts\",\"type\":\"uint256[][]\"},{\"internalType\":\"address[]\",\"name\":\"_elementRecipients\",\"type\":\"address[]\"}],\"name\":\"createAndUpdateElements\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_artistAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_metadata\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_elementCategoryLabels\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_elementCategoryValues\",\"type\":\"string[]\"},{\"internalType\":\"string[][]\",\"name\":\"_elementLabels\",\"type\":\"string[][]\"},{\"internalType\":\"string[][]\",\"name\":\"_elementValues\",\"type\":\"string[][]\"},{\"internalType\":\"uint256[][][]\",\"name\":\"_elementAmounts\",\"type\":\"uint256[][][]\"},{\"internalType\":\"address[]\",\"name\":\"_recipients\",\"type\":\"address[]\"}],\"name\":\"createProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"element\",\"outputs\":[{\"internalType\":\"contract IElement\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_canvasId\",\"type\":\"uint256\"}],\"name\":\"getCanvasElementLabels\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"elementLabels\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_canvasId\",\"type\":\"uint256\"}],\"name\":\"getCanvasElementValues\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"elementValues\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_canvasId\",\"type\":\"uint256\"}],\"name\":\"getCanvasHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_canvasTokenId\",\"type\":\"uint256\"}],\"name\":\"getCanvasURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"getElementAMMBuyCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_erc20Cost\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"getElementAMMBuyCostWithFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_erc20CostWithFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_erc20ArtistFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_erc20PlatformFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"getElementAMMSellCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_erc20Received\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getElementAuctionPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_artist\",\"type\":\"address\"}],\"name\":\"getIsArtistWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_canvasId\",\"type\":\"uint256\"}],\"name\":\"getIsCanvasWrapped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectArtist\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectElementCategoryLabels\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectElementCategoryValues\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectElementLabels\",\"outputs\":[{\"internalType\":\"string[][]\",\"name\":\"elementLabels\",\"type\":\"string[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectElementTokenIds\",\"outputs\":[{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectElementValues\",\"outputs\":[{\"internalType\":\"string[][]\",\"name\":\"elementValues\",\"type\":\"string[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"canvasId\",\"type\":\"uint256\"}],\"name\":\"getProjectIdFromCanvasId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectIsLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectScriptCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectScripts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"_scripts\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"lockProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"markets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ammERC20Balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auctionERC20Balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ammElementBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveElementBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auctionElementBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveElementBalanceInitial\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auctionElementBalanceInitial\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"auctionStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auctionEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auctionStartPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auctionEndPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"artist\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"platformRevenues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20\",\"type\":\"address\"}],\"name\":\"removeApprovedERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_artists\",\"type\":\"address[]\"}],\"name\":\"removeWhitelistedArtists\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minERC20ToReceive\",\"type\":\"uint256\"}],\"name\":\"sellElementToAMM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_erc20Received\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_quantities\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_minERC20ToReceive\",\"type\":\"uint256\"}],\"name\":\"sellElements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_erc20Received\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_canvasId\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_auctionStartDelay\",\"type\":\"uint256\"}],\"name\":\"updateAuctionStartDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"name\":\"updateBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"_elementCategoryLabels\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_elementCategoryValues\",\"type\":\"string[]\"}],\"name\":\"updateElementCategories\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_elementCategoryIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_elementIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_elementTokenIds\",\"type\":\"uint256[]\"}],\"name\":\"updateElements\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_artist\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_elementCategoryIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_elementIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reserveElementBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_auctionElementBalance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_auctionStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_auctionEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_auctionStartPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_auctionEndPrice\",\"type\":\"uint256\"}],\"name\":\"updateMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"elementCategoryIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"elementIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveElementBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auctionElementBalance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"auctionStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auctionEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auctionStartPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auctionEndPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IMarketplace.CreateMarketData[]\",\"name\":\"_marketData\",\"type\":\"tuple[]\"}],\"name\":\"updateMarkets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_metadata\",\"type\":\"string\"}],\"name\":\"updateMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scriptIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_script\",\"type\":\"string\"}],\"name\":\"updateScript\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userNonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_elementIndexes\",\"type\":\"uint256[]\"}],\"name\":\"wrap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_canvasTokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Studio.sol\":\"Studio\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !Address.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x4823752b07b8ea4ca971b217e39457930e7cb103c2c91e2a29729e5ca907e4f0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/utils/ERC1155Holder.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ERC1155Receiver.sol\\\";\\n\\n/**\\n * Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\\n *\\n * IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\\n * stuck.\\n *\\n * @dev _Available since v3.1._\\n */\\ncontract ERC1155Holder is ERC1155Receiver {\\n    function onERC1155Received(\\n        address,\\n        address,\\n        uint256,\\n        uint256,\\n        bytes memory\\n    ) public virtual override returns (bytes4) {\\n        return this.onERC1155Received.selector;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address,\\n        address,\\n        uint256[] memory,\\n        uint256[] memory,\\n        bytes memory\\n    ) public virtual override returns (bytes4) {\\n        return this.onERC1155BatchReceived.selector;\\n    }\\n}\\n\",\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155Receiver.sol\\\";\\nimport \\\"../../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n}\\n\",\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/utils/ERC721Holder.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721Receiver.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC721Receiver} interface.\\n *\\n * Accepts all token transfers.\\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\\n */\\ncontract ERC721Holder is IERC721Receiver {\\n    /**\\n     * @dev See {IERC721Receiver-onERC721Received}.\\n     *\\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes memory\\n    ) public virtual override returns (bytes4) {\\n        return this.onERC721Received.selector;\\n    }\\n}\\n\",\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/Marketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\\\";\\r\\nimport \\\"./Projects.sol\\\";\\r\\nimport \\\"./interfaces/IMarketplace.sol\\\";\\r\\n\\r\\nabstract contract Marketplace is IMarketplace, Projects, ERC1155Holder {\\r\\n    using SafeERC20 for IERC20;\\r\\n\\r\\n    uint256 constant public ammPlatformFeeNumerator = 25_000_000;\\r\\n    uint256 constant public ammArtistFeeNumerator = 75_000_000;\\r\\n    uint256 constant public auctionPlatformFeeNumerator = 100_000_000;\\r\\n    uint256 constant public FEE_DENOMINATOR = 1_000_000_000;\\r\\n    uint256 public auctionStartDelay;\\r\\n\\r\\n    mapping(address => mapping(address => uint256))\\r\\n        public artistClaimableRevenues; // Artist address => ERC-20 address => Amount\\r\\n    mapping(address => uint256) public platformRevenues; // ERC-20 address => Revenue amount\\r\\n    mapping(uint256 => Market) public markets;\\r\\n    mapping(address => bool) public approvedERC20s;\\r\\n\\r\\n    function updateMarkets(\\r\\n        uint256 _projectId,\\r\\n        CreateMarketData[] calldata _marketData\\r\\n    ) external {\\r\\n        for (uint256 i; i < _marketData.length; i++) {\\r\\n            updateMarket(\\r\\n                _projectId,\\r\\n                msg.sender,\\r\\n                _marketData[i].elementCategoryIndex,\\r\\n                _marketData[i].elementIndex,\\r\\n                _marketData[i].reserveElementBalance,\\r\\n                _marketData[i].auctionElementBalance,\\r\\n                _marketData[i].erc20,\\r\\n                _marketData[i].auctionStartTime,\\r\\n                _marketData[i].auctionEndTime,\\r\\n                _marketData[i].auctionStartPrice,\\r\\n                _marketData[i].auctionEndPrice\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function updateMarket(\\r\\n        uint256 _projectId,\\r\\n        address _artist,\\r\\n        uint256 _elementCategoryIndex,\\r\\n        uint256 _elementIndex,\\r\\n        uint256 _reserveElementBalance,\\r\\n        uint256 _auctionElementBalance,\\r\\n        address _erc20,\\r\\n        uint256 _auctionStartTime,\\r\\n        uint256 _auctionEndTime,\\r\\n        uint256 _auctionStartPrice,\\r\\n        uint256 _auctionEndPrice\\r\\n    ) public {\\r\\n        require(projects[_projectId].artistAddress == msg.sender, \\\"M01\\\");\\r\\n        require(projects[_projectId].locked, \\\"M02\\\");\\r\\n        require(_auctionStartTime >= block.timestamp + auctionStartDelay, \\\"M03\\\");\\r\\n        require(_auctionEndTime >= _auctionStartTime, \\\"M04\\\");\\r\\n        require(_auctionEndPrice <= _auctionStartPrice, \\\"M05\\\");\\r\\n        uint256 elementTokenId = projects[_projectId].elementTokenIds[\\r\\n            _elementCategoryIndex\\r\\n        ][_elementIndex];\\r\\n        require(elementTokenId > 0, \\\"M06\\\");\\r\\n        require(approvedERC20s[_erc20], \\\"M07\\\");\\r\\n        require(\\r\\n            element.balanceOf(address(this), elementTokenId) >=\\r\\n                _reserveElementBalance + _auctionElementBalance,\\r\\n            \\\"M08\\\"\\r\\n        );\\r\\n\\r\\n        markets[elementTokenId].artist = _artist;\\r\\n        markets[elementTokenId].reserveElementBalance = _reserveElementBalance;\\r\\n        markets[elementTokenId]\\r\\n            .reserveElementBalanceInitial = _reserveElementBalance;\\r\\n        markets[elementTokenId].auctionElementBalance = _auctionElementBalance;\\r\\n        markets[elementTokenId]\\r\\n            .auctionElementBalanceInitial = _auctionElementBalance;\\r\\n        markets[elementTokenId].erc20 = _erc20;\\r\\n        markets[elementTokenId].auctionStartTime = _auctionStartTime;\\r\\n        markets[elementTokenId].auctionEndTime = _auctionEndTime;\\r\\n        markets[elementTokenId].auctionStartPrice = _auctionStartPrice;\\r\\n        markets[elementTokenId].auctionEndPrice = _auctionEndPrice;\\r\\n\\r\\n        emit MarketUpdated(_projectId, elementTokenId);\\r\\n    }\\r\\n\\r\\n    function addApprovedERC20(address _erc20) external onlyOwner {\\r\\n        approvedERC20s[_erc20] = true;\\r\\n\\r\\n        emit ApprovedERC20Added(_erc20);\\r\\n    }\\r\\n\\r\\n    function removeApprovedERC20(address _erc20) external onlyOwner {\\r\\n        approvedERC20s[_erc20] = false;\\r\\n\\r\\n        emit ApprovedERC20Removed(_erc20);\\r\\n    }\\r\\n\\r\\n    function updateAuctionStartDelay(uint256 _auctionStartDelay)\\r\\n        external\\r\\n        onlyOwner\\r\\n    {\\r\\n        auctionStartDelay = _auctionStartDelay;\\r\\n\\r\\n        emit AuctionStartDelayUpdated(_auctionStartDelay);\\r\\n    }\\r\\n\\r\\n    function buyElements(\\r\\n        uint256[] calldata _tokenIds,\\r\\n        uint256[] calldata _quantities,\\r\\n        uint256 _maxERC20ToSpend\\r\\n    ) public returns (uint256 _erc20Spent) {\\r\\n        require(_tokenIds.length == _quantities.length, \\\"M09\\\");\\r\\n\\r\\n        for (uint256 i; i < _tokenIds.length; i++) {\\r\\n            if (markets[_tokenIds[i]].auctionElementBalance == 0) {\\r\\n                // Buy from AMM\\r\\n                _erc20Spent += _buyElementFromAMM(_tokenIds[i], _quantities[i]);\\r\\n            } else if (\\r\\n                markets[_tokenIds[i]].auctionElementBalance >= _quantities[i]\\r\\n            ) {\\r\\n                // Buy all from auction\\r\\n                _erc20Spent += buyElementFromAuction(\\r\\n                    _tokenIds[i],\\r\\n                    _quantities[i]\\r\\n                );\\r\\n            } else {\\r\\n                // Buy from auction until its depleted, and the rest from AMM\\r\\n                uint256 auctionAmount = markets[_tokenIds[i]]\\r\\n                    .auctionElementBalance;\\r\\n                _erc20Spent += buyElementFromAuction(\\r\\n                    _tokenIds[i],\\r\\n                    auctionAmount\\r\\n                );\\r\\n\\r\\n                _erc20Spent += _buyElementFromAMM(\\r\\n                    _tokenIds[i],\\r\\n                    _quantities[i] - auctionAmount\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n\\r\\n        require(_erc20Spent <= _maxERC20ToSpend, \\\"M10\\\");\\r\\n    }\\r\\n\\r\\n    function sellElements(\\r\\n        uint256[] calldata _tokenIds,\\r\\n        uint256[] calldata _quantities,\\r\\n        uint256 _minERC20ToReceive\\r\\n    ) public returns (uint256 _erc20Received) {\\r\\n        require(_tokenIds.length == _quantities.length, \\\"M09\\\");\\r\\n\\r\\n        for (uint256 i; i < _tokenIds.length; i++) {\\r\\n            _erc20Received += _sellElementToAMM(_tokenIds[i], _quantities[i]);\\r\\n        }\\r\\n\\r\\n        require(_erc20Received >= _minERC20ToReceive, \\\"M11\\\");\\r\\n    }\\r\\n\\r\\n    function buyElementFromAuction(uint256 _tokenId, uint256 _quantity)\\r\\n        public\\r\\n        returns (uint256 _erc20Spent)\\r\\n    {\\r\\n        require(_quantity > 0, \\\"M12\\\");\\r\\n        require(\\r\\n            markets[_tokenId].auctionStartTime > 0,\\r\\n            \\\"M13\\\"\\r\\n        );\\r\\n        require(\\r\\n            block.timestamp >= markets[_tokenId].auctionStartTime,\\r\\n            \\\"M14\\\"\\r\\n        );\\r\\n        require(\\r\\n            markets[_tokenId].auctionElementBalance >= _quantity,\\r\\n            \\\"M15\\\"\\r\\n        );\\r\\n\\r\\n        address erc20Token = markets[_tokenId].erc20;\\r\\n\\r\\n        uint256 elementPrice = getElementAuctionPrice(_tokenId);\\r\\n\\r\\n        _erc20Spent = elementPrice * _quantity;\\r\\n\\r\\n        markets[_tokenId].auctionElementBalance -= _quantity;\\r\\n\\r\\n        if (markets[_tokenId].ammERC20Balance == 0) {\\r\\n            // AMM has not been initialized yet\\r\\n            markets[_tokenId].auctionERC20Balance += _erc20Spent;\\r\\n\\r\\n            if (\\r\\n                markets[_tokenId].auctionElementBalance == 0 ||\\r\\n                block.timestamp > markets[_tokenId].auctionEndTime\\r\\n            ) {\\r\\n                // Need to initialize AMM\\r\\n                _initializeAMM(_tokenId);\\r\\n            }\\r\\n        } else {\\r\\n            // AMM has been initialized\\r\\n            uint256 elementQuantityToAMM = markets[_tokenId]\\r\\n                .reserveElementBalance -\\r\\n                ((markets[_tokenId].auctionElementBalance *\\r\\n                    markets[_tokenId].reserveElementBalanceInitial) /\\r\\n                    markets[_tokenId].auctionElementBalanceInitial);\\r\\n            uint256 erc20Revenue;\\r\\n            if (elementQuantityToAMM > 0) {\\r\\n                uint256 erc20QuantityToAMM = elementQuantityToAMM *\\r\\n                    elementPrice;\\r\\n\\r\\n                // Transfer Elements into AMM\\r\\n                markets[_tokenId].reserveElementBalance -= elementQuantityToAMM;\\r\\n                markets[_tokenId].ammElementBalance += elementQuantityToAMM;\\r\\n\\r\\n                // Transfer ERC20 into AMM\\r\\n                markets[_tokenId].ammERC20Balance += erc20QuantityToAMM;\\r\\n                erc20Revenue = _erc20Spent - erc20QuantityToAMM;\\r\\n            } else {\\r\\n                erc20Revenue = _erc20Spent;\\r\\n            }\\r\\n\\r\\n            // Separate remaining revenue between artist and platform\\r\\n            uint256 platformRevenue = (erc20Revenue *\\r\\n                auctionPlatformFeeNumerator) / FEE_DENOMINATOR;\\r\\n            artistClaimableRevenues[markets[_tokenId].artist][erc20Token] +=\\r\\n                erc20Revenue -\\r\\n                platformRevenue;\\r\\n            platformRevenues[erc20Token] += platformRevenue;\\r\\n        }\\r\\n\\r\\n        IERC20(erc20Token).safeTransferFrom(\\r\\n            msg.sender,\\r\\n            address(this),\\r\\n            _erc20Spent\\r\\n        );\\r\\n        element.safeTransferFrom(\\r\\n            address(this),\\r\\n            msg.sender,\\r\\n            _tokenId,\\r\\n            _quantity,\\r\\n            \\\"\\\"\\r\\n        );\\r\\n\\r\\n        emit ElementBoughtFromAuction(msg.sender, _tokenId, _quantity);\\r\\n    }\\r\\n\\r\\n    function buyElementFromAMM(\\r\\n        uint256 _tokenId,\\r\\n        uint256 _quantity,\\r\\n        uint256 _maxERC20ToSpend\\r\\n    ) public returns (uint256 _erc20Spent) {\\r\\n        _erc20Spent = _buyElementFromAMM(_tokenId, _quantity);\\r\\n        require(_erc20Spent <= _maxERC20ToSpend, \\\"M10\\\");\\r\\n    }\\r\\n\\r\\n    function sellElementToAMM(\\r\\n        uint256 _tokenId,\\r\\n        uint256 _quantity,\\r\\n        uint256 _minERC20ToReceive\\r\\n    ) external returns (uint256 _erc20Received) {\\r\\n        _erc20Received = _sellElementToAMM(_tokenId, _quantity);\\r\\n        require(_erc20Received >= _minERC20ToReceive, \\\"M11\\\");\\r\\n    }\\r\\n\\r\\n    function claimPlatformTokenRevenue(address _token) public onlyOwner {\\r\\n        uint256 claimedRevenue = platformRevenues[_token];\\r\\n        require(claimedRevenue > 0, \\\"M16\\\");\\r\\n        \\r\\n        platformRevenues[_token] = 0;\\r\\n\\r\\n        IERC20(_token).safeTransfer(msg.sender, claimedRevenue);\\r\\n\\r\\n        emit PlatformRevenueClaimed(msg.sender, _token, claimedRevenue);\\r\\n    }\\r\\n\\r\\n    function claimArtistRevenue(address _token) public {\\r\\n        uint256 claimedRevenue = artistClaimableRevenues[msg.sender][_token];\\r\\n        require(claimedRevenue > 0, \\\"M16\\\");\\r\\n\\r\\n        artistClaimableRevenues[msg.sender][_token] = 0;\\r\\n\\r\\n        IERC20(_token).safeTransfer(msg.sender, claimedRevenue);\\r\\n\\r\\n        emit ArtistRevenueClaimed(msg.sender, _token, claimedRevenue);\\r\\n    }\\r\\n\\r\\n    function _initializeAMM(uint256 _tokenId) internal {\\r\\n        uint256 elementQuantityToAMM = markets[_tokenId].reserveElementBalance -\\r\\n            ((markets[_tokenId].auctionElementBalance *\\r\\n                markets[_tokenId].reserveElementBalanceInitial) /\\r\\n                markets[_tokenId].auctionElementBalanceInitial);\\r\\n\\r\\n        uint256 elementPrice = getElementAuctionPrice(_tokenId);\\r\\n\\r\\n        uint256 erc20ToAMM = elementQuantityToAMM * elementPrice;\\r\\n\\r\\n        // Transfer Elements into AMM\\r\\n        markets[_tokenId].reserveElementBalance -= elementQuantityToAMM;\\r\\n        markets[_tokenId].ammElementBalance += elementQuantityToAMM;\\r\\n\\r\\n        // Transfer ERC20 into AMM\\r\\n        markets[_tokenId].ammERC20Balance += erc20ToAMM;\\r\\n        uint256 remainingAuctionRevenue = markets[_tokenId]\\r\\n            .auctionERC20Balance - erc20ToAMM;\\r\\n        markets[_tokenId].auctionERC20Balance = 0;\\r\\n\\r\\n        uint256 platformRevenue = (remainingAuctionRevenue *\\r\\n            auctionPlatformFeeNumerator) / FEE_DENOMINATOR;\\r\\n\\r\\n        address erc20Token = markets[_tokenId].erc20;\\r\\n\\r\\n        // Add in platform and artist revenue\\r\\n        platformRevenues[erc20Token] += platformRevenue;\\r\\n        artistClaimableRevenues[markets[_tokenId].artist][erc20Token] +=\\r\\n            remainingAuctionRevenue -\\r\\n            platformRevenue;\\r\\n\\r\\n        emit AMMInitialized(_tokenId);\\r\\n    }\\r\\n\\r\\n    function _buyElementFromAMM(uint256 _tokenId, uint256 _quantity)\\r\\n        internal\\r\\n        returns (uint256 _erc20Spent)\\r\\n    {\\r\\n        // Check that the AMM has been initialized\\r\\n        require(\\r\\n            markets[_tokenId].ammERC20Balance > 0,\\r\\n            \\\"M17\\\"\\r\\n        );\\r\\n        uint256 erc20ArtistFee;\\r\\n        uint256 erc20PlatformFee;\\r\\n        (\\r\\n            _erc20Spent,\\r\\n            erc20ArtistFee,\\r\\n            erc20PlatformFee\\r\\n        ) = getElementAMMBuyCostWithFee(_tokenId, _quantity);\\r\\n\\r\\n        address erc20 = markets[_tokenId].erc20;\\r\\n\\r\\n        platformRevenues[erc20] += erc20PlatformFee;\\r\\n        artistClaimableRevenues[markets[_tokenId].artist][\\r\\n            erc20\\r\\n        ] += erc20ArtistFee;\\r\\n        markets[_tokenId].ammERC20Balance +=\\r\\n            _erc20Spent -\\r\\n            erc20ArtistFee -\\r\\n            erc20PlatformFee;\\r\\n        markets[_tokenId].ammElementBalance -= _quantity;\\r\\n\\r\\n        element.safeTransferFrom(\\r\\n            address(this),\\r\\n            msg.sender,\\r\\n            _tokenId,\\r\\n            _quantity,\\r\\n            \\\"\\\"\\r\\n        );\\r\\n        IERC20(erc20).safeTransferFrom(msg.sender, address(this), _erc20Spent);\\r\\n\\r\\n        emit ElementBoughtFromAMM(msg.sender, _tokenId, _quantity, _erc20Spent, markets[_tokenId].ammERC20Balance, markets[_tokenId].ammElementBalance);\\r\\n    }\\r\\n\\r\\n    function _sellElementToAMM(uint256 _tokenId, uint256 _quantity)\\r\\n        internal\\r\\n        returns (uint256 _erc20Received)\\r\\n    {\\r\\n        // Check that AMM has been initialized\\r\\n        require(\\r\\n            markets[_tokenId].ammERC20Balance > 0,\\r\\n            \\\"M17\\\"\\r\\n        );\\r\\n\\r\\n        _erc20Received = getElementAMMSellCost(_tokenId, _quantity);\\r\\n\\r\\n        address erc20 = markets[_tokenId].erc20;\\r\\n\\r\\n        markets[_tokenId].ammERC20Balance -= _erc20Received;\\r\\n        markets[_tokenId].ammElementBalance += _quantity;\\r\\n\\r\\n        element.safeTransferFrom(\\r\\n            msg.sender,\\r\\n            address(this),\\r\\n            _tokenId,\\r\\n            _quantity,\\r\\n            \\\"\\\"\\r\\n        );\\r\\n        IERC20(erc20).safeTransfer(msg.sender, _erc20Received);\\r\\n\\r\\n        emit ElementSoldToAMM(msg.sender, _tokenId, _quantity, _erc20Received, markets[_tokenId].ammERC20Balance, markets[_tokenId].ammElementBalance);\\r\\n    }\\r\\n\\r\\n    function getElementAMMBuyCostWithFee(uint256 _tokenId, uint256 _quantity)\\r\\n        public\\r\\n        view\\r\\n        returns (\\r\\n            uint256 _erc20CostWithFee,\\r\\n            uint256 _erc20ArtistFee,\\r\\n            uint256 _erc20PlatformFee\\r\\n        )\\r\\n    {\\r\\n        uint256 _erc20Cost = getElementAMMBuyCost(_tokenId, _quantity);\\r\\n        _erc20ArtistFee =\\r\\n            (_erc20Cost * ammArtistFeeNumerator) /\\r\\n            FEE_DENOMINATOR;\\r\\n        _erc20PlatformFee =\\r\\n            (_erc20Cost * ammPlatformFeeNumerator) /\\r\\n            FEE_DENOMINATOR;\\r\\n        _erc20CostWithFee = _erc20Cost + _erc20ArtistFee + _erc20PlatformFee;\\r\\n    }\\r\\n\\r\\n    function getElementAMMBuyCost(uint256 _tokenId, uint256 _quantity)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256 _erc20Cost)\\r\\n    {\\r\\n        uint256 erc20Balance = markets[_tokenId].ammERC20Balance;\\r\\n        uint256 elementBalance = markets[_tokenId].ammElementBalance;\\r\\n\\r\\n        _erc20Cost =\\r\\n            ((elementBalance * erc20Balance) / (elementBalance - _quantity)) -\\r\\n            erc20Balance;\\r\\n    }\\r\\n\\r\\n    function getElementAMMSellCost(uint256 _tokenId, uint256 _quantity)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256 _erc20Received)\\r\\n    {\\r\\n        uint256 erc20Balance = markets[_tokenId].ammERC20Balance;\\r\\n        uint256 elementBalance = markets[_tokenId].ammElementBalance;\\r\\n\\r\\n        _erc20Received =\\r\\n            erc20Balance -\\r\\n            ((elementBalance * erc20Balance) / (elementBalance + _quantity));\\r\\n    }\\r\\n\\r\\n    function getElementAuctionPrice(uint256 _tokenId)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256 _price)\\r\\n    {\\r\\n        if (block.timestamp < markets[_tokenId].auctionStartTime) {\\r\\n            // Auction hasn't started yet\\r\\n            _price = markets[_tokenId].auctionStartPrice;\\r\\n        } else if (block.timestamp > markets[_tokenId].auctionEndTime) {\\r\\n            // Auction has ended\\r\\n            _price = markets[_tokenId].auctionEndPrice;\\r\\n        } else {\\r\\n            // Auction is active\\r\\n            _price =\\r\\n                markets[_tokenId].auctionStartPrice -\\r\\n                (\\r\\n                    (((block.timestamp - markets[_tokenId].auctionStartTime) *\\r\\n                        (markets[_tokenId].auctionStartPrice -\\r\\n                            markets[_tokenId].auctionEndPrice)) /\\r\\n                        (markets[_tokenId].auctionEndTime -\\r\\n                            markets[_tokenId].auctionStartTime))\\r\\n                );\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6a7fcd52b5f095f1fe5e5cfacd106d8454a349f1928c5f433e63f6d04a526f08\",\"license\":\"MIT\"},\"contracts/Projects.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./interfaces/ICanvas.sol\\\";\\r\\nimport \\\"./interfaces/IElement.sol\\\";\\r\\nimport \\\"./interfaces/IProjects.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\nabstract contract Projects is IProjects, Ownable {\\r\\n    event ProjectCreated(uint256 projectId);\\r\\n    \\r\\n    ICanvas public canvas;\\r\\n    IElement public element;\\r\\n    string public baseURI;\\r\\n\\r\\n    mapping(address => bool) internal whitelistedArtists;\\r\\n    mapping(uint256 => ProjectData) internal projects;\\r\\n\\r\\n    modifier updateProject(uint256 _projectId) {\\r\\n        require(\\r\\n            msg.sender == projects[_projectId].artistAddress,\\r\\n            \\\"P01\\\"\\r\\n        );\\r\\n        require(\\r\\n            !projects[_projectId].locked,\\r\\n            \\\"P02\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function createProject(\\r\\n        address _artistAddress,\\r\\n        uint256 _maxSupply,\\r\\n        string memory _metadata,\\r\\n        string[] memory _elementCategoryLabels,\\r\\n        string[] memory _elementCategoryValues,\\r\\n        string[][] memory _elementLabels,\\r\\n        string[][] memory _elementValues,\\r\\n        uint256[][][] memory _elementAmounts,\\r\\n        address[] calldata _recipients\\r\\n    ) external {\\r\\n        require(whitelistedArtists[msg.sender], \\\"P03\\\");\\r\\n        whitelistedArtists[msg.sender] = false;\\r\\n\\r\\n        uint256 projectId = canvas.createProject(address(this), _maxSupply);\\r\\n\\r\\n        projects[projectId].artistAddress = _artistAddress;\\r\\n        projects[projectId].metadata = _metadata;\\r\\n        projects[projectId].elementCategoryLabels = _elementCategoryLabels;\\r\\n        projects[projectId].elementCategoryValues = _elementCategoryValues;\\r\\n        projects[projectId].elementTokenIds = element.createElements2D(\\r\\n            _elementLabels,\\r\\n            _elementValues,\\r\\n            _elementAmounts,\\r\\n            _recipients\\r\\n        );\\r\\n\\r\\n        emit ProjectCreated(projectId);\\r\\n    }\\r\\n\\r\\n    function createAndUpdateElements(\\r\\n        uint256 _projectId,\\r\\n        uint256[] calldata _elementCategoryIndexes,\\r\\n        uint256[] calldata _elementIndexes,\\r\\n        string[] memory _elementLabels,\\r\\n        string[] memory _elementValues,\\r\\n        uint256[][] calldata _elementAmounts,\\r\\n        address[] calldata _elementRecipients\\r\\n    ) external updateProject(_projectId) {\\r\\n        require(_elementCategoryIndexes.length == _elementIndexes.length, \\\"P04\\\");\\r\\n        require(_elementCategoryIndexes.length == _elementLabels.length, \\\"P04\\\");\\r\\n\\r\\n        updateElements(\\r\\n            _projectId,\\r\\n            _elementCategoryIndexes,\\r\\n            _elementIndexes,\\r\\n            element.createElements(\\r\\n            _elementLabels,\\r\\n            _elementValues,\\r\\n            _elementAmounts,\\r\\n            _elementRecipients\\r\\n        )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function updateElements(\\r\\n        uint256 _projectId,\\r\\n        uint256[] calldata _elementCategoryIndexes,\\r\\n        uint256[] calldata _elementIndexes,\\r\\n        uint256[] memory _elementTokenIds\\r\\n    ) public updateProject(_projectId) {\\r\\n        for (uint256 i; i < _elementCategoryIndexes.length; i++) {\\r\\n            projects[_projectId].elementTokenIds[_elementCategoryIndexes[i]][\\r\\n                    _elementIndexes[i]\\r\\n                ] = _elementTokenIds[i];\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function updateMetadata(uint256 _projectId, string calldata _metadata)\\r\\n        external\\r\\n        updateProject(_projectId)\\r\\n    {\\r\\n        projects[_projectId].metadata = _metadata;\\r\\n    }\\r\\n\\r\\n    function updateScript(\\r\\n        uint256 _projectId,\\r\\n        uint256 _scriptIndex,\\r\\n        string calldata _script\\r\\n    ) external updateProject(_projectId) {\\r\\n        projects[_projectId].scripts[_scriptIndex] = (_script);\\r\\n    }\\r\\n\\r\\n    function updateElementCategories(\\r\\n        uint256 _projectId,\\r\\n        string[] memory _elementCategoryLabels,\\r\\n        string[] memory _elementCategoryValues\\r\\n    ) external updateProject(_projectId) {\\r\\n        require(\\r\\n            _elementCategoryLabels.length == _elementCategoryValues.length,\\r\\n            \\\"P04\\\"\\r\\n        );\\r\\n\\r\\n        projects[_projectId].elementCategoryLabels = _elementCategoryLabels;\\r\\n        projects[_projectId].elementCategoryValues = _elementCategoryValues;\\r\\n    }\\r\\n\\r\\n    function lockProject(uint256 _projectId)\\r\\n        external\\r\\n        updateProject(_projectId)\\r\\n    {\\r\\n        require(\\r\\n            projects[_projectId].elementCategoryLabels.length ==\\r\\n                projects[_projectId].elementTokenIds.length,\\r\\n            \\\"P04\\\"\\r\\n        );\\r\\n\\r\\n        projects[_projectId].locked = true;\\r\\n    }\\r\\n\\r\\n    function updateBaseURI(string calldata _baseURI) external onlyOwner {\\r\\n      baseURI = _baseURI;\\r\\n    }\\r\\n\\r\\n    function addWhitelistedArtists(address[] calldata _artists)\\r\\n        external\\r\\n        onlyOwner\\r\\n    {\\r\\n        for (uint256 i; i < _artists.length; i++) {\\r\\n            whitelistedArtists[_artists[i]] = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function removeWhitelistedArtists(address[] calldata _artists)\\r\\n        external\\r\\n        onlyOwner\\r\\n    {\\r\\n        for (uint256 i; i < _artists.length; i++) {\\r\\n            whitelistedArtists[_artists[i]] = false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getProjectIsLocked(uint256 _projectId) external view returns (bool) {\\r\\n      return projects[_projectId].locked;\\r\\n    }\\r\\n    \\r\\n    function getProjectArtist(uint256 _projectId) external view returns (address) {\\r\\n      return projects[_projectId].artistAddress;\\r\\n    }\\r\\n\\r\\n    function getProjectScripts(uint256 _projectId)\\r\\n        external\\r\\n        view\\r\\n        returns (string[] memory _scripts)\\r\\n    {\\r\\n        uint256 scriptCount = getProjectScriptCount(_projectId);\\r\\n        _scripts = new string[](scriptCount);\\r\\n\\r\\n        for(uint256 i; i < scriptCount; i++) {\\r\\n          _scripts[i] = projects[_projectId].scripts[i];\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getProjectScriptCount(uint256 _projectId) public view returns (uint256) {\\r\\n      uint256 scriptIndex;\\r\\n\\r\\n      while(keccak256(abi.encodePacked(projects[_projectId].scripts[scriptIndex])) != keccak256(abi.encodePacked(\\\"\\\"))) {\\r\\n        scriptIndex++;\\r\\n      }\\r\\n\\r\\n      return scriptIndex;\\r\\n    }\\r\\n\\r\\n    function getProjectElementCategoryLabels(uint256 _projectId) external view returns (string[] memory) {\\r\\n      return projects[_projectId].elementCategoryLabels;\\r\\n    }\\r\\n\\r\\n    function getProjectElementCategoryValues(uint256 _projectId) external view returns (string[] memory) {\\r\\n      return projects[_projectId].elementCategoryValues;\\r\\n    }\\r\\n\\r\\n    function getProjectElementTokenIds(uint256 _projectId) external view returns (uint256[][] memory) {\\r\\n      return projects[_projectId].elementTokenIds;\\r\\n    }\\r\\n\\r\\n    function getProjectMetadata(uint256 _projectId) external view returns (string memory) {\\r\\n      return projects[_projectId].metadata;\\r\\n    }\\r\\n\\r\\n    function getIsArtistWhitelisted(address _artist) external view returns (bool) {\\r\\n      return whitelistedArtists[_artist];\\r\\n    }\\r\\n\\r\\n    function getProjectElementLabels(uint256 _projectId)\\r\\n        public\\r\\n        view\\r\\n        returns (string[][] memory elementLabels)\\r\\n    {\\r\\n        uint256 elementCategoryLength = projects[_projectId]\\r\\n            .elementCategoryLabels\\r\\n            .length;\\r\\n        elementLabels = new string[][](elementCategoryLength);\\r\\n\\r\\n        for (uint256 i; i < elementCategoryLength; i++) {\\r\\n            uint256 innerElementsLength = projects[_projectId]\\r\\n                .elementTokenIds[i]\\r\\n                .length;\\r\\n            string[] memory innerElementLabels = new string[](innerElementsLength);\\r\\n            for (uint256 j; j < innerElementsLength; j++) {\\r\\n                innerElementLabels[j] = element.getElementLabel(\\r\\n                    projects[_projectId].elementTokenIds[i][j]\\r\\n                );\\r\\n            }\\r\\n            elementLabels[i] = innerElementLabels;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getProjectElementValues(uint256 _projectId)\\r\\n        public\\r\\n        view\\r\\n        returns (string[][] memory elementValues)\\r\\n    {\\r\\n        uint256 elementCategoryLength = projects[_projectId]\\r\\n            .elementCategoryLabels\\r\\n            .length;\\r\\n        elementValues = new string[][](elementCategoryLength);\\r\\n\\r\\n        for (uint256 i; i < elementCategoryLength; i++) {\\r\\n            uint256 innerElementsLength = projects[_projectId]\\r\\n                .elementTokenIds[i]\\r\\n                .length;\\r\\n            string[] memory innerElementValues = new string[](innerElementsLength);\\r\\n            for (uint256 j; j < innerElementsLength; j++) {\\r\\n                innerElementValues[j] = element.getElementValue(\\r\\n                    projects[_projectId].elementTokenIds[i][j]\\r\\n                );\\r\\n            }\\r\\n            elementValues[i] = innerElementValues;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getProjectIdFromCanvasId(uint256 canvasId)\\r\\n        public\\r\\n        pure\\r\\n        returns (uint256 projectId)\\r\\n    {\\r\\n        projectId = canvasId / 1_000_000;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xab5578c04c63cd18245595583420958b967cad589bf226a521517697ba495776\",\"license\":\"MIT\"},\"contracts/StringConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nabstract contract StringConverter {\\r\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\r\\n\\r\\n    function toString(uint256 value) internal pure returns (string memory) {\\r\\n        unchecked {\\r\\n            uint256 length = log10(value) + 1;\\r\\n            string memory buffer = new string(length);\\r\\n            uint256 ptr;\\r\\n            /// @solidity memory-safe-assembly\\r\\n            assembly {\\r\\n                ptr := add(buffer, add(32, length))\\r\\n            }\\r\\n            while (true) {\\r\\n                ptr--;\\r\\n                /// @solidity memory-safe-assembly\\r\\n                assembly {\\r\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\r\\n                }\\r\\n                value /= 10;\\r\\n                if (value == 0) break;\\r\\n            }\\r\\n            return buffer;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function log10(uint256 value) internal pure returns (uint256) {\\r\\n        uint256 result = 0;\\r\\n        unchecked {\\r\\n            if (value >= 10**64) {\\r\\n                value /= 10**64;\\r\\n                result += 64;\\r\\n            }\\r\\n            if (value >= 10**32) {\\r\\n                value /= 10**32;\\r\\n                result += 32;\\r\\n            }\\r\\n            if (value >= 10**16) {\\r\\n                value /= 10**16;\\r\\n                result += 16;\\r\\n            }\\r\\n            if (value >= 10**8) {\\r\\n                value /= 10**8;\\r\\n                result += 8;\\r\\n            }\\r\\n            if (value >= 10**4) {\\r\\n                value /= 10**4;\\r\\n                result += 4;\\r\\n            }\\r\\n            if (value >= 10**2) {\\r\\n                value /= 10**2;\\r\\n                result += 2;\\r\\n            }\\r\\n            if (value >= 10**1) {\\r\\n                result += 1;\\r\\n            }\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xa0f45fd8a84ef9e6576eaff781350df017db7633aab4041cd3b472c394c2414d\",\"license\":\"MIT\"},\"contracts/Studio.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\r\\nimport \\\"./interfaces/IStudio.sol\\\";\\r\\nimport \\\"./Marketplace.sol\\\";\\r\\nimport \\\"./StringConverter.sol\\\";\\r\\n\\r\\ncontract Studio is IStudio, Marketplace, ERC721Holder, StringConverter {\\r\\n    mapping(uint256 => CanvasData) public canvases;\\r\\n    mapping(address => uint256) public userNonces;\\r\\n\\r\\n    constructor(\\r\\n        address _owner,\\r\\n        address _canvas,\\r\\n        address _element,\\r\\n        uint256 _auctionStartDelay,\\r\\n        string memory _baseURI\\r\\n    ) {\\r\\n        _transferOwnership(_owner);\\r\\n        canvas = ICanvas(_canvas);\\r\\n        element = IElement(_element);\\r\\n        auctionStartDelay = _auctionStartDelay;\\r\\n        baseURI = _baseURI;\\r\\n    }\\r\\n\\r\\n    function wrap(uint256 _projectId, uint256[] calldata _elementIndexes)\\r\\n        public\\r\\n        returns (uint256 _canvasTokenId)\\r\\n    {\\r\\n        require(\\r\\n            _elementIndexes.length ==\\r\\n                projects[_projectId].elementCategoryLabels.length,\\r\\n            \\\"S01\\\"\\r\\n        );\\r\\n\\r\\n        if (\\r\\n            canvas.getProjectSupply(_projectId) <\\r\\n            canvas.getProjectMaxSupply(_projectId)\\r\\n        ) {\\r\\n            _canvasTokenId = canvas.mint(_projectId, msg.sender);\\r\\n        } else {\\r\\n            require(projects[_projectId].blankCanvasIds.length > 0, \\\"S02\\\");\\r\\n            _canvasTokenId = projects[_projectId].blankCanvasIds[\\r\\n                projects[_projectId].blankCanvasIds.length - 1\\r\\n            ];\\r\\n            projects[_projectId].blankCanvasIds.pop();\\r\\n            canvas.safeTransferFrom(address(this), msg.sender, _canvasTokenId);\\r\\n        }\\r\\n\\r\\n        bytes32 newHash = keccak256(\\r\\n            abi.encodePacked(msg.sender, userNonces[msg.sender])\\r\\n        );\\r\\n\\r\\n        canvases[_canvasTokenId].hash = newHash;\\r\\n\\r\\n        uint256[] memory elementTokenIds = new uint256[](\\r\\n            _elementIndexes.length\\r\\n        );\\r\\n\\r\\n        for (uint256 i; i < _elementIndexes.length; i++) {\\r\\n            elementTokenIds[i] = projects[_projectId].elementTokenIds[i][\\r\\n                _elementIndexes[i]\\r\\n            ];\\r\\n\\r\\n            element.safeTransferFrom(\\r\\n                msg.sender,\\r\\n                address(this),\\r\\n                elementTokenIds[i],\\r\\n                1,\\r\\n                \\\"\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        canvases[_canvasTokenId].wrapped = true;\\r\\n        canvases[_canvasTokenId].wrappedElementTokenIds = elementTokenIds;\\r\\n        userNonces[msg.sender]++;\\r\\n\\r\\n        emit CanvasWrapped(_canvasTokenId, msg.sender);\\r\\n    }\\r\\n\\r\\n    function unwrap(uint256 _canvasId) public {\\r\\n        require(msg.sender == canvas.ownerOf(_canvasId), \\\"S03\\\");\\r\\n        require(canvases[_canvasId].wrapped, \\\"S04\\\");\\r\\n\\r\\n        // Transfer elements to the user\\r\\n        for (\\r\\n            uint256 i;\\r\\n            i < canvases[_canvasId].wrappedElementTokenIds.length;\\r\\n            i++\\r\\n        ) {\\r\\n            element.safeTransferFrom(\\r\\n                address(this),\\r\\n                msg.sender,\\r\\n                canvases[_canvasId].wrappedElementTokenIds[i],\\r\\n                1,\\r\\n                \\\"\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        // Reset canvas state to blank canvas\\r\\n        canvases[_canvasId].hash = 0;\\r\\n        canvases[_canvasId].wrapped = false;\\r\\n        canvases[_canvasId].wrappedElementTokenIds = new uint256[](0);\\r\\n\\r\\n        // Transfer canvas from the user to this address\\r\\n        canvas.safeTransferFrom(msg.sender, address(this), _canvasId);\\r\\n\\r\\n        // Add the canvas ID to the array of blank canvses held by the studio\\r\\n        projects[getProjectIdFromCanvasId(_canvasId)].blankCanvasIds.push(\\r\\n            _canvasId\\r\\n        );\\r\\n\\r\\n        emit CanvasUnwrapped(_canvasId, msg.sender);\\r\\n    }\\r\\n\\r\\n    function buyElementsAndWrap(\\r\\n        uint256[] calldata _tokenIdsToBuy,\\r\\n        uint256[] calldata _tokenQuantitiesToBuy,\\r\\n        uint256 _maxERC20ToSpend,\\r\\n        uint256 _projectId,\\r\\n        uint256[] calldata _elementIndexesToWrap\\r\\n    ) public {\\r\\n        buyElements(_tokenIdsToBuy, _tokenQuantitiesToBuy, _maxERC20ToSpend);\\r\\n        wrap(_projectId, _elementIndexesToWrap);\\r\\n    }\\r\\n\\r\\n    function getCanvasURI(uint256 _canvasTokenId)\\r\\n        external\\r\\n        view\\r\\n        returns (string memory)\\r\\n    {\\r\\n        return string.concat(baseURI, toString(_canvasTokenId));\\r\\n    }\\r\\n\\r\\n    function getCanvasHash(uint256 _canvasId) external view returns (bytes32) {\\r\\n        return canvases[_canvasId].hash;\\r\\n    }\\r\\n\\r\\n    function getCanvasElementLabels(uint256 _canvasId)\\r\\n        external\\r\\n        view\\r\\n        returns (string[] memory elementLabels)\\r\\n    {\\r\\n        uint256 elementLabelsLength = canvases[_canvasId]\\r\\n            .wrappedElementTokenIds\\r\\n            .length;\\r\\n        elementLabels = new string[](elementLabelsLength);\\r\\n\\r\\n        for (uint256 i; i < elementLabelsLength; i++) {\\r\\n            elementLabels[i] = element.getElementLabel(\\r\\n                canvases[_canvasId].wrappedElementTokenIds[i]\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getCanvasElementValues(uint256 _canvasId)\\r\\n        external\\r\\n        view\\r\\n        returns (string[] memory elementValues)\\r\\n    {\\r\\n        uint256 elementValuesLength = canvases[_canvasId]\\r\\n            .wrappedElementTokenIds\\r\\n            .length;\\r\\n        elementValues = new string[](elementValuesLength);\\r\\n\\r\\n        for (uint256 i; i < elementValuesLength; i++) {\\r\\n            elementValues[i] = element.getElementValue(\\r\\n                canvases[_canvasId].wrappedElementTokenIds[i]\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getIsCanvasWrapped(uint256 _canvasId)\\r\\n        external\\r\\n        view\\r\\n        returns (bool)\\r\\n    {\\r\\n        return canvases[_canvasId].wrapped;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf6ca9c255987fb831c3d73d1a02368fe7850f8e757f78a2367e6f09d40613d13\",\"license\":\"MIT\"},\"contracts/interfaces/ICanvas.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface ICanvas {\\r\\n    function initialize(address _owner) external;\\r\\n\\r\\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable;\\r\\n\\r\\n    function ownerOf(uint256 _tokenId) external view returns (address);\\r\\n\\r\\n    function createProject(\\r\\n        address _studio,\\r\\n        uint256 _maxSupply\\r\\n    ) external returns (uint256 projectId);\\r\\n\\r\\n    function mint(uint256 _projectId, address _to)\\r\\n       external returns (uint256 _tokenId);\\r\\n\\r\\n    function getProjectIdFromCanvasId(uint256 canvasId)\\r\\n        external\\r\\n        pure\\r\\n        returns (uint256 projectId);\\r\\n\\r\\n    function getProjectMaxSupply(uint256 _projectId) external view returns (uint256);\\r\\n\\r\\n    function getProjectSupply(uint256 _projectId) external view returns (uint256);\\r\\n\\r\\n    event MintedToken(address receiver, uint256 projectid, uint256 tokenId);\\r\\n    event WrappedTokens(uint256 canvasId, uint256 tokenIds, uint256 amounts);\\r\\n    event UnWrappedTokens(uint256 canvasId, uint256 tokenIds, uint256 amounts);\\r\\n}\\r\\n\",\"keccak256\":\"0x1b5f1961ed48d4aaae21011e3e266f2f50788ce8c5b68fc1ab9ef897fa23a90a\",\"license\":\"MIT\"},\"contracts/interfaces/IElement.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IElement {\\r\\n    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external;\\r\\n\\r\\n    function balanceOf(address _owner, uint256 _id) external view returns (uint256);\\r\\n\\r\\n    function createElement(\\r\\n        string calldata _label,\\r\\n        string calldata _value,\\r\\n        uint256[] calldata _amounts,\\r\\n        address[] calldata _recipients\\r\\n    ) external returns (uint256 tokenId);\\r\\n\\r\\n    function createElements(\\r\\n        string[] calldata _labels,\\r\\n        string[] calldata _values,\\r\\n        uint256[][] calldata _amounts,\\r\\n        address[] calldata _recipients\\r\\n    ) external returns (uint256[] memory tokenIds);\\r\\n\\r\\n    function createElements2D(\\r\\n        string[][] calldata _labels,\\r\\n        string[][] calldata _values,\\r\\n        uint256[][][] calldata _amounts,\\r\\n        address[] calldata _recipients\\r\\n    ) external returns (uint256[][] memory tokenIds);\\r\\n\\r\\n    function getElementLabel(uint256 _tokenId)\\r\\n        external\\r\\n        view\\r\\n        returns (string memory);\\r\\n\\r\\n    function getElementValue(uint256 _tokenId)\\r\\n        external\\r\\n        view\\r\\n        returns (string memory);\\r\\n}\\r\\n\",\"keccak256\":\"0x851c064e8a08a2a6546d46590f048e8529f7b4a12e80248608010c934fc10075\",\"license\":\"MIT\"},\"contracts/interfaces/IMarketplace.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IMarketplace {\\r\\n    event MarketUpdated(uint256 indexed projectId, uint256 indexed elementTokenId);\\r\\n    event ApprovedERC20Added(address indexed erc20);\\r\\n    event ApprovedERC20Removed(address indexed erc20);\\r\\n    event AuctionStartDelayUpdated(uint256 auctionStartDelay);\\r\\n    event ElementBoughtFromAuction(address indexed buyer, uint256 indexed tokenId, uint256 quantity);\\r\\n    event PlatformRevenueClaimed(address indexed claimer, address indexed token, uint256 claimedRevenue);\\r\\n    event ArtistRevenueClaimed(address indexed artist, address indexed token, uint256 claimedRevenue);\\r\\n    event AMMInitialized(uint256 indexed tokenId);\\r\\n    event ElementBoughtFromAMM(address indexed buyer, uint256 indexed tokenId, uint256 indexed quantity, uint256 erc20Spent, uint256 newERC20Balance, uint256 newElementBalance);\\r\\n    event ElementSoldToAMM(address indexed seller, uint256 indexed tokenId, uint256 indexed quantity, uint256 erc20Received, uint256 newERC20Balance, uint256 newElementBalance);\\r\\n\\r\\n    struct CreateMarketData {\\r\\n        uint256 elementCategoryIndex;\\r\\n        uint256 elementIndex;\\r\\n        uint256 reserveElementBalance;\\r\\n        uint256 auctionElementBalance;\\r\\n        address erc20;\\r\\n        uint256 auctionStartTime;\\r\\n        uint256 auctionEndTime;\\r\\n        uint256 auctionStartPrice;\\r\\n        uint256 auctionEndPrice;\\r\\n    }\\r\\n\\r\\n    struct Market {\\r\\n        uint256 ammERC20Balance; // This is zero until the AMM has been initialized\\r\\n        uint256 auctionERC20Balance;\\r\\n        uint256 ammElementBalance;\\r\\n        uint256 reserveElementBalance; // Elements set aside to go to AMM\\r\\n        uint256 auctionElementBalance;\\r\\n        uint256 reserveElementBalanceInitial; // Elements set aside to go to AMM\\r\\n        uint256 auctionElementBalanceInitial;\\r\\n        address erc20;\\r\\n        uint256 auctionStartTime;\\r\\n        uint256 auctionEndTime;\\r\\n        uint256 auctionStartPrice;\\r\\n        uint256 auctionEndPrice;\\r\\n        address artist;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x656956e30448caaa3047b05669c1c748c3b8260c4821062e06b0508f0bcebc9c\",\"license\":\"MIT\"},\"contracts/interfaces/IProjects.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IProjects {\\r\\n    struct ProjectData {\\r\\n        bool locked;\\r\\n        address artistAddress;\\r\\n        mapping(uint256 => string) scripts;\\r\\n        string[] elementCategoryLabels;\\r\\n        string[] elementCategoryValues;\\r\\n        uint256[][] elementTokenIds;\\r\\n        uint256[] blankCanvasIds;\\r\\n        string metadata;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x995fce473c4f87e4f13f763d938c5de3d33ec24629bedca88a660fdb88d2c2ea\",\"license\":\"MIT\"},\"contracts/interfaces/IStudio.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IStudio {\\r\\n    event CanvasWrapped(uint256 indexed canvasTokenId, address indexed wrapper);\\r\\n    event CanvasUnwrapped(uint256 indexed canvasId, address indexed unwrapper);\\r\\n\\r\\n    struct CanvasData {\\r\\n        bool wrapped;\\r\\n        uint256[] wrappedElementTokenIds;\\r\\n        bytes32 hash;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x45b473e03024a685e24bf365f35ddb6822e26c6fab03acd94fe794c7c885243d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620063323803806200633283398101604081905262000034916200011c565b6200003f3362000099565b6200004a8562000099565b600180546001600160a01b038087166001600160a01b0319928316179092556002805492861692909116919091179055600682905560036200008d8282620002c2565b5050505050506200038e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200010157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080600060a086880312156200013557600080fd5b6200014086620000e9565b9450602062000151818801620000e9565b94506200016160408801620000e9565b6060880151608089015191955093506001600160401b03808211156200018657600080fd5b818901915089601f8301126200019b57600080fd5b815181811115620001b057620001b062000106565b604051601f8201601f19908116603f01168101908382118183101715620001db57620001db62000106565b816040528281528c86848701011115620001f457600080fd5b600093505b82841015620002185784840186015181850187015292850192620001f9565b60008684830101528096505050505050509295509295909350565b600181811c908216806200024857607f821691505b6020821081036200026957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002bd57600081815260208120601f850160051c81016020861015620002985750805b601f850160051c820191505b81811015620002b957828155600101620002a4565b5050505b505050565b81516001600160401b03811115620002de57620002de62000106565b620002f681620002ef845462000233565b846200026f565b602080601f8311600181146200032e5760008415620003155750858301515b600019600386901b1c1916600185901b178555620002b9565b600085815260208120601f198616915b828110156200035f578886015182559484019460019091019084016200033e565b50858210156200037e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b615f94806200039e6000396000f3fe608060405234801561001057600080fd5b50600436106103f15760003560e01c806385e4ad8911610215578063d58a3aea11610125578063eed5d038116100b8578063f23a6e6111610087578063f23a6e6114610acb578063f2fde38b14610aea578063f97bf1d414610afd578063fbace7a514610b10578063fc78fa8514610b2357600080fd5b8063eed5d03814610a64578063eedd620414610a92578063ef750ab314610aa5578063f0325e1814610ab857600080fd5b8063ddfb64be116100f4578063ddfb64be146109f5578063de0e9a3e14610a23578063e4d035f014610a36578063e73a438e14610a5957600080fd5b8063d58a3aea14610988578063d73792a914610993578063d9a7f0b21461099e578063d9d197a6146109b157600080fd5b80639bfde545116101a8578063c3d6701e11610177578063c3d6701e14610929578063c480df5f1461093c578063cc23cd621461094f578063cc9e965614610962578063cfd0ebb31461097557600080fd5b80639bfde545146107e7578063b1283e77146107fa578063bc197c81146108f7578063c2e81f161461091657600080fd5b80638da5cb5b116101e45780638da5cb5b1461079d5780639129182c146107ae578063931688cb146107c15780639b8e9b5e146107d457600080fd5b806385e4ad89146107595780638705e6a41461076c57806389473fdf146107775780638d2899951461078a57600080fd5b80633803ac4c116103105780636c0360eb116102a3578063747944461161027257806374794446146106c45780637c3a038a146106d75780637d18b24f146106f7578063804f6929146107235780638343ada91461074657600080fd5b80636c0360eb1461068e5780636d92b6be146106965780636e736ffd146106a9578063715018a6146106bc57600080fd5b806352d8691d116102df57806352d8691d1461063557806353c8388e146106555780635a723d1f146106685780636811a3f71461067b57600080fd5b80633803ac4c146105c457806340c2846b146105e4578063416731da146105f75780634f26cc4d1461060a57600080fd5b8063150b7a021161038857806328a3cce21161035757806328a3cce21461056b5780632ca1521a1461057e5780632f7801f41461059157806336885746146105b157600080fd5b8063150b7a02146104e357806318a446451461051a57806320f6ec601461052d5780632884fd001461054057600080fd5b80630b9e01b1116103c45780630b9e01b1146104785780630ba70e1e1461048d5780630effcffd146104ad5780631026b8c3146104d057600080fd5b806301ffc9a7146103f657806304b7f3291461041e57806304d48887146104355780630b0c2e6e14610458575b600080fd5b6104096104043660046147ef565b610b36565b60405190151581526020015b60405180910390f35b61042760065481565b604051908152602001610415565b610409610443366004614839565b600a6020526000908152604090205460ff1681565b61046b610466366004614856565b610b6d565b604051610415919061495a565b61048b6104863660046149b5565b610d91565b005b6104a061049b366004614856565b610e35565b6040516104159190614a07565b6104096104bb366004614856565b6000908152600b602052604090205460ff1690565b61046b6104de366004614856565b610e69565b6105016104f1366004614add565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610415565b61048b610528366004614b8c565b611086565b61042761053b366004614bcd565b611127565b600254610553906001600160a01b031681565b6040516001600160a01b039091168152602001610415565b61048b610579366004614bef565b61155c565b61048b61058c366004614839565b611580565b61042761059f366004614839565b600c6020526000908152604090205481565b6104276105bf366004614bcd565b61165f565b6105d76105d2366004614856565b6116a7565b6040516104159190614cf0565b6104276105f2366004614856565b6117e4565b6105d7610605366004614856565b6117f3565b610427610618366004614d03565b600760209081526000928352604080842090915290825290205481565b610427610643366004614839565b60086020526000908152604090205481565b61048b610663366004614d3c565b611938565b61048b610676366004614e34565b6119c7565b6105d7610689366004614856565b611b1a565b6104a0611c09565b61048b6106a4366004614f53565b611c97565b6104276106b7366004614fbf565b611d6f565b61048b611fb6565b6104276106d2366004614bcd565b611fec565b6106ea6106e5366004614856565b61202a565b60405161041591906150ae565b610409610705366004614839565b6001600160a01b031660009081526004602052604090205460ff1690565b610427610731366004614856565b6000908152600b602052604090206002015490565b6105d7610754366004614856565b6120ce565b61048b61076736600461528d565b6121b2565b6104276305f5e10081565b610427610785366004614fbf565b6123f7565b61048b610798366004614839565b6124c8565b6000546001600160a01b0316610553565b6104276107bc366004614856565b61253b565b61048b6107cf3660046153cc565b612631565b600154610553906001600160a01b031681565b6104276107f5366004615401565b612668565b61087d610808366004614856565b600960208190526000918252604090912080546001820154600283015460038401546004850154600586015460068701546007880154600889015499890154600a8a0154600b8b0154600c909b0154999b989a979996989597949693956001600160a01b03938416959094929391929091168d565b604080519d8e5260208e019c909c529a8c019990995260608b019790975260808a019590955260a089019390935260c08801919091526001600160a01b0390811660e0880152610100870191909152610120860191909152610140850191909152610160840191909152166101808201526101a001610415565b61050161090536600461542d565b63bc197c8160e01b95945050505050565b610427610924366004614856565b6126b3565b61048b610937366004614839565b61271c565b61048b61094a3660046154da565b6127e1565b61042761095d366004615401565b612922565b6105d7610970366004614856565b612966565b61048b610983366004615559565b612aab565b61042763047868c081565b610427633b9aca0081565b61048b6109ac3660046155f4565b612bd6565b6109de6109bf366004614856565b600b602052600090815260409020805460029091015460ff9091169082565b604080519215158352602083019190915201610415565b610553610a03366004614856565b60009081526005602052604090205461010090046001600160a01b031690565b61048b610a31366004614856565b613021565b610409610a44366004614856565b60009081526005602052604090205460ff1690565b61042763017d784081565b610a77610a72366004614bcd565b6132f9565b60408051938452602084019290925290820152606001610415565b61048b610aa0366004614b8c565b613368565b6104a0610ab3366004614856565b613404565b61048b610ac6366004614856565b6134a9565b610501610ad9366004615687565b63f23a6e6160e01b95945050505050565b61048b610af8366004614839565b61350e565b61048b610b0b366004614839565b6135a9565b61048b610b1e366004614856565b61361f565b610427610b313660046156ef565b6136dd565b60006001600160e01b03198216630271189760e51b1480610b6757506301ffc9a760e01b6001600160e01b03198316145b92915050565b600081815260056020526040902060020154606090806001600160401b03811115610b9a57610b9a614a1a565b604051908082528060200260200182016040528015610bcd57816020015b6060815260200190600190039081610bb85790505b50915060005b81811015610d8a576000848152600560205260408120600401805483908110610bfe57610bfe61572d565b60009182526020822001549150816001600160401b03811115610c2357610c23614a1a565b604051908082528060200260200182016040528015610c5657816020015b6060815260200190600190039081610c415790505b50905060005b82811015610d5657600254600088815260056020526040902060040180546001600160a01b039092169163dccd6a3e919087908110610c9d57610c9d61572d565b906000526020600020018381548110610cb857610cb861572d565b90600052602060002001546040518263ffffffff1660e01b8152600401610ce191815260200190565b600060405180830381865afa158015610cfe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d269190810190615743565b828281518110610d3857610d3861572d565b60200260200101819052508080610d4e906157c6565b915050610c5c565b5080858481518110610d6a57610d6a61572d565b602002602001018190525050508080610d82906157c6565b915050610bd3565b5050919050565b600084815260056020526040902054849061010090046001600160a01b03163314610dd75760405162461bcd60e51b8152600401610dce906157df565b60405180910390fd5b60008181526005602052604090205460ff1615610e065760405162461bcd60e51b8152600401610dce906157fc565b60008581526005602090815260408083208784526001019091529020610e2d838583615899565b505050505050565b60606003610e4283613c07565b604051602001610e539291906159cb565b6040516020818303038152906040529050919050565b600081815260056020526040902060020154606090806001600160401b03811115610e9657610e96614a1a565b604051908082528060200260200182016040528015610ec957816020015b6060815260200190600190039081610eb45790505b50915060005b81811015610d8a576000848152600560205260408120600401805483908110610efa57610efa61572d565b60009182526020822001549150816001600160401b03811115610f1f57610f1f614a1a565b604051908082528060200260200182016040528015610f5257816020015b6060815260200190600190039081610f3d5790505b50905060005b8281101561105257600254600088815260056020526040902060040180546001600160a01b03909216916355a1dde7919087908110610f9957610f9961572d565b906000526020600020018381548110610fb457610fb461572d565b90600052602060002001546040518263ffffffff1660e01b8152600401610fdd91815260200190565b600060405180830381865afa158015610ffa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110229190810190615743565b8282815181106110345761103461572d565b6020026020010181905250808061104a906157c6565b915050610f58565b50808584815181106110665761106661572d565b60200260200101819052505050808061107e906157c6565b915050610ecf565b6000546001600160a01b031633146110b05760405162461bcd60e51b8152600401610dce906159f0565b60005b81811015611122576001600460008585858181106110d3576110d361572d565b90506020020160208101906110e89190614839565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558061111a816157c6565b9150506110b3565b505050565b600080821161115e5760405162461bcd60e51b815260206004820152600360248201526226989960e91b6044820152606401610dce565b6000838152600960205260409020600801546111a25760405162461bcd60e51b81526020600482015260036024820152624d313360e81b6044820152606401610dce565b6000838152600960205260409020600801544210156111e95760405162461bcd60e51b8152602060048201526003602482015262134c4d60ea1b6044820152606401610dce565b6000838152600960205260409020600401548211156112305760405162461bcd60e51b81526020600482015260036024820152624d313560e81b6044820152606401610dce565b6000838152600960205260408120600701546001600160a01b0316906112558561253b565b90506112618482615a25565b9250836009600087815260200190815260200160002060040160008282546112899190615a3c565b9091555050600085815260096020526040812054900361130b57600085815260096020526040812060010180548592906112c4908490615a4f565b909155505060008581526009602052604090206004015415806112f857506000858152600960208190526040909120015442115b156113065761130685613c99565b6114a0565b600085815260096020526040812060068101546005820154600490920154909161133491615a25565b61133e9190615a62565b60008781526009602052604090206003015461135a9190615a3c565b9050600081156113f95760006113708484615a25565b905082600960008a815260200190815260200160002060030160008282546113989190615a3c565b9091555050600088815260096020526040812060020180548592906113be908490615a4f565b9091555050600088815260096020526040812080548392906113e1908490615a4f565b909155506113f190508187615a3c565b9150506113fc565b50835b6000633b9aca006114116305f5e10084615a25565b61141b9190615a62565b90506114278183615a3c565b6000898152600960209081526040808320600c01546001600160a01b03908116845260078352818420908a1684529091528120805490919061146a908490615a4f565b90915550506001600160a01b03851660009081526008602052604081208054839290611497908490615a4f565b90915550505050505b6114b56001600160a01b038316333086613e93565b600254604051637921219560e11b81526001600160a01b039091169063f242432a906114eb90309033908a908a90600401615a84565b600060405180830381600087803b15801561150557600080fd5b505af1158015611519573d6000803e3d6000fd5b50506040518681528792503391507ff818e604778155368a650efc2f808dcaf2a1e06b0db867c681e2ce232f8197519060200160405180910390a3505092915050565b6115698888888888611d6f565b506115758383836136dd565b505050505050505050565b6000546001600160a01b031633146115aa5760405162461bcd60e51b8152600401610dce906159f0565b6001600160a01b038116600090815260086020526040902054806115f65760405162461bcd60e51b815260206004820152600360248201526226989b60e91b6044820152606401610dce565b6001600160a01b03821660008181526008602052604081205561161a903383613efe565b6040518181526001600160a01b0383169033907f2f48e090d0e0f4a9b71b6daf952883ac941749f52ee4f6adb8d18d25d6410921906020015b60405180910390a35050565b60008281526009602052604081208054600290910154816116808583615a3c565b61168a8484615a25565b6116949190615a62565b61169e9190615a3c565b95945050505050565b606060006116b4836126b3565b9050806001600160401b038111156116ce576116ce614a1a565b60405190808252806020026020018201604052801561170157816020015b60608152602001906001900390816116ec5790505b50915060005b81811015610d8a5760008481526005602090815260408083208484526001019091529020805461173690615819565b80601f016020809104026020016040519081016040528092919081815260200182805461176290615819565b80156117af5780601f10611784576101008083540402835291602001916117af565b820191906000526020600020905b81548152906001019060200180831161179257829003601f168201915b50505050508382815181106117c6576117c661572d565b602002602001018190525080806117dc906157c6565b915050611707565b6000610b67620f424083615a62565b6000818152600b6020526040902060010154606090806001600160401b0381111561182057611820614a1a565b60405190808252806020026020018201604052801561185357816020015b606081526020019060019003908161183e5790505b50915060005b81811015610d8a576002546000858152600b6020526040902060010180546001600160a01b039092169163dccd6a3e91908490811061189a5761189a61572d565b90600052602060002001546040518263ffffffff1660e01b81526004016118c391815260200190565b600060405180830381865afa1580156118e0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119089190810190615743565b83828151811061191a5761191a61572d565b60200260200101819052508080611930906157c6565b915050611859565b600083815260056020526040902054839061010090046001600160a01b031633146119755760405162461bcd60e51b8152600401610dce906157df565b60008181526005602052604090205460ff16156119a45760405162461bcd60e51b8152600401610dce906157fc565b60008481526005602052604090206006016119c0838583615899565b5050505050565b60008b8152600560205260409020548b9061010090046001600160a01b03163314611a045760405162461bcd60e51b8152600401610dce906157df565b60008181526005602052604090205460ff1615611a335760405162461bcd60e51b8152600401610dce906157fc565b898814611a525760405162461bcd60e51b8152600401610dce90615abc565b86518a14611a725760405162461bcd60e51b8152600401610dce90615abc565b611b0c8c8c8c8c8c600260009054906101000a90046001600160a01b03166001600160a01b0316636a25a7998e8e8e8e8e8e6040518763ffffffff1660e01b8152600401611ac596959493929190615b54565b6000604051808303816000875af1158015611ae4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109839190810190615c89565b505050505050505050505050565b606060056000838152602001908152602001600020600201805480602002602001604051908101604052809291908181526020016000905b82821015611bfe578382906000526020600020018054611b7190615819565b80601f0160208091040260200160405190810160405280929190818152602001828054611b9d90615819565b8015611bea5780601f10611bbf57610100808354040283529160200191611bea565b820191906000526020600020905b815481529060010190602001808311611bcd57829003601f168201915b505050505081526020019060010190611b52565b505050509050919050565b60038054611c1690615819565b80601f0160208091040260200160405190810160405280929190818152602001828054611c4290615819565b8015611c8f5780601f10611c6457610100808354040283529160200191611c8f565b820191906000526020600020905b815481529060010190602001808311611c7257829003601f168201915b505050505081565b600083815260056020526040902054839061010090046001600160a01b03163314611cd45760405162461bcd60e51b8152600401610dce906157df565b60008181526005602052604090205460ff1615611d035760405162461bcd60e51b8152600401610dce906157fc565b8151835114611d245760405162461bcd60e51b8152600401610dce90615abc565b60008481526005602090815260409091208451611d4992600290920191860190614652565b50600084815260056020908152604090912083516119c092600390920191850190614652565b6000848314611da65760405162461bcd60e51b81526020600482015260036024820152624d303960e81b6044820152606401610dce565b60005b85811015611f7f5760096000888884818110611dc757611dc761572d565b90506020020135815260200190815260200160002060040154600003611e3257611e21878783818110611dfc57611dfc61572d565b90506020020135868684818110611e1557611e1561572d565b90506020020135613f2e565b611e2b9083615a4f565b9150611f6d565b848482818110611e4457611e4461572d565b9050602002013560096000898985818110611e6157611e6161572d565b9050602002013581526020019081526020016000206004015410611eb957611e21878783818110611e9457611e9461572d565b90506020020135868684818110611ead57611ead61572d565b90506020020135611127565b600060096000898985818110611ed157611ed161572d565b905060200201358152602001908152602001600020600401549050611f0e888884818110611f0157611f0161572d565b9050602002013582611127565b611f189084615a4f565b9250611f5f888884818110611f2f57611f2f61572d565b9050602002013582888886818110611f4957611f4961572d565b90506020020135611f5a9190615a3c565b613f2e565b611f699084615a4f565b9250505b80611f77816157c6565b915050611da9565b508181111561169e5760405162461bcd60e51b815260206004820152600360248201526204d31360ec1b6044820152606401610dce565b6000546001600160a01b03163314611fe05760405162461bcd60e51b8152600401610dce906159f0565b611fea6000614150565b565b6000828152600960205260408120805460029091015461200c8482615a4f565b6120168383615a25565b6120209190615a62565b61169e9083615a3c565b606060056000838152602001908152602001600020600401805480602002602001604051908101604052809291908181526020016000905b82821015611bfe576000848152602090819020830180546040805182850281018501909152818152928301828280156120ba57602002820191906000526020600020905b8154815260200190600101908083116120a6575b505050505081526020019060010190612062565b606060056000838152602001908152602001600020600301805480602002602001604051908101604052809291908181526020016000905b82821015611bfe57838290600052602060002001805461212590615819565b80601f016020809104026020016040519081016040528092919081815260200182805461215190615819565b801561219e5780601f106121735761010080835404028352916020019161219e565b820191906000526020600020905b81548152906001019060200180831161218157829003601f168201915b505050505081526020019060010190612106565b3360009081526004602052604090205460ff166121f75760405162461bcd60e51b815260206004820152600360248201526250303360e81b6044820152606401610dce565b336000908152600460208190526040808320805460ff191690556001549051637416b2b960e11b81523092810192909252602482018c90526001600160a01b03169063e82d6572906044016020604051808303816000875af1158015612261573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122859190615cbd565b60008181526005602052604090208054610100600160a81b0319166101006001600160a01b038f16021781559091506006016122c18a82615cd6565b50600081815260056020908152604090912089516122e7926002909201918b0190614652565b506000818152600560209081526040909120885161230d926003909201918a0190614652565b506002546040516378a9895b60e11b81526001600160a01b039091169063f15312b6906123469089908990899089908990600401615d95565b6000604051808303816000875af1158015612365573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261238d9190810190615e31565b6005600083815260200190815260200160002060040190805190602001906123b69291906146a8565b506040518181527f1ac2092e16e28eef29d1832f3dc69da1b21284a1f3159d3b26cb238b22fe4f8a9060200160405180910390a15050505050505050505050565b600084831461242e5760405162461bcd60e51b81526020600482015260036024820152624d303960e81b6044820152606401610dce565b60005b858110156124915761247387878381811061244e5761244e61572d565b905060200201358686848181106124675761246761572d565b905060200201356141a0565b61247d9083615a4f565b915080612489816157c6565b915050612431565b508181101561169e5760405162461bcd60e51b81526020600482015260036024820152624d313160e81b6044820152606401610dce565b6000546001600160a01b031633146124f25760405162461bcd60e51b8152600401610dce906159f0565b6001600160a01b0381166000818152600a6020526040808220805460ff19169055517f3b12d2bd1a0a7572fe4881868072d31ec038c35a41fe080d1cb89e1013516f779190a250565b60008181526009602052604081206008015442101561256a57506000908152600960205260409020600a015490565b6000828152600960208190526040909120015442111561259a57506000908152600960205260409020600b015490565b600082815260096020819052604090912060088101549101546125bd9190615a3c565b6000838152600960205260409020600b810154600a909101546125e09190615a3c565b6000848152600960205260409020600801546125fc9042615a3c565b6126069190615a25565b6126109190615a62565b6000838152600960205260409020600a0154610b679190615a3c565b919050565b6000546001600160a01b0316331461265b5760405162461bcd60e51b8152600401610dce906159f0565b6003611122828483615899565b60006126748484613f2e565b9050818111156126ac5760405162461bcd60e51b815260206004820152600360248201526204d31360ec1b6044820152606401610dce565b9392505050565b6000805b604080516000808252602080830180855283519020878352600582528483208684526001019091529083902090926126ef9201615ee1565b6040516020818303038152906040528051906020012014610b675780612714816157c6565b9150506126b7565b3360009081526007602090815260408083206001600160a01b0385168452909152902054806127735760405162461bcd60e51b815260206004820152600360248201526226989b60e91b6044820152606401610dce565b3360008181526007602090815260408083206001600160a01b03871680855292528220919091556127a49183613efe565b6040518181526001600160a01b0383169033907fd3a9278fe8dc6b954e6a19cf23e5d70b445c621918754d5ceaec526a7d26a0de90602001611653565b60005b8181101561291c5761290a84338585858181106128035761280361572d565b90506101200201600001358686868181106128205761282061572d565b905061012002016020013587878781811061283d5761283d61572d565b905061012002016040013588888881811061285a5761285a61572d565b90506101200201606001358989898181106128775761287761572d565b9050610120020160800160208101906128909190614839565b8a8a8a8181106128a2576128a261572d565b9050610120020160a001358b8b8b8181106128bf576128bf61572d565b9050610120020160c001358c8c8c8181106128dc576128dc61572d565b9050610120020160e001358d8d8d8181106128f9576128f961572d565b905061012002016101000135612bd6565b80612914816157c6565b9150506127e4565b50505050565b600061292e84846141a0565b9050818110156126ac5760405162461bcd60e51b81526020600482015260036024820152624d313160e81b6044820152606401610dce565b6000818152600b6020526040902060010154606090806001600160401b0381111561299357612993614a1a565b6040519080825280602002602001820160405280156129c657816020015b60608152602001906001900390816129b15790505b50915060005b81811015610d8a576002546000858152600b6020526040902060010180546001600160a01b03909216916355a1dde7919084908110612a0d57612a0d61572d565b90600052602060002001546040518263ffffffff1660e01b8152600401612a3691815260200190565b600060405180830381865afa158015612a53573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612a7b9190810190615743565b838281518110612a8d57612a8d61572d565b60200260200101819052508080612aa3906157c6565b9150506129cc565b600086815260056020526040902054869061010090046001600160a01b03163314612ae85760405162461bcd60e51b8152600401610dce906157df565b60008181526005602052604090205460ff1615612b175760405162461bcd60e51b8152600401610dce906157fc565b60005b85811015612bcc57828181518110612b3457612b3461572d565b6020026020010151600560008a8152602001908152602001600020600401888884818110612b6457612b6461572d565b9050602002013581548110612b7b57612b7b61572d565b90600052602060002001868684818110612b9757612b9761572d565b9050602002013581548110612bae57612bae61572d565b60009182526020909120015580612bc4816157c6565b915050612b1a565b5050505050505050565b60008b81526005602052604090205461010090046001600160a01b03163314612c275760405162461bcd60e51b81526020600482015260036024820152624d303160e81b6044820152606401610dce565b60008b81526005602052604090205460ff16612c6b5760405162461bcd60e51b815260206004820152600360248201526226981960e91b6044820152606401610dce565b600654612c789042615a4f565b841015612cad5760405162461bcd60e51b81526020600482015260036024820152624d303360e81b6044820152606401610dce565b83831015612ce35760405162461bcd60e51b8152602060048201526003602482015262134c0d60ea1b6044820152606401610dce565b81811115612d195760405162461bcd60e51b81526020600482015260036024820152624d303560e81b6044820152606401610dce565b60008b815260056020526040812060040180548b908110612d3c57612d3c61572d565b906000526020600020018981548110612d5757612d5761572d565b9060005260206000200154905060008111612d9a5760405162461bcd60e51b815260206004820152600360248201526226981b60e91b6044820152606401610dce565b6001600160a01b0386166000908152600a602052604090205460ff16612de85760405162461bcd60e51b81526020600482015260036024820152624d303760e81b6044820152606401610dce565b612df28789615a4f565b600254604051627eeac760e11b8152306004820152602481018490526001600160a01b039091169062fdd58e90604401602060405180830381865afa158015612e3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e639190615cbd565b1015612e975760405162461bcd60e51b815260206004820152600360248201526209a60760eb1b6044820152606401610dce565b8a60096000838152602001908152602001600020600c0160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550876009600083815260200190815260200160002060030181905550876009600083815260200190815260200160002060050181905550866009600083815260200190815260200160002060040181905550866009600083815260200190815260200160002060060181905550856009600083815260200190815260200160002060070160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508460096000838152602001908152602001600020600801819055508360096000838152602001908152602001600020600901819055508260096000838152602001908152602001600020600a01819055508160096000838152602001908152602001600020600b0181905550808c7f78ba7fa146d924748fc0936e443dd9d16f763c75b1e00f33378357f1a483389460405160405180910390a3505050505050505050505050565b6001546040516331a9108f60e11b8152600481018390526001600160a01b0390911690636352211e90602401602060405180830381865afa15801561306a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061308e9190615eed565b6001600160a01b0316336001600160a01b0316146130d45760405162461bcd60e51b815260206004820152600360248201526253303360e81b6044820152606401610dce565b6000818152600b602052604090205460ff166131185760405162461bcd60e51b815260206004820152600360248201526214cc0d60ea1b6044820152606401610dce565b60005b6000828152600b60205260409020600101548110156131e2576002546000838152600b6020526040902060010180546001600160a01b039092169163f242432a913091339190869081106131715761317161572d565b906000526020600020015460016040518563ffffffff1660e01b815260040161319d9493929190615a84565b600060405180830381600087803b1580156131b757600080fd5b505af11580156131cb573d6000803e3d6000fd5b5050505080806131da906157c6565b91505061311b565b506000818152600b6020818152604080842060028101859055805460ff19168155815185815280840192839052948690529290915291516132299260019092019190614701565b50600154604051632142170760e11b8152336004820152306024820152604481018390526001600160a01b03909116906342842e0e90606401600060405180830381600087803b15801561327c57600080fd5b505af1158015613290573d6000803e3d6000fd5b50505050600560006132a1836117e4565b815260208082019290925260409081016000908120600501805460018101825590825292812090920183905551339183917f1ce66d646856a661a790ff962311cb84d9c3eb337ba33f9b73ca2907d842b36c9190a350565b600080600080613309868661165f565b9050633b9aca0061331e63047868c083615a25565b6133289190615a62565b9250633b9aca0061333d63017d784083615a25565b6133479190615a62565b9150816133548483615a4f565b61335e9190615a4f565b9350509250925092565b6000546001600160a01b031633146133925760405162461bcd60e51b8152600401610dce906159f0565b60005b81811015611122576000600460008585858181106133b5576133b561572d565b90506020020160208101906133ca9190614839565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055806133fc816157c6565b915050613395565b600081815260056020526040902060060180546060919061342490615819565b80601f016020809104026020016040519081016040528092919081815260200182805461345090615819565b801561349d5780601f106134725761010080835404028352916020019161349d565b820191906000526020600020905b81548152906001019060200180831161348057829003601f168201915b50505050509050919050565b6000546001600160a01b031633146134d35760405162461bcd60e51b8152600401610dce906159f0565b60068190556040518181527f28f3b7e92bea3a83a4ed0552cff96f294f494ee5c34a27cab92a3ec6bdbd431d9060200160405180910390a150565b6000546001600160a01b031633146135385760405162461bcd60e51b8152600401610dce906159f0565b6001600160a01b03811661359d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610dce565b6135a681614150565b50565b6000546001600160a01b031633146135d35760405162461bcd60e51b8152600401610dce906159f0565b6001600160a01b0381166000818152600a6020526040808220805460ff19166001179055517f6ddb01b9f2e3a31eb92e55edced79e8aee30bbc398ced64a4a3ad2d7fd25a7769190a250565b600081815260056020526040902054819061010090046001600160a01b0316331461365c5760405162461bcd60e51b8152600401610dce906157df565b60008181526005602052604090205460ff161561368b5760405162461bcd60e51b8152600401610dce906157fc565b60008281526005602052604090206004810154600290910154146136c15760405162461bcd60e51b8152600401610dce90615abc565b506000908152600560205260409020805460ff19166001179055565b60008381526005602052604081206002015482146137235760405162461bcd60e51b815260206004820152600360248201526253303160e81b6044820152606401610dce565b600154604051639116ce7f60e01b8152600481018690526001600160a01b0390911690639116ce7f90602401602060405180830381865afa15801561376c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137909190615cbd565b60015460405163341d1eb760e01b8152600481018790526001600160a01b039091169063341d1eb790602401602060405180830381865afa1580156137d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137fd9190615cbd565b101561387f576001546040516394bf804d60e01b8152600481018690523360248201526001600160a01b03909116906394bf804d906044016020604051808303816000875af1158015613854573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138789190615cbd565b90506139a9565b600084815260056020819052604090912001546138c45760405162461bcd60e51b815260206004820152600360248201526229981960e91b6044820152606401610dce565b60008481526005602081905260409091200180546138e490600190615a3c565b815481106138f4576138f461572d565b906000526020600020015490506005600085815260200190815260200160002060050180548061392657613926615f0a565b600082815260208120600019908301810191909155019055600154604051632142170760e11b8152306004820152336024820152604481018390526001600160a01b03909116906342842e0e90606401600060405180830381600087803b15801561399057600080fd5b505af11580156139a4573d6000803e3d6000fd5b505050505b336000818152600c6020908152604080832054905192936139e99390920160609290921b6bffffffffffffffffffffffff19168252601482015260340190565b60408051601f1981840301815291815281516020928301206000858152600b9093529082206002018190559150836001600160401b03811115613a2e57613a2e614a1a565b604051908082528060200260200182016040528015613a57578160200160208202803683370190505b50905060005b84811015613b7e576000878152600560205260409020600401805482908110613a8857613a8861572d565b90600052602060002001868683818110613aa457613aa461572d565b9050602002013581548110613abb57613abb61572d565b9060005260206000200154828281518110613ad857613ad861572d565b602090810291909101015260025482516001600160a01b039091169063f242432a9033903090869086908110613b1057613b1061572d565b602002602001015160016040518563ffffffff1660e01b8152600401613b399493929190615a84565b600060405180830381600087803b158015613b5357600080fd5b505af1158015613b67573d6000803e3d6000fd5b505050508080613b76906157c6565b915050613a5d565b506000838152600b60209081526040909120805460ff1916600190811782558351613bb0939290910191840190614701565b50336000908152600c60205260408120805491613bcc836157c6565b9091555050604051339084907f0a8845a2c57cee2e7626fb1c364719df23696ce4c67538926c65271c600a4e5b90600090a350509392505050565b60606000613c1483614327565b60010190506000816001600160401b03811115613c3357613c33614a1a565b6040519080825280601f01601f191660200182016040528015613c5d576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084613c6757509392505050565b6000818152600960205260408120600681015460058201546004909201549091613cc291615a25565b613ccc9190615a62565b600083815260096020526040902060030154613ce89190615a3c565b90506000613cf58361253b565b90506000613d038284615a25565b905082600960008681526020019081526020016000206003016000828254613d2b9190615a3c565b909155505060008481526009602052604081206002018054859290613d51908490615a4f565b909155505060008481526009602052604081208054839290613d74908490615a4f565b9091555050600084815260096020526040812060010154613d96908390615a3c565b6000868152600960205260408120600101819055909150633b9aca00613dc06305f5e10084615a25565b613dca9190615a62565b6000878152600960209081526040808320600701546001600160a01b03168084526008909252822080549394509092849290613e07908490615a4f565b90915550613e1790508284615a3c565b6000888152600960209081526040808320600c01546001600160a01b03908116845260078352818420908616845290915281208054909190613e5a908490615a4f565b909155505060405187907faef20c9dfbb56080a17bbaa5a9bb0a228dd253c24d3f14aa8fe9ed8b9df7d4c990600090a250505050505050565b6040516001600160a01b038085166024830152831660448201526064810182905261291c9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526143ff565b6040516001600160a01b03831660248201526044810182905261112290849063a9059cbb60e01b90606401613ec7565b600082815260096020526040812054613f6f5760405162461bcd60e51b81526020600482015260036024820152624d313760e81b6044820152606401610dce565b600080613f7c85856132f9565b6000888152600960209081526040808320600701546001600160a01b0316808452600890925282208054959850939650919450909284929190613fc0908490615a4f565b90915550506000868152600960209081526040808320600c01546001600160a01b03908116845260078352818420908516845290915281208054859290614008908490615a4f565b909155508290506140198486615a3c565b6140239190615a3c565b60008781526009602052604081208054909190614041908490615a4f565b909155505060008681526009602052604081206002018054879290614067908490615a3c565b9091555050600254604051637921219560e11b81526001600160a01b039091169063f242432a906140a290309033908b908b90600401615a84565b600060405180830381600087803b1580156140bc57600080fd5b505af11580156140d0573d6000803e3d6000fd5b506140ea925050506001600160a01b038216333087613e93565b60008681526009602090815260409182902080546002909101548351888152928301919091528183015290518691889133917f25b914bf0dcec2801fe2fd8bb0cf22531a55d31498f758c83a7841b5839cfd62919081900360600190a450505092915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000828152600960205260408120546141e15760405162461bcd60e51b81526020600482015260036024820152624d313760e81b6044820152606401610dce565b6141eb8383611fec565b6000848152600960205260408120600781015481549394506001600160a01b03169284929061421b908490615a3c565b909155505060008481526009602052604081206002018054859290614241908490615a4f565b9091555050600254604051637921219560e11b81526001600160a01b039091169063f242432a9061427c903390309089908990600401615a84565b600060405180830381600087803b15801561429657600080fd5b505af11580156142aa573d6000803e3d6000fd5b506142c3925050506001600160a01b0382163384613efe565b60008481526009602090815260409182902080546002909101548351868152928301919091528183015290518491869133917fe7f09dc659010c4a1b60a33773dd27491fbb9d1b5670ca317c413ba0db0f1bad919081900360600190a45092915050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106143665772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310614392576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106143b057662386f26fc10000830492506010015b6305f5e10083106143c8576305f5e100830492506008015b61271083106143dc57612710830492506004015b606483106143ee576064830492506002015b600a8310610b675760010192915050565b6000614454826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166144d19092919063ffffffff16565b80519091501561112257808060200190518101906144729190615f20565b6111225760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610dce565b60606144e084846000856144e8565b949350505050565b6060824710156145495760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610dce565b6001600160a01b0385163b6145a05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610dce565b600080866001600160a01b031685876040516145bc9190615f42565b60006040518083038185875af1925050503d80600081146145f9576040519150601f19603f3d011682016040523d82523d6000602084013e6145fe565b606091505b509150915061460e828286614619565b979650505050505050565b606083156146285750816126ac565b8251156146385782518084602001fd5b8160405162461bcd60e51b8152600401610dce9190614a07565b828054828255906000526020600020908101928215614698579160200282015b8281111561469857825182906146889082615cd6565b5091602001919060010190614672565b506146a4929150614748565b5090565b8280548282559060005260206000209081019282156146f5579160200282015b828111156146f557825180516146e5918491602090910190614701565b50916020019190600101906146c8565b506146a4929150614765565b82805482825590600052602060002090810192821561473c579160200282015b8281111561473c578251825591602001919060010190614721565b506146a4929150614782565b808211156146a457600061475c8282614797565b50600101614748565b808211156146a457600061477982826147d1565b50600101614765565b5b808211156146a45760008155600101614783565b5080546147a390615819565b6000825580601f106147b3575050565b601f0160209004906000526020600020908101906135a69190614782565b50805460008255906000526020600020908101906135a69190614782565b60006020828403121561480157600080fd5b81356001600160e01b0319811681146126ac57600080fd5b6001600160a01b03811681146135a657600080fd5b803561262c81614819565b60006020828403121561484b57600080fd5b81356126ac81614819565b60006020828403121561486857600080fd5b5035919050565b60005b8381101561488a578181015183820152602001614872565b50506000910152565b600081518084526148ab81602086016020860161486f565b601f01601f19169290920160200192915050565b60008282518085526020808601955060058183821b8501018287016000805b8681101561494b57601f1988850381018c5283518051808752908801908887019080891b88018a01865b8281101561493457858a8303018452614922828651614893565b948c0194938c01939150600101614908565b509e8a019e975050509387019350506001016148de565b50919998505050505050505050565b6020815260006126ac60208301846148bf565b60008083601f84011261497f57600080fd5b5081356001600160401b0381111561499657600080fd5b6020830191508360208285010111156149ae57600080fd5b9250929050565b600080600080606085870312156149cb57600080fd5b843593506020850135925060408501356001600160401b038111156149ef57600080fd5b6149fb8782880161496d565b95989497509550505050565b6020815260006126ac6020830184614893565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715614a5857614a58614a1a565b604052919050565b60006001600160401b03821115614a7957614a79614a1a565b50601f01601f191660200190565b600082601f830112614a9857600080fd5b8135614aab614aa682614a60565b614a30565b818152846020838601011115614ac057600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215614af357600080fd5b8435614afe81614819565b93506020850135614b0e81614819565b92506040850135915060608501356001600160401b03811115614b3057600080fd5b614b3c87828801614a87565b91505092959194509250565b60008083601f840112614b5a57600080fd5b5081356001600160401b03811115614b7157600080fd5b6020830191508360208260051b85010111156149ae57600080fd5b60008060208385031215614b9f57600080fd5b82356001600160401b03811115614bb557600080fd5b614bc185828601614b48565b90969095509350505050565b60008060408385031215614be057600080fd5b50508035926020909101359150565b60008060008060008060008060a0898b031215614c0b57600080fd5b88356001600160401b0380821115614c2257600080fd5b614c2e8c838d01614b48565b909a50985060208b0135915080821115614c4757600080fd5b614c538c838d01614b48565b909850965060408b0135955060608b0135945060808b0135915080821115614c7a57600080fd5b50614c878b828c01614b48565b999c989b5096995094979396929594505050565b600081518084526020808501808196508360051b8101915082860160005b85811015614ce3578284038952614cd1848351614893565b98850198935090840190600101614cb9565b5091979650505050505050565b6020815260006126ac6020830184614c9b565b60008060408385031215614d1657600080fd5b8235614d2181614819565b91506020830135614d3181614819565b809150509250929050565b600080600060408486031215614d5157600080fd5b8335925060208401356001600160401b03811115614d6e57600080fd5b614d7a8682870161496d565b9497909650939450505050565b60006001600160401b03821115614da057614da0614a1a565b5060051b60200190565b600082601f830112614dbb57600080fd5b81356020614dcb614aa683614d87565b82815260059290921b84018101918181019086841115614dea57600080fd5b8286015b84811015614e295780356001600160401b03811115614e0d5760008081fd5b614e1b8986838b0101614a87565b845250918301918301614dee565b509695505050505050565b600080600080600080600080600080600060e08c8e031215614e5557600080fd5b8b359a506001600160401b038060208e01351115614e7257600080fd5b614e828e60208f01358f01614b48565b909b50995060408d0135811015614e9857600080fd5b614ea88e60408f01358f01614b48565b909950975060608d0135811015614ebe57600080fd5b614ece8e60608f01358f01614daa565b96508060808e01351115614ee157600080fd5b614ef18e60808f01358f01614daa565b95508060a08e01351115614f0457600080fd5b614f148e60a08f01358f01614b48565b909550935060c08d0135811015614f2a57600080fd5b50614f3b8d60c08e01358e01614b48565b81935080925050509295989b509295989b9093969950565b600080600060608486031215614f6857600080fd5b8335925060208401356001600160401b0380821115614f8657600080fd5b614f9287838801614daa565b93506040860135915080821115614fa857600080fd5b50614fb586828701614daa565b9150509250925092565b600080600080600060608688031215614fd757600080fd5b85356001600160401b0380821115614fee57600080fd5b614ffa89838a01614b48565b9097509550602088013591508082111561501357600080fd5b5061502088828901614b48565b96999598509660400135949350505050565b600081518084526020808501808196508360051b810191508286016000805b868110156150a0578385038a52825180518087529087019087870190845b8181101561508b5783518352928901929189019160010161506f565b50509a87019a95505091850191600101615051565b509298975050505050505050565b6020815260006126ac6020830184615032565b600082601f8301126150d257600080fd5b813560206150e2614aa683614d87565b82815260059290921b8401810191818101908684111561510157600080fd5b8286015b84811015614e295780356001600160401b038111156151245760008081fd5b6151328986838b0101614daa565b845250918301918301615105565b600082601f83011261515157600080fd5b81356020615161614aa683614d87565b82815260059290921b8401810191818101908684111561518057600080fd5b8286015b84811015614e295780358352918301918301615184565b600082601f8301126151ac57600080fd5b813560206151bc614aa683614d87565b82815260059290921b840181019181810190868411156151db57600080fd5b8286015b84811015614e295780356001600160401b03808211156151fe57600080fd5b818901915089603f83011261521257600080fd5b85820135615222614aa682614d87565b81815260059190911b830160400190878101908c83111561524257600080fd5b604085015b8381101561527b5780358581111561525e57600080fd5b61526d8f6040838a0101615140565b845250918901918901615247565b508752505050928401925083016151df565b6000806000806000806000806000806101208b8d0312156152ad57600080fd5b6152b68b61482e565b995060208b0135985060408b01356001600160401b03808211156152d957600080fd5b6152e58e838f01614a87565b995060608d01359150808211156152fb57600080fd5b6153078e838f01614daa565b985060808d013591508082111561531d57600080fd5b6153298e838f01614daa565b975060a08d013591508082111561533f57600080fd5b61534b8e838f016150c1565b965060c08d013591508082111561536157600080fd5b61536d8e838f016150c1565b955060e08d013591508082111561538357600080fd5b61538f8e838f0161519b565b94506101008d01359150808211156153a657600080fd5b506153b38d828e01614b48565b915080935050809150509295989b9194979a5092959850565b600080602083850312156153df57600080fd5b82356001600160401b038111156153f557600080fd5b614bc18582860161496d565b60008060006060848603121561541657600080fd5b505081359360208301359350604090920135919050565b600080600080600060a0868803121561544557600080fd5b853561545081614819565b9450602086013561546081614819565b935060408601356001600160401b038082111561547c57600080fd5b61548889838a01615140565b9450606088013591508082111561549e57600080fd5b6154aa89838a01615140565b935060808801359150808211156154c057600080fd5b506154cd88828901614a87565b9150509295509295909350565b6000806000604084860312156154ef57600080fd5b8335925060208401356001600160401b038082111561550d57600080fd5b818601915086601f83011261552157600080fd5b81358181111561553057600080fd5b8760206101208302850101111561554657600080fd5b6020830194508093505050509250925092565b6000806000806000806080878903121561557257600080fd5b8635955060208701356001600160401b038082111561559057600080fd5b61559c8a838b01614b48565b909750955060408901359150808211156155b557600080fd5b6155c18a838b01614b48565b909550935060608901359150808211156155da57600080fd5b506155e789828a01615140565b9150509295509295509295565b60008060008060008060008060008060006101608c8e03121561561657600080fd5b8b359a5060208c013561562881614819565b995060408c0135985060608c0135975060808c0135965060a08c0135955060c08c013561565481614819565b8095505060e08c013593506101008c013592506101208c013591506101408c013590509295989b509295989b9093969950565b600080600080600060a0868803121561569f57600080fd5b85356156aa81614819565b945060208601356156ba81614819565b9350604086013592506060860135915060808601356001600160401b038111156156e357600080fd5b6154cd88828901614a87565b60008060006040848603121561570457600080fd5b8335925060208401356001600160401b0381111561572157600080fd5b614d7a86828701614b48565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561575557600080fd5b81516001600160401b0381111561576b57600080fd5b8201601f8101841361577c57600080fd5b805161578a614aa682614a60565b81815285602083850101111561579f57600080fd5b61169e82602083016020860161486f565b634e487b7160e01b600052601160045260246000fd5b6000600182016157d8576157d86157b0565b5060010190565b60208082526003908201526250303160e81b604082015260600190565b60208082526003908201526228181960e91b604082015260600190565b600181811c9082168061582d57607f821691505b60208210810361584d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561112257600081815260208120601f850160051c8101602086101561587a5750805b601f850160051c820191505b81811015610e2d57828155600101615886565b6001600160401b038311156158b0576158b0614a1a565b6158c4836158be8354615819565b83615853565b6000601f8411600181146158f857600085156158e05750838201355b600019600387901b1c1916600186901b1783556119c0565b600083815260209020601f19861690835b828110156159295786850135825560209485019460019092019101615909565b50868210156159465760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6000815461596581615819565b6001828116801561597d5760018114615992576159c1565b60ff19841687528215158302870194506159c1565b8560005260208060002060005b858110156159b85781548a82015290840190820161599f565b50505082870194505b5050505092915050565b60006159d78285615958565b83516159e781836020880161486f565b01949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b8082028115828204841417610b6757610b676157b0565b81810381811115610b6757610b676157b0565b80820180821115610b6757610b676157b0565b600082615a7f57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b602080825260039082015262140c0d60ea1b604082015260600190565b81835260006001600160fb1b03831115615af257600080fd5b8260051b80836020870137939093016020019392505050565b8183526000602080850194508260005b85811015615b49578135615b2e81614819565b6001600160a01b031687529582019590820190600101615b1b565b509495945050505050565b608081526000615b676080830189614c9b565b602083820381850152615b7a828a614c9b565b84810360408601528781529150808201600588811b840183018a60005b8b811015615c0857868303601f190185528135368e9003601e19018112615bbd57600080fd5b8d0186810190356001600160401b03811115615bd857600080fd5b80861b3603821315615be957600080fd5b615bf4858284615ad9565b968801969450505090850190600101615b97565b50508681036060880152615c1d81898b615b0b565b9d9c50505050505050505050505050565b600082601f830112615c3f57600080fd5b81516020615c4f614aa683614d87565b82815260059290921b84018101918181019086841115615c6e57600080fd5b8286015b84811015614e295780518352918301918301615c72565b600060208284031215615c9b57600080fd5b81516001600160401b03811115615cb157600080fd5b6144e084828501615c2e565b600060208284031215615ccf57600080fd5b5051919050565b81516001600160401b03811115615cef57615cef614a1a565b615d0381615cfd8454615819565b84615853565b602080601f831160018114615d385760008415615d205750858301515b600019600386901b1c1916600185901b178555610e2d565b600085815260208120601f198616915b82811015615d6757888601518255948401946001909101908401615d48565b5085821015615d855787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608081526000615da860808301886148bf565b602083820381850152615dbb82896148bf565b915083820360408501528187518084528284019150828160051b850101838a0160005b83811015615e0c57601f19878403018552615dfa838351615032565b94860194925090850190600101615dde565b50508681036060880152615e2181898b615b0b565b9c9b505050505050505050505050565b60006020808385031215615e4457600080fd5b82516001600160401b0380821115615e5b57600080fd5b818501915085601f830112615e6f57600080fd5b8151615e7d614aa682614d87565b81815260059190911b83018401908481019088831115615e9c57600080fd5b8585015b83811015615ed457805185811115615eb85760008081fd5b615ec68b89838a0101615c2e565b845250918601918601615ea0565b5098975050505050505050565b60006126ac8284615958565b600060208284031215615eff57600080fd5b81516126ac81614819565b634e487b7160e01b600052603160045260246000fd5b600060208284031215615f3257600080fd5b815180151581146126ac57600080fd5b60008251615f5481846020870161486f565b919091019291505056fea2646970667358221220573af0a95fe00534b2f5be0456f458acf6178f5f776deea56a1d3e72d561791d64736f6c63430008110033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Studio.sol:Studio",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 6555,
        "contract": "contracts/Studio.sol:Studio",
        "label": "canvas",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(ICanvas)8163"
      },
      {
        "astId": 6558,
        "contract": "contracts/Studio.sol:Studio",
        "label": "element",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IElement)8259"
      },
      {
        "astId": 6560,
        "contract": "contracts/Studio.sol:Studio",
        "label": "baseURI",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 6564,
        "contract": "contracts/Studio.sol:Studio",
        "label": "whitelistedArtists",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 6569,
        "contract": "contracts/Studio.sol:Studio",
        "label": "projects",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(ProjectData)8464_storage)"
      },
      {
        "astId": 5102,
        "contract": "contracts/Studio.sol:Studio",
        "label": "auctionStartDelay",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 5108,
        "contract": "contracts/Studio.sol:Studio",
        "label": "artistClaimableRevenues",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 5112,
        "contract": "contracts/Studio.sol:Studio",
        "label": "platformRevenues",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 5117,
        "contract": "contracts/Studio.sol:Studio",
        "label": "markets",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_struct(Market)8437_storage)"
      },
      {
        "astId": 5121,
        "contract": "contracts/Studio.sol:Studio",
        "label": "approvedERC20s",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 7559,
        "contract": "contracts/Studio.sol:Studio",
        "label": "canvases",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_struct(CanvasData)8487_storage)"
      },
      {
        "astId": 7563,
        "contract": "contracts/Studio.sol:Studio",
        "label": "userNonces",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_array(t_uint256)dyn_storage)dyn_storage": {
        "base": "t_array(t_uint256)dyn_storage",
        "encoding": "dynamic_array",
        "label": "uint256[][]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(ICanvas)8163": {
        "encoding": "inplace",
        "label": "contract ICanvas",
        "numberOfBytes": "20"
      },
      "t_contract(IElement)8259": {
        "encoding": "inplace",
        "label": "contract IElement",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_uint256,t_struct(CanvasData)8487_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct IStudio.CanvasData)",
        "numberOfBytes": "32",
        "value": "t_struct(CanvasData)8487_storage"
      },
      "t_mapping(t_uint256,t_struct(Market)8437_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct IMarketplace.Market)",
        "numberOfBytes": "32",
        "value": "t_struct(Market)8437_storage"
      },
      "t_mapping(t_uint256,t_struct(ProjectData)8464_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct IProjects.ProjectData)",
        "numberOfBytes": "32",
        "value": "t_struct(ProjectData)8464_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(CanvasData)8487_storage": {
        "encoding": "inplace",
        "label": "struct IStudio.CanvasData",
        "members": [
          {
            "astId": 8481,
            "contract": "contracts/Studio.sol:Studio",
            "label": "wrapped",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 8484,
            "contract": "contracts/Studio.sol:Studio",
            "label": "wrappedElementTokenIds",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 8486,
            "contract": "contracts/Studio.sol:Studio",
            "label": "hash",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Market)8437_storage": {
        "encoding": "inplace",
        "label": "struct IMarketplace.Market",
        "members": [
          {
            "astId": 8412,
            "contract": "contracts/Studio.sol:Studio",
            "label": "ammERC20Balance",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 8414,
            "contract": "contracts/Studio.sol:Studio",
            "label": "auctionERC20Balance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 8416,
            "contract": "contracts/Studio.sol:Studio",
            "label": "ammElementBalance",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 8418,
            "contract": "contracts/Studio.sol:Studio",
            "label": "reserveElementBalance",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 8420,
            "contract": "contracts/Studio.sol:Studio",
            "label": "auctionElementBalance",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 8422,
            "contract": "contracts/Studio.sol:Studio",
            "label": "reserveElementBalanceInitial",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 8424,
            "contract": "contracts/Studio.sol:Studio",
            "label": "auctionElementBalanceInitial",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 8426,
            "contract": "contracts/Studio.sol:Studio",
            "label": "erc20",
            "offset": 0,
            "slot": "7",
            "type": "t_address"
          },
          {
            "astId": 8428,
            "contract": "contracts/Studio.sol:Studio",
            "label": "auctionStartTime",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 8430,
            "contract": "contracts/Studio.sol:Studio",
            "label": "auctionEndTime",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 8432,
            "contract": "contracts/Studio.sol:Studio",
            "label": "auctionStartPrice",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 8434,
            "contract": "contracts/Studio.sol:Studio",
            "label": "auctionEndPrice",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          },
          {
            "astId": 8436,
            "contract": "contracts/Studio.sol:Studio",
            "label": "artist",
            "offset": 0,
            "slot": "12",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "416"
      },
      "t_struct(ProjectData)8464_storage": {
        "encoding": "inplace",
        "label": "struct IProjects.ProjectData",
        "members": [
          {
            "astId": 8442,
            "contract": "contracts/Studio.sol:Studio",
            "label": "locked",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 8444,
            "contract": "contracts/Studio.sol:Studio",
            "label": "artistAddress",
            "offset": 1,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 8448,
            "contract": "contracts/Studio.sol:Studio",
            "label": "scripts",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_string_storage)"
          },
          {
            "astId": 8451,
            "contract": "contracts/Studio.sol:Studio",
            "label": "elementCategoryLabels",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 8454,
            "contract": "contracts/Studio.sol:Studio",
            "label": "elementCategoryValues",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 8458,
            "contract": "contracts/Studio.sol:Studio",
            "label": "elementTokenIds",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_array(t_uint256)dyn_storage)dyn_storage"
          },
          {
            "astId": 8461,
            "contract": "contracts/Studio.sol:Studio",
            "label": "blankCanvasIds",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 8463,
            "contract": "contracts/Studio.sol:Studio",
            "label": "metadata",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}